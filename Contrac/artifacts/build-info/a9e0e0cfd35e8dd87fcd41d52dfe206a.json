{
	"id": "a9e0e0cfd35e8dd87fcd41d52dfe206a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"nftmarket_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/Counters.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.18;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.18;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC2981.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.18;\n\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.18;\n\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.18;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.18;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.18;\n\n\n// File: @openzeppelin/contracts/interfaces/IERC4906.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.18;\n\n\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.18;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.18;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.18;\n\n\n\n\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n\n// File: nftmarket.sol\n\n\npragma solidity ^0.8.18;\n\n\n\n\n\n//https://orange-absolute-barracuda-733.mypinata.cloud/ipfs/Qma34JYoFDhwy4B3nMqodPUhhXzTt2xgeQ6FRXRwhdqTee/1.json\n\ncontract NFTMarketplace is  ERC721URIStorage,   IERC2981 {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIdCounter;\n\n    string public baseTokenURI;\n    uint256 public royaltyPercentage = 10; // 100 represents 1%, you can adjust this\n    address contractOwner;\n    struct NFT {\n        address creator;\n        uint256 price;\n    }\n\n    mapping (address => mapping( uint => bool)) isSell;\n    mapping (address => mapping( uint => bool)) isSold;\n    mapping(uint256 => NFT) public nfts;\n\n    constructor( ) ERC721(\"My Nft\", \"MNFT\")  \n    {\n       contractOwner= msg.sender;\n    }\n\n\n    function setBaseURI(string memory newBaseTokenURI) public   {\n        baseTokenURI = newBaseTokenURI;\n    }\n\n    function mintNFT(string memory tokenURI, uint price) public {\n        uint256 tokenId = _tokenIdCounter.current();\n        _safeMint(msg.sender, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n         nfts[tokenId]= NFT(msg.sender, price);\n        isSold [msg.sender][tokenId]=false;\n       _tokenIdCounter.increment();\n\n    }\n\n    function SellNft(uint tokenId) public  {\n        require(msg.sender == ownerOf(tokenId), \"Your are Authorize to sell\");\n        isSell[msg.sender][tokenId]=true;\n    }\n\n    function SoldNft (uint tokenids) public view returns (bool) {\n        address ads= ownerOf(tokenids);\n        return isSold[ads][tokenids];\n    }\n\n    function isSellNft (uint tokenid) public view returns (bool) {\n        address ad = ownerOf(tokenid);\n        return isSell[ad][tokenid];\n    }\n\n    function KnowPrice( uint tokenIds) public view returns (uint) {\n\n        NFT memory info = nfts[tokenIds];\n        return info.price;\n\n    }\n\n    function getBalance(address ads) public view returns (uint256) {\n        \n      return ads.balance;\n    }\n\n    function getTotalToken() public view returns(uint){\n        return _tokenIdCounter.current();\n    }\n\n    function BuyNFT(uint256 tokenId) public payable  {\n        \n        address tokenOwner = ownerOf(tokenId);\n        require(isSell[tokenOwner][tokenId]== true, \"Token is not at sale\");\n\n        address buyer = msg.sender;\n        uint256 price = nfts[tokenId].price;\n        require(tokenOwner != buyer, \"Cannot buy your own NFT\");\n        require(msg.value == price, \"Supply Exact fund\");\n\n        // Transfer the NFT to the buyer\n        _transfer(tokenOwner, buyer, tokenId);\n\n        // Pay royalties to the contract creator\n        uint256 royalties = (price * royaltyPercentage) / 100; // Calculate royalties\n        payable(contractOwner).transfer(royalties); // Pay the royalties to the creator\n\n        // Pay the seller the remaining amount\n        payable(tokenOwner).transfer(price - royalties);\n\n    }\n\n    function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {\n        uint256 royalties = (value * royaltyPercentage) / 100;\n        return (contractOwner, royalties); // Marketplace owner receives royalties\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nftmarket_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nftmarket_flattened.sol\":479:1450  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nftmarket_flattened.sol\":479:1450  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122082ea4cb6eae265f25d059c837851e1857d7b7a972a8380def03ab24f636cf0a464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122082ea4cb6eae265f25d059c837851e1857d7b7a972a8380def03ab24f636cf0a464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xEA 0x4C 0xB6 0xEA 0xE2 PUSH6 0xF25D059C8378 MLOAD 0xE1 DUP6 PUSH30 0x7B7A972A8380DEF03AB24F636CF0A464736F6C6343000814003300000000 ",
							"sourceMap": "479:971:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122082ea4cb6eae265f25d059c837851e1857d7b7a972a8380def03ab24f636cf0a464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xEA 0x4C 0xB6 0xEA 0xE2 PUSH6 0xF25D059C8378 MLOAD 0xE1 DUP6 PUSH30 0x7B7A972A8380DEF03AB24F636CF0A464736F6C6343000814003300000000 ",
							"sourceMap": "479:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1450,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082ea4cb6eae265f25d059c837851e1857d7b7a972a8380def03ab24f636cf0a464736f6c63430008140033",
									".code": [
										{
											"begin": 479,
											"end": 1450,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 1450,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"nftmarket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1880,
								"contract": "nftmarket_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1882,
								"contract": "nftmarket_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1886,
								"contract": "nftmarket_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1890,
								"contract": "nftmarket_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1894,
								"contract": "nftmarket_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1900,
								"contract": "nftmarket_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1880,
								"contract": "nftmarket_flattened.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1882,
								"contract": "nftmarket_flattened.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1886,
								"contract": "nftmarket_flattened.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1890,
								"contract": "nftmarket_flattened.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1894,
								"contract": "nftmarket_flattened.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1900,
								"contract": "nftmarket_flattened.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2875,
								"contract": "nftmarket_flattened.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC2981\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nftmarket_flattened.sol\":9538:24452  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nftmarket_flattened.sol\":9538:24452  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc323fce0a6960c64120e8f5a5ebf166c3999f04c05d7ee2042bd0db43ac420a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fc323fce0a6960c64120e8f5a5ebf166c3999f04c05d7ee2042bd0db43ac420a64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC ORIGIN EXTCODEHASH 0xCE EXP PUSH10 0x60C64120E8F5A5EBF166 0xC3 SWAP10 SWAP16 DIV 0xC0 0x5D PUSH31 0xE2042BD0DB43AC420A64736F6C634300081400330000000000000000000000 ",
							"sourceMap": "9538:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fc323fce0a6960c64120e8f5a5ebf166c3999f04c05d7ee2042bd0db43ac420a64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC ORIGIN EXTCODEHASH 0xCE EXP PUSH10 0x60C64120E8F5A5EBF166 0xC3 SWAP10 SWAP16 DIV 0xC0 0x5D PUSH31 0xE2042BD0DB43AC420A64736F6C634300081400330000000000000000000000 ",
							"sourceMap": "9538:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9538,
									"end": 24452,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc323fce0a6960c64120e8f5a5ebf166c3999f04c05d7ee2042bd0db43ac420a64736f6c63430008140033",
									".code": [
										{
											"begin": 9538,
											"end": 24452,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9538,
											"end": 24452,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"nftmarket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "BuyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIds",
									"type": "uint256"
								}
							],
							"name": "KnowPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SellNft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenids",
									"type": "uint256"
								}
							],
							"name": "SoldNft",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ads",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenid",
									"type": "uint256"
								}
							],
							"name": "isSellNft",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "mintNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nfts",
							"outputs": [
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newBaseTokenURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nftmarket_flattened.sol\":58306:61305  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\n  mstore(0x40, 0x80)\n    /* \"nftmarket_flattened.sol\":58524:58526  10 */\n  0x0a\n    /* \"nftmarket_flattened.sol\":58489:58526  uint256 public royaltyPercentage = 10 */\n  0x09\n  sstore\n    /* \"nftmarket_flattened.sol\":58827:58914  constructor( ) ERC721(\"My Nft\", \"MNFT\")  ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"nftmarket_flattened.sol\":39875:39988  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79204e66740000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"nftmarket_flattened.sol\":39949:39954  name_ */\n  dup2\n    /* \"nftmarket_flattened.sol\":39941:39946  _name */\n  0x00\n    /* \"nftmarket_flattened.sol\":39941:39954  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"nftmarket_flattened.sol\":39974:39981  symbol_ */\n  dup1\n    /* \"nftmarket_flattened.sol\":39964:39971  _symbol */\n  0x01\n    /* \"nftmarket_flattened.sol\":39964:39981  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"nftmarket_flattened.sol\":39875:39988  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"nftmarket_flattened.sol\":58897:58907  msg.sender */\n  caller\n    /* \"nftmarket_flattened.sol\":58882:58895  contractOwner */\n  0x0a\n  0x00\n    /* \"nftmarket_flattened.sol\":58882:58907  contractOwner= msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nftmarket_flattened.sol\":58306:61305  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"nftmarket_flattened.sol\":58306:61305  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nftmarket_flattened.sol\":58306:61305  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa90d14e2\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd547cfb7\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd547cfb7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2a413b5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0xa90d14e2\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7d7f1f3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8a71bb2d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa37365e0\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x2a55205a\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x55f804b3\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5a51a885\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5afa3a72\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x2a55205a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3d0673d4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x265aa621\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"nftmarket_flattened.sol\":56980:57187  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":40859:40948  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":41991:42145  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":41817:41930  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"nftmarket_flattened.sol\":42637:43215  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"nftmarket_flattened.sol\":58785:58820  mapping(uint256 => NFT) public nfts */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":61024:61303  function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":60100:60199  function getTotalToken() public view returns(uint){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":43281:43413  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"nftmarket_flattened.sol\":58921:59028  function setBaseURI(string memory newBaseTokenURI) public   {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"nftmarket_flattened.sol\":59843:59983  function KnowPrice( uint tokenIds) public view returns (uint) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":59034:59364  function mintNFT(string memory tokenURI, uint price) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"nftmarket_flattened.sol\":40679:40797  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":40414:40622  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":59543:59688  function SoldNft (uint tokenids) public view returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":58489:58526  uint256 public royaltyPercentage = 10 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":41012:41105  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":42212:42356  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n    tag_123:\n      stop\n        /* \"nftmarket_flattened.sol\":60205:61018  function BuyNFT(uint256 tokenId) public payable  {... */\n    tag_20:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"nftmarket_flattened.sol\":59370:59537  function SellNft(uint tokenId) public  {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"nftmarket_flattened.sol\":43479:43687  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      stop\n        /* \"nftmarket_flattened.sol\":57253:57846  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":58457:58483  string public baseTokenURI */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":42422:42575  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":59694:59837  function isSellNft (uint tokenid) public view returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":59989:60094  function getBalance(address ads) public view returns (uint256) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket_flattened.sol\":56980:57187  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_37:\n        /* \"nftmarket_flattened.sol\":57082:57086  bool */\n      0x00\n        /* \"nftmarket_flattened.sol\":56803:56813  0x49064906 */\n      0x49064906\n        /* \"nftmarket_flattened.sol\":56796:56814  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"nftmarket_flattened.sol\":57105:57140  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nftmarket_flattened.sol\":57105:57116  interfaceId */\n      dup3\n        /* \"nftmarket_flattened.sol\":57105:57140  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":57105:57180  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":57144:57180  super.supportsInterface(interfaceId) */\n      tag_166\n        /* \"nftmarket_flattened.sol\":57168:57179  interfaceId */\n      dup3\n        /* \"nftmarket_flattened.sol\":57144:57167  super.supportsInterface */\n      tag_167\n        /* \"nftmarket_flattened.sol\":57144:57180  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_166:\n        /* \"nftmarket_flattened.sol\":57105:57180  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_165:\n        /* \"nftmarket_flattened.sol\":57098:57180  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":56980:57187  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":40859:40948  function name() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"nftmarket_flattened.sol\":40904:40917  string memory */\n      0x60\n        /* \"nftmarket_flattened.sol\":40936:40941  _name */\n      0x00\n        /* \"nftmarket_flattened.sol\":40929:40941  return _name */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":40859:40948  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":41991:42145  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_49:\n        /* \"nftmarket_flattened.sol\":42058:42065  address */\n      0x00\n        /* \"nftmarket_flattened.sol\":42077:42099  _requireOwned(tokenId) */\n      tag_176\n        /* \"nftmarket_flattened.sol\":42091:42098  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":42077:42090  _requireOwned */\n      tag_177\n        /* \"nftmarket_flattened.sol\":42077:42099  _requireOwned(tokenId) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"nftmarket_flattened.sol\":42117:42138  _getApproved(tokenId) */\n      tag_178\n        /* \"nftmarket_flattened.sol\":42130:42137  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":42117:42129  _getApproved */\n      tag_179\n        /* \"nftmarket_flattened.sol\":42117:42138  _getApproved(tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"nftmarket_flattened.sol\":42110:42138  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":41991:42145  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":41817:41930  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_56:\n        /* \"nftmarket_flattened.sol\":41888:41923  _approve(to, tokenId, _msgSender()) */\n      tag_181\n        /* \"nftmarket_flattened.sol\":41897:41899  to */\n      dup3\n        /* \"nftmarket_flattened.sol\":41901:41908  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":41910:41922  _msgSender() */\n      tag_182\n        /* \"nftmarket_flattened.sol\":41910:41920  _msgSender */\n      tag_183\n        /* \"nftmarket_flattened.sol\":41910:41922  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"nftmarket_flattened.sol\":41888:41896  _approve */\n      tag_184\n        /* \"nftmarket_flattened.sol\":41888:41923  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_181:\n        /* \"nftmarket_flattened.sol\":41817:41930  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":42637:43215  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_61:\n        /* \"nftmarket_flattened.sol\":42745:42746  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":42731:42747  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":42731:42733  to */\n      dup3\n        /* \"nftmarket_flattened.sol\":42731:42747  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":42727:42814  if (to == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"nftmarket_flattened.sol\":42800:42801  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":42770:42803  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":42727:42814  if (to == address(0)) {... */\n    tag_186:\n        /* \"nftmarket_flattened.sol\":43032:43053  address previousOwner */\n      0x00\n        /* \"nftmarket_flattened.sol\":43056:43090  _update(to, tokenId, _msgSender()) */\n      tag_188\n        /* \"nftmarket_flattened.sol\":43064:43066  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":43068:43075  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":43077:43089  _msgSender() */\n      tag_189\n        /* \"nftmarket_flattened.sol\":43077:43087  _msgSender */\n      tag_183\n        /* \"nftmarket_flattened.sol\":43077:43089  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"nftmarket_flattened.sol\":43056:43063  _update */\n      tag_190\n        /* \"nftmarket_flattened.sol\":43056:43090  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_188:\n        /* \"nftmarket_flattened.sol\":43032:43090  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":43121:43125  from */\n      dup4\n        /* \"nftmarket_flattened.sol\":43104:43125  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":43104:43117  previousOwner */\n      dup2\n        /* \"nftmarket_flattened.sol\":43104:43125  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":43100:43209  if (previousOwner != from) {... */\n      tag_191\n      jumpi\n        /* \"nftmarket_flattened.sol\":43169:43173  from */\n      dup4\n        /* \"nftmarket_flattened.sol\":43175:43182  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":43184:43197  previousOwner */\n      dup3\n        /* \"nftmarket_flattened.sol\":43148:43198  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":43100:43209  if (previousOwner != from) {... */\n    tag_191:\n        /* \"nftmarket_flattened.sol\":42717:43215  {... */\n      pop\n        /* \"nftmarket_flattened.sol\":42637:43215  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":58785:58820  mapping(uint256 => NFT) public nfts */\n    tag_65:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":61024:61303  function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {... */\n    tag_72:\n        /* \"nftmarket_flattened.sol\":61109:61125  address receiver */\n      0x00\n        /* \"nftmarket_flattened.sol\":61127:61148  uint256 royaltyAmount */\n      dup1\n        /* \"nftmarket_flattened.sol\":61160:61177  uint256 royalties */\n      0x00\n        /* \"nftmarket_flattened.sol\":61210:61213  100 */\n      0x64\n        /* \"nftmarket_flattened.sol\":61189:61206  royaltyPercentage */\n      sload(0x09)\n        /* \"nftmarket_flattened.sol\":61181:61186  value */\n      dup6\n        /* \"nftmarket_flattened.sol\":61181:61206  value * royaltyPercentage */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"nftmarket_flattened.sol\":61180:61213  (value * royaltyPercentage) / 100 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"nftmarket_flattened.sol\":61160:61213  uint256 royalties = (value * royaltyPercentage) / 100 */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":61231:61244  contractOwner */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":61246:61255  royalties */\n      dup2\n        /* \"nftmarket_flattened.sol\":61223:61256  return (contractOwner, royalties) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":61024:61303  function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":60100:60199  function getTotalToken() public view returns(uint){... */\n    tag_76:\n        /* \"nftmarket_flattened.sol\":60145:60149  uint */\n      0x00\n        /* \"nftmarket_flattened.sol\":60167:60192  _tokenIdCounter.current() */\n      tag_200\n        /* \"nftmarket_flattened.sol\":60167:60182  _tokenIdCounter */\n      0x07\n        /* \"nftmarket_flattened.sol\":60167:60190  _tokenIdCounter.current */\n      tag_201\n        /* \"nftmarket_flattened.sol\":60167:60192  _tokenIdCounter.current() */\n      jump\t// in\n    tag_200:\n        /* \"nftmarket_flattened.sol\":60160:60192  return _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":60100:60199  function getTotalToken() public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":43281:43413  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_82:\n        /* \"nftmarket_flattened.sol\":43367:43406  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_203\n        /* \"nftmarket_flattened.sol\":43384:43388  from */\n      dup4\n        /* \"nftmarket_flattened.sol\":43390:43392  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":43394:43401  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":43367:43406  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nftmarket_flattened.sol\":43367:43383  safeTransferFrom */\n      tag_138\n        /* \"nftmarket_flattened.sol\":43367:43406  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_203:\n        /* \"nftmarket_flattened.sol\":43281:43413  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":58921:59028  function setBaseURI(string memory newBaseTokenURI) public   {... */\n    tag_87:\n        /* \"nftmarket_flattened.sol\":59006:59021  newBaseTokenURI */\n      dup1\n        /* \"nftmarket_flattened.sol\":58991:59003  baseTokenURI */\n      0x08\n        /* \"nftmarket_flattened.sol\":58991:59021  baseTokenURI = newBaseTokenURI */\n      swap1\n      dup2\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      pop\n        /* \"nftmarket_flattened.sol\":58921:59028  function setBaseURI(string memory newBaseTokenURI) public   {... */\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":59843:59983  function KnowPrice( uint tokenIds) public view returns (uint) {... */\n    tag_91:\n        /* \"nftmarket_flattened.sol\":59899:59903  uint */\n      0x00\n        /* \"nftmarket_flattened.sol\":59916:59931  NFT memory info */\n      dup1\n        /* \"nftmarket_flattened.sol\":59934:59938  nfts */\n      0x0d\n        /* \"nftmarket_flattened.sol\":59934:59948  nfts[tokenIds] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59939:59947  tokenIds */\n      dup5\n        /* \"nftmarket_flattened.sol\":59934:59948  nfts[tokenIds] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":59916:59948  NFT memory info = nfts[tokenIds] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":59965:59969  info */\n      dup1\n        /* \"nftmarket_flattened.sol\":59965:59975  info.price */\n      0x20\n      add\n      mload\n        /* \"nftmarket_flattened.sol\":59958:59975  return info.price */\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":59843:59983  function KnowPrice( uint tokenIds) public view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":59034:59364  function mintNFT(string memory tokenURI, uint price) public {... */\n    tag_97:\n        /* \"nftmarket_flattened.sol\":59104:59119  uint256 tokenId */\n      0x00\n        /* \"nftmarket_flattened.sol\":59122:59147  _tokenIdCounter.current() */\n      tag_209\n        /* \"nftmarket_flattened.sol\":59122:59137  _tokenIdCounter */\n      0x07\n        /* \"nftmarket_flattened.sol\":59122:59145  _tokenIdCounter.current */\n      tag_201\n        /* \"nftmarket_flattened.sol\":59122:59147  _tokenIdCounter.current() */\n      jump\t// in\n    tag_209:\n        /* \"nftmarket_flattened.sol\":59104:59147  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":59157:59187  _safeMint(msg.sender, tokenId) */\n      tag_210\n        /* \"nftmarket_flattened.sol\":59167:59177  msg.sender */\n      caller\n        /* \"nftmarket_flattened.sol\":59179:59186  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":59157:59166  _safeMint */\n      tag_211\n        /* \"nftmarket_flattened.sol\":59157:59187  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"nftmarket_flattened.sol\":59197:59228  _setTokenURI(tokenId, tokenURI) */\n      tag_212\n        /* \"nftmarket_flattened.sol\":59210:59217  tokenId */\n      dup2\n        /* \"nftmarket_flattened.sol\":59219:59227  tokenURI */\n      dup5\n        /* \"nftmarket_flattened.sol\":59197:59209  _setTokenURI */\n      tag_213\n        /* \"nftmarket_flattened.sol\":59197:59228  _setTokenURI(tokenId, tokenURI) */\n      jump\t// in\n    tag_212:\n        /* \"nftmarket_flattened.sol\":59254:59276  NFT(msg.sender, price) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"nftmarket_flattened.sol\":59258:59268  msg.sender */\n      caller\n        /* \"nftmarket_flattened.sol\":59254:59276  NFT(msg.sender, price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nftmarket_flattened.sol\":59270:59275  price */\n      dup4\n        /* \"nftmarket_flattened.sol\":59254:59276  NFT(msg.sender, price) */\n      dup2\n      mstore\n      pop\n        /* \"nftmarket_flattened.sol\":59239:59243  nfts */\n      0x0d\n        /* \"nftmarket_flattened.sol\":59239:59252  nfts[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59244:59251  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":59239:59252  nfts[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":59239:59276  nfts[tokenId]= NFT(msg.sender, price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":59315:59320  false */\n      0x00\n        /* \"nftmarket_flattened.sol\":59286:59292  isSold */\n      0x0c\n        /* \"nftmarket_flattened.sol\":59286:59305  isSold [msg.sender] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59294:59304  msg.sender */\n      caller\n        /* \"nftmarket_flattened.sol\":59286:59305  isSold [msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":59286:59314  isSold [msg.sender][tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59306:59313  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":59286:59314  isSold [msg.sender][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket_flattened.sol\":59286:59320  isSold [msg.sender][tokenId]=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":59329:59356  _tokenIdCounter.increment() */\n      tag_214\n        /* \"nftmarket_flattened.sol\":59329:59344  _tokenIdCounter */\n      0x07\n        /* \"nftmarket_flattened.sol\":59329:59354  _tokenIdCounter.increment */\n      tag_215\n        /* \"nftmarket_flattened.sol\":59329:59356  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_214:\n        /* \"nftmarket_flattened.sol\":59094:59364  {... */\n      pop\n        /* \"nftmarket_flattened.sol\":59034:59364  function mintNFT(string memory tokenURI, uint price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":40679:40797  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_101:\n        /* \"nftmarket_flattened.sol\":40742:40749  address */\n      0x00\n        /* \"nftmarket_flattened.sol\":40768:40790  _requireOwned(tokenId) */\n      tag_217\n        /* \"nftmarket_flattened.sol\":40782:40789  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":40768:40781  _requireOwned */\n      tag_177\n        /* \"nftmarket_flattened.sol\":40768:40790  _requireOwned(tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"nftmarket_flattened.sol\":40761:40790  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":40679:40797  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":40414:40622  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_107:\n        /* \"nftmarket_flattened.sol\":40477:40484  uint256 */\n      0x00\n        /* \"nftmarket_flattened.sol\":40517:40518  0 */\n      dup1\n        /* \"nftmarket_flattened.sol\":40500:40519  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":40500:40505  owner */\n      dup3\n        /* \"nftmarket_flattened.sol\":40500:40519  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":40496:40583  if (owner == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"nftmarket_flattened.sol\":40569:40570  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":40542:40572  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":40496:40583  if (owner == address(0)) {... */\n    tag_219:\n        /* \"nftmarket_flattened.sol\":40599:40608  _balances */\n      0x03\n        /* \"nftmarket_flattened.sol\":40599:40615  _balances[owner] */\n      0x00\n        /* \"nftmarket_flattened.sol\":40609:40614  owner */\n      dup4\n        /* \"nftmarket_flattened.sol\":40599:40615  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nftmarket_flattened.sol\":40592:40615  return _balances[owner] */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":40414:40622  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":59543:59688  function SoldNft (uint tokenids) public view returns (bool) {... */\n    tag_112:\n        /* \"nftmarket_flattened.sol\":59597:59601  bool */\n      0x00\n        /* \"nftmarket_flattened.sol\":59613:59624  address ads */\n      dup1\n        /* \"nftmarket_flattened.sol\":59626:59643  ownerOf(tokenids) */\n      tag_222\n        /* \"nftmarket_flattened.sol\":59634:59642  tokenids */\n      dup4\n        /* \"nftmarket_flattened.sol\":59626:59633  ownerOf */\n      tag_101\n        /* \"nftmarket_flattened.sol\":59626:59643  ownerOf(tokenids) */\n      jump\t// in\n    tag_222:\n        /* \"nftmarket_flattened.sol\":59613:59643  address ads= ownerOf(tokenids) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":59660:59666  isSold */\n      0x0c\n        /* \"nftmarket_flattened.sol\":59660:59671  isSold[ads] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59667:59670  ads */\n      dup3\n        /* \"nftmarket_flattened.sol\":59660:59671  isSold[ads] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":59660:59681  isSold[ads][tokenids] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59672:59680  tokenids */\n      dup5\n        /* \"nftmarket_flattened.sol\":59660:59681  isSold[ads][tokenids] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nftmarket_flattened.sol\":59653:59681  return isSold[ads][tokenids] */\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":59543:59688  function SoldNft (uint tokenids) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":58489:58526  uint256 public royaltyPercentage = 10 */\n    tag_116:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":41012:41105  function symbol() public view virtual returns (string memory) {... */\n    tag_120:\n        /* \"nftmarket_flattened.sol\":41059:41072  string memory */\n      0x60\n        /* \"nftmarket_flattened.sol\":41091:41098  _symbol */\n      0x01\n        /* \"nftmarket_flattened.sol\":41084:41098  return _symbol */\n      dup1\n      sload\n      tag_224\n      swap1\n      tag_170\n      jump\t// in\n    tag_224:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_225\n      swap1\n      tag_170\n      jump\t// in\n    tag_225:\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_227\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_226)\n    tag_227:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_228:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_228\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":41012:41105  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":42212:42356  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_126:\n        /* \"nftmarket_flattened.sol\":42297:42349  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_230\n        /* \"nftmarket_flattened.sol\":42316:42328  _msgSender() */\n      tag_231\n        /* \"nftmarket_flattened.sol\":42316:42326  _msgSender */\n      tag_183\n        /* \"nftmarket_flattened.sol\":42316:42328  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"nftmarket_flattened.sol\":42330:42338  operator */\n      dup4\n        /* \"nftmarket_flattened.sol\":42340:42348  approved */\n      dup4\n        /* \"nftmarket_flattened.sol\":42297:42315  _setApprovalForAll */\n      tag_232\n        /* \"nftmarket_flattened.sol\":42297:42349  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_230:\n        /* \"nftmarket_flattened.sol\":42212:42356  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":60205:61018  function BuyNFT(uint256 tokenId) public payable  {... */\n    tag_129:\n        /* \"nftmarket_flattened.sol\":60273:60291  address tokenOwner */\n      0x00\n        /* \"nftmarket_flattened.sol\":60294:60310  ownerOf(tokenId) */\n      tag_234\n        /* \"nftmarket_flattened.sol\":60302:60309  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":60294:60301  ownerOf */\n      tag_101\n        /* \"nftmarket_flattened.sol\":60294:60310  ownerOf(tokenId) */\n      jump\t// in\n    tag_234:\n        /* \"nftmarket_flattened.sol\":60273:60310  address tokenOwner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":60358:60362  true */\n      0x01\n        /* \"nftmarket_flattened.sol\":60328:60362  isSell[tokenOwner][tokenId]== true */\n      iszero\n      iszero\n        /* \"nftmarket_flattened.sol\":60328:60334  isSell */\n      0x0b\n        /* \"nftmarket_flattened.sol\":60328:60346  isSell[tokenOwner] */\n      0x00\n        /* \"nftmarket_flattened.sol\":60335:60345  tokenOwner */\n      dup4\n        /* \"nftmarket_flattened.sol\":60328:60346  isSell[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":60328:60355  isSell[tokenOwner][tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":60347:60354  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":60328:60355  isSell[tokenOwner][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nftmarket_flattened.sol\":60328:60362  isSell[tokenOwner][tokenId]== true */\n      iszero\n      iszero\n      eq\n        /* \"nftmarket_flattened.sol\":60320:60387  require(isSell[tokenOwner][tokenId]== true, \"Token is not at sale\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"nftmarket_flattened.sol\":60398:60411  address buyer */\n      0x00\n        /* \"nftmarket_flattened.sol\":60414:60424  msg.sender */\n      caller\n        /* \"nftmarket_flattened.sol\":60398:60424  address buyer = msg.sender */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":60434:60447  uint256 price */\n      0x00\n        /* \"nftmarket_flattened.sol\":60450:60454  nfts */\n      0x0d\n        /* \"nftmarket_flattened.sol\":60450:60463  nfts[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":60455:60462  tokenId */\n      dup6\n        /* \"nftmarket_flattened.sol\":60450:60463  nfts[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":60450:60469  nfts[tokenId].price */\n      0x01\n      add\n      sload\n        /* \"nftmarket_flattened.sol\":60434:60469  uint256 price = nfts[tokenId].price */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":60501:60506  buyer */\n      dup2\n        /* \"nftmarket_flattened.sol\":60487:60506  tokenOwner != buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":60487:60497  tokenOwner */\n      dup4\n        /* \"nftmarket_flattened.sol\":60487:60506  tokenOwner != buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":60479:60534  require(tokenOwner != buyer, \"Cannot buy your own NFT\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"nftmarket_flattened.sol\":60565:60570  price */\n      dup1\n        /* \"nftmarket_flattened.sol\":60552:60561  msg.value */\n      callvalue\n        /* \"nftmarket_flattened.sol\":60552:60570  msg.value == price */\n      eq\n        /* \"nftmarket_flattened.sol\":60544:60592  require(msg.value == price, \"Supply Exact fund\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"nftmarket_flattened.sol\":60644:60681  _transfer(tokenOwner, buyer, tokenId) */\n      tag_244\n        /* \"nftmarket_flattened.sol\":60654:60664  tokenOwner */\n      dup4\n        /* \"nftmarket_flattened.sol\":60666:60671  buyer */\n      dup4\n        /* \"nftmarket_flattened.sol\":60673:60680  tokenId */\n      dup7\n        /* \"nftmarket_flattened.sol\":60644:60653  _transfer */\n      tag_245\n        /* \"nftmarket_flattened.sol\":60644:60681  _transfer(tokenOwner, buyer, tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"nftmarket_flattened.sol\":60741:60758  uint256 royalties */\n      0x00\n        /* \"nftmarket_flattened.sol\":60791:60794  100 */\n      0x64\n        /* \"nftmarket_flattened.sol\":60770:60787  royaltyPercentage */\n      sload(0x09)\n        /* \"nftmarket_flattened.sol\":60762:60767  price */\n      dup4\n        /* \"nftmarket_flattened.sol\":60762:60787  price * royaltyPercentage */\n      tag_246\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_246:\n        /* \"nftmarket_flattened.sol\":60761:60794  (price * royaltyPercentage) / 100 */\n      tag_247\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_247:\n        /* \"nftmarket_flattened.sol\":60741:60794  uint256 royalties = (price * royaltyPercentage) / 100 */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":60835:60848  contractOwner */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":60827:60858  payable(contractOwner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":60827:60869  payable(contractOwner).transfer(royalties) */\n      0x08fc\n        /* \"nftmarket_flattened.sol\":60859:60868  royalties */\n      dup3\n        /* \"nftmarket_flattened.sol\":60827:60869  payable(contractOwner).transfer(royalties) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n        /* \"nftmarket_flattened.sol\":60971:60981  tokenOwner */\n      dup4\n        /* \"nftmarket_flattened.sol\":60963:60991  payable(tokenOwner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":60963:61010  payable(tokenOwner).transfer(price - royalties) */\n      0x08fc\n        /* \"nftmarket_flattened.sol\":61000:61009  royalties */\n      dup3\n        /* \"nftmarket_flattened.sol\":60992:60997  price */\n      dup5\n        /* \"nftmarket_flattened.sol\":60992:61009  price - royalties */\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"nftmarket_flattened.sol\":60963:61010  payable(tokenOwner).transfer(price - royalties) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n        /* \"nftmarket_flattened.sol\":60254:61018  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":60205:61018  function BuyNFT(uint256 tokenId) public payable  {... */\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":59370:59537  function SellNft(uint tokenId) public  {... */\n    tag_133:\n        /* \"nftmarket_flattened.sol\":59441:59457  ownerOf(tokenId) */\n      tag_255\n        /* \"nftmarket_flattened.sol\":59449:59456  tokenId */\n      dup2\n        /* \"nftmarket_flattened.sol\":59441:59448  ownerOf */\n      tag_101\n        /* \"nftmarket_flattened.sol\":59441:59457  ownerOf(tokenId) */\n      jump\t// in\n    tag_255:\n        /* \"nftmarket_flattened.sol\":59427:59457  msg.sender == ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":59427:59437  msg.sender */\n      caller\n        /* \"nftmarket_flattened.sol\":59427:59457  msg.sender == ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":59419:59488  require(msg.sender == ownerOf(tokenId), \"Your are Authorize to sell\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"nftmarket_flattened.sol\":59526:59530  true */\n      0x01\n        /* \"nftmarket_flattened.sol\":59498:59504  isSell */\n      0x0b\n        /* \"nftmarket_flattened.sol\":59498:59516  isSell[msg.sender] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59505:59515  msg.sender */\n      caller\n        /* \"nftmarket_flattened.sol\":59498:59516  isSell[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":59498:59525  isSell[msg.sender][tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59517:59524  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":59498:59525  isSell[msg.sender][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket_flattened.sol\":59498:59530  isSell[msg.sender][tokenId]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":59370:59537  function SellNft(uint tokenId) public  {... */\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":43479:43687  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_138:\n        /* \"nftmarket_flattened.sol\":43592:43623  transferFrom(from, to, tokenId) */\n      tag_260\n        /* \"nftmarket_flattened.sol\":43605:43609  from */\n      dup5\n        /* \"nftmarket_flattened.sol\":43611:43613  to */\n      dup5\n        /* \"nftmarket_flattened.sol\":43615:43622  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":43592:43604  transferFrom */\n      tag_61\n        /* \"nftmarket_flattened.sol\":43592:43623  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_260:\n        /* \"nftmarket_flattened.sol\":43633:43680  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_261\n        /* \"nftmarket_flattened.sol\":43656:43660  from */\n      dup5\n        /* \"nftmarket_flattened.sol\":43662:43664  to */\n      dup5\n        /* \"nftmarket_flattened.sol\":43666:43673  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":43675:43679  data */\n      dup5\n        /* \"nftmarket_flattened.sol\":43633:43655  _checkOnERC721Received */\n      tag_262\n        /* \"nftmarket_flattened.sol\":43633:43680  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_261:\n        /* \"nftmarket_flattened.sol\":43479:43687  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":57253:57846  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_142:\n        /* \"nftmarket_flattened.sol\":57326:57339  string memory */\n      0x60\n        /* \"nftmarket_flattened.sol\":57351:57373  _requireOwned(tokenId) */\n      tag_264\n        /* \"nftmarket_flattened.sol\":57365:57372  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":57351:57364  _requireOwned */\n      tag_177\n        /* \"nftmarket_flattened.sol\":57351:57373  _requireOwned(tokenId) */\n      jump\t// in\n    tag_264:\n      pop\n        /* \"nftmarket_flattened.sol\":57384:57407  string memory _tokenURI */\n      0x00\n        /* \"nftmarket_flattened.sol\":57410:57420  _tokenURIs */\n      0x06\n        /* \"nftmarket_flattened.sol\":57410:57429  _tokenURIs[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":57421:57428  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":57410:57429  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":57384:57429  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_265\n      swap1\n      tag_170\n      jump\t// in\n    tag_265:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_266\n      swap1\n      tag_170\n      jump\t// in\n    tag_266:\n      dup1\n      iszero\n      tag_267\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_268\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_267)\n    tag_268:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_269:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_269\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":57439:57457  string memory base */\n      0x00\n        /* \"nftmarket_flattened.sol\":57460:57470  _baseURI() */\n      tag_270\n        /* \"nftmarket_flattened.sol\":57460:57468  _baseURI */\n      tag_271\n        /* \"nftmarket_flattened.sol\":57460:57470  _baseURI() */\n      jump\t// in\n    tag_270:\n        /* \"nftmarket_flattened.sol\":57439:57470  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":57565:57566  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":57549:57553  base */\n      dup2\n        /* \"nftmarket_flattened.sol\":57543:57561  bytes(base).length */\n      mload\n        /* \"nftmarket_flattened.sol\":57543:57566  bytes(base).length == 0 */\n      sub\n        /* \"nftmarket_flattened.sol\":57539:57609  if (bytes(base).length == 0) {... */\n      tag_272\n      jumpi\n        /* \"nftmarket_flattened.sol\":57589:57598  _tokenURI */\n      dup2\n        /* \"nftmarket_flattened.sol\":57582:57598  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_263)\n        /* \"nftmarket_flattened.sol\":57539:57609  if (bytes(base).length == 0) {... */\n    tag_272:\n        /* \"nftmarket_flattened.sol\":57734:57735  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":57714:57723  _tokenURI */\n      dup3\n        /* \"nftmarket_flattened.sol\":57708:57731  bytes(_tokenURI).length */\n      mload\n        /* \"nftmarket_flattened.sol\":57708:57735  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"nftmarket_flattened.sol\":57704:57799  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"nftmarket_flattened.sol\":57772:57776  base */\n      dup1\n        /* \"nftmarket_flattened.sol\":57778:57787  _tokenURI */\n      dup3\n        /* \"nftmarket_flattened.sol\":57758:57788  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"nftmarket_flattened.sol\":57751:57788  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_263)\n        /* \"nftmarket_flattened.sol\":57704:57799  if (bytes(_tokenURI).length > 0) {... */\n    tag_273:\n        /* \"nftmarket_flattened.sol\":57816:57839  super.tokenURI(tokenId) */\n      tag_276\n        /* \"nftmarket_flattened.sol\":57831:57838  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":57816:57830  super.tokenURI */\n      tag_277\n        /* \"nftmarket_flattened.sol\":57816:57839  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"nftmarket_flattened.sol\":57809:57839  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":57253:57846  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_263:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":58457:58483  string public baseTokenURI */\n    tag_146:\n      0x08\n      dup1\n      sload\n      tag_278\n      swap1\n      tag_170\n      jump\t// in\n    tag_278:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_279\n      swap1\n      tag_170\n      jump\t// in\n    tag_279:\n      dup1\n      iszero\n      tag_280\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_281\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_280)\n    tag_281:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_282:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_282\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":42422:42575  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_152:\n        /* \"nftmarket_flattened.sol\":42510:42514  bool */\n      0x00\n        /* \"nftmarket_flattened.sol\":42533:42551  _operatorApprovals */\n      0x05\n        /* \"nftmarket_flattened.sol\":42533:42558  _operatorApprovals[owner] */\n      0x00\n        /* \"nftmarket_flattened.sol\":42552:42557  owner */\n      dup5\n        /* \"nftmarket_flattened.sol\":42533:42558  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":42533:42568  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"nftmarket_flattened.sol\":42559:42567  operator */\n      dup4\n        /* \"nftmarket_flattened.sol\":42533:42568  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nftmarket_flattened.sol\":42526:42568  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":42422:42575  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":59694:59837  function isSellNft (uint tokenid) public view returns (bool) {... */\n    tag_157:\n        /* \"nftmarket_flattened.sol\":59749:59753  bool */\n      0x00\n        /* \"nftmarket_flattened.sol\":59765:59775  address ad */\n      dup1\n        /* \"nftmarket_flattened.sol\":59778:59794  ownerOf(tokenid) */\n      tag_285\n        /* \"nftmarket_flattened.sol\":59786:59793  tokenid */\n      dup4\n        /* \"nftmarket_flattened.sol\":59778:59785  ownerOf */\n      tag_101\n        /* \"nftmarket_flattened.sol\":59778:59794  ownerOf(tokenid) */\n      jump\t// in\n    tag_285:\n        /* \"nftmarket_flattened.sol\":59765:59794  address ad = ownerOf(tokenid) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":59811:59817  isSell */\n      0x0b\n        /* \"nftmarket_flattened.sol\":59811:59821  isSell[ad] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59818:59820  ad */\n      dup3\n        /* \"nftmarket_flattened.sol\":59811:59821  isSell[ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":59811:59830  isSell[ad][tokenid] */\n      0x00\n        /* \"nftmarket_flattened.sol\":59822:59829  tokenid */\n      dup5\n        /* \"nftmarket_flattened.sol\":59811:59830  isSell[ad][tokenid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nftmarket_flattened.sol\":59804:59830  return isSell[ad][tokenid] */\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":59694:59837  function isSellNft (uint tokenid) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":59989:60094  function getBalance(address ads) public view returns (uint256) {... */\n    tag_162:\n        /* \"nftmarket_flattened.sol\":60043:60050  uint256 */\n      0x00\n        /* \"nftmarket_flattened.sol\":60076:60079  ads */\n      dup2\n        /* \"nftmarket_flattened.sol\":60076:60087  ads.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"nftmarket_flattened.sol\":60069:60087  return ads.balance */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":59989:60094  function getBalance(address ads) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":40055:40355  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_167:\n        /* \"nftmarket_flattened.sol\":40157:40161  bool */\n      0x00\n        /* \"nftmarket_flattened.sol\":40207:40232  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"nftmarket_flattened.sol\":40192:40232  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nftmarket_flattened.sol\":40192:40203  interfaceId */\n      dup3\n        /* \"nftmarket_flattened.sol\":40192:40232  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":40192:40296  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_288\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":40263:40296  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"nftmarket_flattened.sol\":40248:40296  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nftmarket_flattened.sol\":40248:40259  interfaceId */\n      dup3\n        /* \"nftmarket_flattened.sol\":40248:40296  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":40192:40296  interfaceId == type(IERC721).interfaceId ||... */\n    tag_288:\n        /* \"nftmarket_flattened.sol\":40192:40348  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_289\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":40312:40348  super.supportsInterface(interfaceId) */\n      tag_290\n        /* \"nftmarket_flattened.sol\":40336:40347  interfaceId */\n      dup3\n        /* \"nftmarket_flattened.sol\":40312:40335  super.supportsInterface */\n      tag_291\n        /* \"nftmarket_flattened.sol\":40312:40348  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_290:\n        /* \"nftmarket_flattened.sol\":40192:40348  interfaceId == type(IERC721).interfaceId ||... */\n    tag_289:\n        /* \"nftmarket_flattened.sol\":40173:40348  return... */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":40055:40355  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":54632:54873  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_177:\n        /* \"nftmarket_flattened.sol\":54695:54702  address */\n      0x00\n        /* \"nftmarket_flattened.sol\":54714:54727  address owner */\n      dup1\n        /* \"nftmarket_flattened.sol\":54730:54747  _ownerOf(tokenId) */\n      tag_293\n        /* \"nftmarket_flattened.sol\":54739:54746  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":54730:54738  _ownerOf */\n      tag_294\n        /* \"nftmarket_flattened.sol\":54730:54747  _ownerOf(tokenId) */\n      jump\t// in\n    tag_293:\n        /* \"nftmarket_flattened.sol\":54714:54747  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":54778:54779  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":54761:54780  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":54761:54766  owner */\n      dup2\n        /* \"nftmarket_flattened.sol\":54761:54780  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":54757:54845  if (owner == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"nftmarket_flattened.sol\":54826:54833  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":54803:54834  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":54757:54845  if (owner == address(0)) {... */\n    tag_295:\n        /* \"nftmarket_flattened.sol\":54861:54866  owner */\n      dup1\n        /* \"nftmarket_flattened.sol\":54854:54866  return owner */\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":54632:54873  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":44432:44559  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_179:\n        /* \"nftmarket_flattened.sol\":44502:44509  address */\n      0x00\n        /* \"nftmarket_flattened.sol\":44528:44543  _tokenApprovals */\n      0x04\n        /* \"nftmarket_flattened.sol\":44528:44552  _tokenApprovals[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":44544:44551  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":44528:44552  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":44521:44552  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":44432:44559  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":28165:28261  function _msgSender() internal view virtual returns (address) {... */\n    tag_183:\n        /* \"nftmarket_flattened.sol\":28218:28225  address */\n      0x00\n        /* \"nftmarket_flattened.sol\":28244:28254  msg.sender */\n      caller\n        /* \"nftmarket_flattened.sol\":28237:28254  return msg.sender */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":28165:28261  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":52912:53032  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_184:\n        /* \"nftmarket_flattened.sol\":52992:53025  _approve(to, tokenId, auth, true) */\n      tag_300\n        /* \"nftmarket_flattened.sol\":53001:53003  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":53005:53012  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":53014:53018  auth */\n      dup4\n        /* \"nftmarket_flattened.sol\":53020:53024  true */\n      0x01\n        /* \"nftmarket_flattened.sol\":52992:53000  _approve */\n      tag_301\n        /* \"nftmarket_flattened.sol\":52992:53025  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_300:\n        /* \"nftmarket_flattened.sol\":52912:53032  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":47332:48127  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_190:\n        /* \"nftmarket_flattened.sol\":47418:47425  address */\n      0x00\n        /* \"nftmarket_flattened.sol\":47437:47449  address from */\n      dup1\n        /* \"nftmarket_flattened.sol\":47452:47469  _ownerOf(tokenId) */\n      tag_303\n        /* \"nftmarket_flattened.sol\":47461:47468  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":47452:47460  _ownerOf */\n      tag_294\n        /* \"nftmarket_flattened.sol\":47452:47469  _ownerOf(tokenId) */\n      jump\t// in\n    tag_303:\n        /* \"nftmarket_flattened.sol\":47437:47469  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":47545:47546  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":47529:47547  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":47529:47533  auth */\n      dup4\n        /* \"nftmarket_flattened.sol\":47529:47547  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":47525:47611  if (auth != address(0)) {... */\n      tag_304\n      jumpi\n        /* \"nftmarket_flattened.sol\":47563:47600  _checkAuthorized(from, auth, tokenId) */\n      tag_305\n        /* \"nftmarket_flattened.sol\":47580:47584  from */\n      dup2\n        /* \"nftmarket_flattened.sol\":47586:47590  auth */\n      dup5\n        /* \"nftmarket_flattened.sol\":47592:47599  tokenId */\n      dup7\n        /* \"nftmarket_flattened.sol\":47563:47579  _checkAuthorized */\n      tag_306\n        /* \"nftmarket_flattened.sol\":47563:47600  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_305:\n        /* \"nftmarket_flattened.sol\":47525:47611  if (auth != address(0)) {... */\n    tag_304:\n        /* \"nftmarket_flattened.sol\":47671:47672  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":47655:47673  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":47655:47659  from */\n      dup2\n        /* \"nftmarket_flattened.sol\":47655:47673  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":47651:47907  if (from != address(0)) {... */\n      tag_307\n      jumpi\n        /* \"nftmarket_flattened.sol\":47771:47819  _approve(address(0), tokenId, address(0), false) */\n      tag_308\n        /* \"nftmarket_flattened.sol\":47788:47789  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":47792:47799  tokenId */\n      dup6\n        /* \"nftmarket_flattened.sol\":47809:47810  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":47813:47818  false */\n      dup1\n        /* \"nftmarket_flattened.sol\":47771:47779  _approve */\n      tag_301\n        /* \"nftmarket_flattened.sol\":47771:47819  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_308:\n        /* \"nftmarket_flattened.sol\":47881:47882  1 */\n      0x01\n        /* \"nftmarket_flattened.sol\":47862:47871  _balances */\n      0x03\n        /* \"nftmarket_flattened.sol\":47862:47877  _balances[from] */\n      0x00\n        /* \"nftmarket_flattened.sol\":47872:47876  from */\n      dup4\n        /* \"nftmarket_flattened.sol\":47862:47877  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket_flattened.sol\":47862:47882  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":47651:47907  if (from != address(0)) {... */\n    tag_307:\n        /* \"nftmarket_flattened.sol\":47935:47936  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":47921:47937  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":47921:47923  to */\n      dup6\n        /* \"nftmarket_flattened.sol\":47921:47937  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":47917:48024  if (to != address(0)) {... */\n      tag_309\n      jumpi\n        /* \"nftmarket_flattened.sol\":47998:47999  1 */\n      0x01\n        /* \"nftmarket_flattened.sol\":47981:47990  _balances */\n      0x03\n        /* \"nftmarket_flattened.sol\":47981:47994  _balances[to] */\n      0x00\n        /* \"nftmarket_flattened.sol\":47991:47993  to */\n      dup8\n        /* \"nftmarket_flattened.sol\":47981:47994  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket_flattened.sol\":47981:47999  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":47917:48024  if (to != address(0)) {... */\n    tag_309:\n        /* \"nftmarket_flattened.sol\":48053:48055  to */\n      dup5\n        /* \"nftmarket_flattened.sol\":48034:48041  _owners */\n      0x02\n        /* \"nftmarket_flattened.sol\":48034:48050  _owners[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":48042:48049  tokenId */\n      dup7\n        /* \"nftmarket_flattened.sol\":48034:48050  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket_flattened.sol\":48034:48055  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":48090:48097  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":48086:48088  to */\n      dup6\n        /* \"nftmarket_flattened.sol\":48071:48098  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":48080:48084  from */\n      dup3\n        /* \"nftmarket_flattened.sol\":48071:48098  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nftmarket_flattened.sol\":48116:48120  from */\n      dup1\n        /* \"nftmarket_flattened.sol\":48109:48120  return from */\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":47332:48127  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":882:994  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_201:\n        /* \"nftmarket_flattened.sol\":947:954  uint256 */\n      0x00\n        /* \"nftmarket_flattened.sol\":973:980  counter */\n      dup2\n        /* \"nftmarket_flattened.sol\":973:987  counter._value */\n      0x00\n      add\n      sload\n        /* \"nftmarket_flattened.sol\":966:987  return counter._value */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":882:994  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":49127:49227  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_211:\n        /* \"nftmarket_flattened.sol\":49194:49220  _safeMint(to, tokenId, \"\") */\n      tag_312\n        /* \"nftmarket_flattened.sol\":49204:49206  to */\n      dup3\n        /* \"nftmarket_flattened.sol\":49208:49215  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":49194:49220  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"nftmarket_flattened.sol\":49194:49203  _safeMint */\n      tag_313\n        /* \"nftmarket_flattened.sol\":49194:49220  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_312:\n        /* \"nftmarket_flattened.sol\":49127:49227  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":57965:58132  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_213:\n        /* \"nftmarket_flattened.sol\":58078:58087  _tokenURI */\n      dup1\n        /* \"nftmarket_flattened.sol\":58056:58066  _tokenURIs */\n      0x06\n        /* \"nftmarket_flattened.sol\":58056:58075  _tokenURIs[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":58067:58074  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":58056:58075  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":58056:58087  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_315\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_315:\n      pop\n        /* \"nftmarket_flattened.sol\":58102:58125  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"nftmarket_flattened.sol\":58117:58124  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":58102:58125  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"nftmarket_flattened.sol\":57965:58132  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":1000:1123  function increment(Counter storage counter) internal {... */\n    tag_215:\n        /* \"nftmarket_flattened.sol\":1105:1106  1 */\n      0x01\n        /* \"nftmarket_flattened.sol\":1087:1094  counter */\n      dup2\n        /* \"nftmarket_flattened.sol\":1087:1101  counter._value */\n      0x00\n      add\n      0x00\n        /* \"nftmarket_flattened.sol\":1087:1106  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":1000:1123  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":54085:54397  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_232:\n        /* \"nftmarket_flattened.sol\":54212:54213  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":54192:54214  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":54192:54200  operator */\n      dup3\n        /* \"nftmarket_flattened.sol\":54192:54214  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":54188:54279  if (operator == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"nftmarket_flattened.sol\":54259:54267  operator */\n      dup2\n        /* \"nftmarket_flattened.sol\":54237:54268  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":54188:54279  if (operator == address(0)) {... */\n    tag_319:\n        /* \"nftmarket_flattened.sol\":54326:54334  approved */\n      dup1\n        /* \"nftmarket_flattened.sol\":54288:54306  _operatorApprovals */\n      0x05\n        /* \"nftmarket_flattened.sol\":54288:54313  _operatorApprovals[owner] */\n      0x00\n        /* \"nftmarket_flattened.sol\":54307:54312  owner */\n      dup6\n        /* \"nftmarket_flattened.sol\":54288:54313  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket_flattened.sol\":54288:54323  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"nftmarket_flattened.sol\":54314:54322  operator */\n      dup5\n        /* \"nftmarket_flattened.sol\":54288:54323  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket_flattened.sol\":54288:54334  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":54371:54379  operator */\n      dup2\n        /* \"nftmarket_flattened.sol\":54349:54390  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":54364:54369  owner */\n      dup4\n        /* \"nftmarket_flattened.sol\":54349:54390  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"nftmarket_flattened.sol\":54381:54389  approved */\n      dup4\n        /* \"nftmarket_flattened.sol\":54349:54390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"nftmarket_flattened.sol\":54085:54397  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":50507:50967  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_245:\n        /* \"nftmarket_flattened.sol\":50606:50607  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":50592:50608  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":50592:50594  to */\n      dup3\n        /* \"nftmarket_flattened.sol\":50592:50608  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":50588:50675  if (to == address(0)) {... */\n      tag_323\n      jumpi\n        /* \"nftmarket_flattened.sol\":50661:50662  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":50631:50664  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":50588:50675  if (to == address(0)) {... */\n    tag_323:\n        /* \"nftmarket_flattened.sol\":50684:50705  address previousOwner */\n      0x00\n        /* \"nftmarket_flattened.sol\":50708:50740  _update(to, tokenId, address(0)) */\n      tag_325\n        /* \"nftmarket_flattened.sol\":50716:50718  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":50720:50727  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":50737:50738  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":50708:50715  _update */\n      tag_190\n        /* \"nftmarket_flattened.sol\":50708:50740  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_325:\n        /* \"nftmarket_flattened.sol\":50684:50740  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":50779:50780  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":50754:50781  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":50754:50767  previousOwner */\n      dup2\n        /* \"nftmarket_flattened.sol\":50754:50781  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":50750:50961  if (previousOwner == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"nftmarket_flattened.sol\":50827:50834  tokenId */\n      dup2\n        /* \"nftmarket_flattened.sol\":50804:50835  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":50750:50961  if (previousOwner == address(0)) {... */\n    tag_326:\n        /* \"nftmarket_flattened.sol\":50873:50877  from */\n      dup4\n        /* \"nftmarket_flattened.sol\":50856:50877  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":50856:50869  previousOwner */\n      dup2\n        /* \"nftmarket_flattened.sol\":50856:50877  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":50852:50961  if (previousOwner != from) {... */\n      tag_329\n      jumpi\n        /* \"nftmarket_flattened.sol\":50921:50925  from */\n      dup4\n        /* \"nftmarket_flattened.sol\":50927:50934  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":50936:50949  previousOwner */\n      dup3\n        /* \"nftmarket_flattened.sol\":50900:50950  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":50852:50961  if (previousOwner != from) {... */\n    tag_329:\n        /* \"nftmarket_flattened.sol\":50578:50967  {... */\n      pop\n        /* \"nftmarket_flattened.sol\":50507:50967  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":55412:56194  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_262:\n        /* \"nftmarket_flattened.sol\":55545:55546  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":55528:55530  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":55528:55542  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"nftmarket_flattened.sol\":55528:55546  to.code.length > 0 */\n      gt\n        /* \"nftmarket_flattened.sol\":55524:56188  if (to.code.length > 0) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"nftmarket_flattened.sol\":55582:55584  to */\n      dup3\n        /* \"nftmarket_flattened.sol\":55566:55602  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"nftmarket_flattened.sol\":55603:55615  _msgSender() */\n      tag_333\n        /* \"nftmarket_flattened.sol\":55603:55613  _msgSender */\n      tag_183\n        /* \"nftmarket_flattened.sol\":55603:55615  _msgSender() */\n      jump\t// in\n    tag_333:\n        /* \"nftmarket_flattened.sol\":55617:55621  from */\n      dup7\n        /* \"nftmarket_flattened.sol\":55623:55630  tokenId */\n      dup6\n        /* \"nftmarket_flattened.sol\":55632:55636  data */\n      dup6\n        /* \"nftmarket_flattened.sol\":55566:55637  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_336\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_337\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      0x01\n    tag_336:\n        /* \"nftmarket_flattened.sol\":55562:56178  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_339\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_344\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_343)\n    tag_344:\n      0x60\n      swap2\n      pop\n    tag_343:\n      pop\n        /* \"nftmarket_flattened.sol\":55892:55893  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":55875:55881  reason */\n      dup2\n        /* \"nftmarket_flattened.sol\":55875:55888  reason.length */\n      mload\n        /* \"nftmarket_flattened.sol\":55875:55893  reason.length == 0 */\n      sub\n        /* \"nftmarket_flattened.sol\":55871:56164  if (reason.length == 0) {... */\n      tag_345\n      jumpi\n        /* \"nftmarket_flattened.sol\":55946:55948  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":55924:55949  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":55871:56164  if (reason.length == 0) {... */\n    tag_345:\n        /* \"nftmarket_flattened.sol\":56116:56122  reason */\n      dup1\n        /* \"nftmarket_flattened.sol\":56110:56123  mload(reason) */\n      mload\n        /* \"nftmarket_flattened.sol\":56101:56107  reason */\n      dup2\n        /* \"nftmarket_flattened.sol\":56097:56099  32 */\n      0x20\n        /* \"nftmarket_flattened.sol\":56093:56108  add(32, reason) */\n      add\n        /* \"nftmarket_flattened.sol\":56086:56124  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"nftmarket_flattened.sol\":55562:56178  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_339:\n        /* \"nftmarket_flattened.sol\":55694:55735  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"nftmarket_flattened.sol\":55684:55735  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nftmarket_flattened.sol\":55684:55690  retval */\n      dup2\n        /* \"nftmarket_flattened.sol\":55684:55735  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":55680:55810  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_349\n      jumpi\n        /* \"nftmarket_flattened.sol\":55788:55790  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":55766:55791  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":55680:55810  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_349:\n        /* \"nftmarket_flattened.sol\":55638:55824  returns (bytes4 retval) {... */\n      pop\n        /* \"nftmarket_flattened.sol\":55524:56188  if (to.code.length > 0) {... */\n    tag_332:\n        /* \"nftmarket_flattened.sol\":55412:56194  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":41668:41760  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_271:\n        /* \"nftmarket_flattened.sol\":41719:41732  string memory */\n      0x60\n        /* \"nftmarket_flattened.sol\":41744:41753  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":41668:41760  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":41171:41426  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_277:\n        /* \"nftmarket_flattened.sol\":41235:41248  string memory */\n      0x60\n        /* \"nftmarket_flattened.sol\":41260:41282  _requireOwned(tokenId) */\n      tag_353\n        /* \"nftmarket_flattened.sol\":41274:41281  tokenId */\n      dup3\n        /* \"nftmarket_flattened.sol\":41260:41273  _requireOwned */\n      tag_177\n        /* \"nftmarket_flattened.sol\":41260:41282  _requireOwned(tokenId) */\n      jump\t// in\n    tag_353:\n      pop\n        /* \"nftmarket_flattened.sol\":41293:41314  string memory baseURI */\n      0x00\n        /* \"nftmarket_flattened.sol\":41317:41327  _baseURI() */\n      tag_354\n        /* \"nftmarket_flattened.sol\":41317:41325  _baseURI */\n      tag_271\n        /* \"nftmarket_flattened.sol\":41317:41327  _baseURI() */\n      jump\t// in\n    tag_354:\n        /* \"nftmarket_flattened.sol\":41293:41327  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":41368:41369  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":41350:41357  baseURI */\n      dup2\n        /* \"nftmarket_flattened.sol\":41344:41365  bytes(baseURI).length */\n      mload\n        /* \"nftmarket_flattened.sol\":41344:41369  bytes(baseURI).length > 0 */\n      gt\n        /* \"nftmarket_flattened.sol\":41344:41419  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_355\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_356)\n    tag_355:\n        /* \"nftmarket_flattened.sol\":41386:41393  baseURI */\n      dup1\n        /* \"nftmarket_flattened.sol\":41395:41413  tokenId.toString() */\n      tag_357\n        /* \"nftmarket_flattened.sol\":41395:41402  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":41395:41411  tokenId.toString */\n      tag_358\n        /* \"nftmarket_flattened.sol\":41395:41413  tokenId.toString() */\n      jump\t// in\n    tag_357:\n        /* \"nftmarket_flattened.sol\":41372:41414  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_359\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"nftmarket_flattened.sol\":41344:41419  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_356:\n        /* \"nftmarket_flattened.sol\":41337:41419  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":41171:41426  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":32063:32209  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_291:\n        /* \"nftmarket_flattened.sol\":32139:32143  bool */\n      0x00\n        /* \"nftmarket_flattened.sol\":32177:32202  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"nftmarket_flattened.sol\":32162:32202  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"nftmarket_flattened.sol\":32162:32173  interfaceId */\n      dup3\n        /* \"nftmarket_flattened.sol\":32162:32202  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":32155:32202  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":32063:32209  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":44201:44316  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_294:\n        /* \"nftmarket_flattened.sol\":44267:44274  address */\n      0x00\n        /* \"nftmarket_flattened.sol\":44293:44300  _owners */\n      0x02\n        /* \"nftmarket_flattened.sol\":44293:44309  _owners[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":44301:44308  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":44293:44309  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":44286:44309  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":44201:44316  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":53214:53876  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_301:\n        /* \"nftmarket_flattened.sol\":53374:53383  emitEvent */\n      dup1\n        /* \"nftmarket_flattened.sol\":53374:53405  emitEvent || auth != address(0) */\n      dup1\n      tag_363\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":53403:53404  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":53387:53405  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":53387:53391  auth */\n      dup3\n        /* \"nftmarket_flattened.sol\":53387:53405  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nftmarket_flattened.sol\":53374:53405  emitEvent || auth != address(0) */\n    tag_363:\n        /* \"nftmarket_flattened.sol\":53370:53830  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"nftmarket_flattened.sol\":53421:53434  address owner */\n      0x00\n        /* \"nftmarket_flattened.sol\":53437:53459  _requireOwned(tokenId) */\n      tag_365\n        /* \"nftmarket_flattened.sol\":53451:53458  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":53437:53450  _requireOwned */\n      tag_177\n        /* \"nftmarket_flattened.sol\":53437:53459  _requireOwned(tokenId) */\n      jump\t// in\n    tag_365:\n        /* \"nftmarket_flattened.sol\":53421:53459  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":53603:53604  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":53587:53605  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":53587:53591  auth */\n      dup4\n        /* \"nftmarket_flattened.sol\":53587:53605  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nftmarket_flattened.sol\":53587:53622  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_366\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":53618:53622  auth */\n      dup3\n        /* \"nftmarket_flattened.sol\":53609:53622  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":53609:53614  owner */\n      dup2\n        /* \"nftmarket_flattened.sol\":53609:53622  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nftmarket_flattened.sol\":53587:53622  auth != address(0) && owner != auth */\n    tag_366:\n        /* \"nftmarket_flattened.sol\":53587:53656  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_367\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":53627:53656  isApprovedForAll(owner, auth) */\n      tag_368\n        /* \"nftmarket_flattened.sol\":53644:53649  owner */\n      dup2\n        /* \"nftmarket_flattened.sol\":53651:53655  auth */\n      dup5\n        /* \"nftmarket_flattened.sol\":53627:53643  isApprovedForAll */\n      tag_152\n        /* \"nftmarket_flattened.sol\":53627:53656  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_368:\n        /* \"nftmarket_flattened.sol\":53626:53656  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"nftmarket_flattened.sol\":53587:53656  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_367:\n        /* \"nftmarket_flattened.sol\":53583:53725  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_369\n      jumpi\n        /* \"nftmarket_flattened.sol\":53705:53709  auth */\n      dup3\n        /* \"nftmarket_flattened.sol\":53683:53710  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":53583:53725  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_369:\n        /* \"nftmarket_flattened.sol\":53743:53752  emitEvent */\n      dup2\n        /* \"nftmarket_flattened.sol\":53739:53820  if (emitEvent) {... */\n      iszero\n      tag_371\n      jumpi\n        /* \"nftmarket_flattened.sol\":53797:53804  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":53793:53795  to */\n      dup6\n        /* \"nftmarket_flattened.sol\":53777:53805  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":53786:53791  owner */\n      dup3\n        /* \"nftmarket_flattened.sol\":53777:53805  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nftmarket_flattened.sol\":53739:53820  if (emitEvent) {... */\n    tag_371:\n        /* \"nftmarket_flattened.sol\":53407:53830  {... */\n      pop\n        /* \"nftmarket_flattened.sol\":53370:53830  if (emitEvent || auth != address(0)) {... */\n    tag_364:\n        /* \"nftmarket_flattened.sol\":53867:53869  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":53840:53855  _tokenApprovals */\n      0x04\n        /* \"nftmarket_flattened.sol\":53840:53864  _tokenApprovals[tokenId] */\n      0x00\n        /* \"nftmarket_flattened.sol\":53856:53863  tokenId */\n      dup6\n        /* \"nftmarket_flattened.sol\":53840:53864  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket_flattened.sol\":53840:53869  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nftmarket_flattened.sol\":53214:53876  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":45576:45944  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_306:\n        /* \"nftmarket_flattened.sol\":45688:45726  _isAuthorized(owner, spender, tokenId) */\n      tag_373\n        /* \"nftmarket_flattened.sol\":45702:45707  owner */\n      dup4\n        /* \"nftmarket_flattened.sol\":45709:45716  spender */\n      dup4\n        /* \"nftmarket_flattened.sol\":45718:45725  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":45688:45701  _isAuthorized */\n      tag_374\n        /* \"nftmarket_flattened.sol\":45688:45726  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_373:\n        /* \"nftmarket_flattened.sol\":45683:45938  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_375\n      jumpi\n        /* \"nftmarket_flattened.sol\":45763:45764  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":45746:45765  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":45746:45751  owner */\n      dup4\n        /* \"nftmarket_flattened.sol\":45746:45765  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":45742:45928  if (owner == address(0)) {... */\n      tag_376\n      jumpi\n        /* \"nftmarket_flattened.sol\":45815:45822  tokenId */\n      dup1\n        /* \"nftmarket_flattened.sol\":45792:45823  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":45742:45928  if (owner == address(0)) {... */\n    tag_376:\n        /* \"nftmarket_flattened.sol\":45896:45903  spender */\n      dup2\n        /* \"nftmarket_flattened.sol\":45905:45912  tokenId */\n      dup2\n        /* \"nftmarket_flattened.sol\":45869:45913  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":45683:45938  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_375:\n        /* \"nftmarket_flattened.sol\":45576:45944  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":49448:49630  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_313:\n        /* \"nftmarket_flattened.sol\":49542:49560  _mint(to, tokenId) */\n      tag_381\n        /* \"nftmarket_flattened.sol\":49548:49550  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":49552:49559  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":49542:49547  _mint */\n      tag_382\n        /* \"nftmarket_flattened.sol\":49542:49560  _mint(to, tokenId) */\n      jump\t// in\n    tag_381:\n        /* \"nftmarket_flattened.sol\":49570:49623  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_383\n        /* \"nftmarket_flattened.sol\":49601:49602  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":49605:49607  to */\n      dup5\n        /* \"nftmarket_flattened.sol\":49609:49616  tokenId */\n      dup5\n        /* \"nftmarket_flattened.sol\":49618:49622  data */\n      dup5\n        /* \"nftmarket_flattened.sol\":49570:49592  _checkOnERC721Received */\n      tag_262\n        /* \"nftmarket_flattened.sol\":49570:49623  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_383:\n        /* \"nftmarket_flattened.sol\":49448:49630  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":25025:25723  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_358:\n        /* \"nftmarket_flattened.sol\":25081:25094  string memory */\n      0x60\n        /* \"nftmarket_flattened.sol\":25130:25144  uint256 length */\n      0x00\n        /* \"nftmarket_flattened.sol\":25167:25168  1 */\n      0x01\n        /* \"nftmarket_flattened.sol\":25147:25164  Math.log10(value) */\n      tag_385\n        /* \"nftmarket_flattened.sol\":25158:25163  value */\n      dup5\n        /* \"nftmarket_flattened.sol\":25147:25157  Math.log10 */\n      tag_386\n        /* \"nftmarket_flattened.sol\":25147:25164  Math.log10(value) */\n      jump\t// in\n    tag_385:\n        /* \"nftmarket_flattened.sol\":25147:25168  Math.log10(value) + 1 */\n      add\n        /* \"nftmarket_flattened.sol\":25130:25168  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":25182:25202  string memory buffer */\n      0x00\n        /* \"nftmarket_flattened.sol\":25216:25222  length */\n      dup2\n        /* \"nftmarket_flattened.sol\":25205:25223  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_387\n      jumpi\n      tag_388\n      tag_389\n      jump\t// in\n    tag_388:\n    tag_387:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_390\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_390:\n      pop\n        /* \"nftmarket_flattened.sol\":25182:25223  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":25237:25248  uint256 ptr */\n      0x00\n        /* \"nftmarket_flattened.sol\":25363:25369  length */\n      dup3\n        /* \"nftmarket_flattened.sol\":25359:25361  32 */\n      0x20\n        /* \"nftmarket_flattened.sol\":25355:25370  add(32, length) */\n      add\n        /* \"nftmarket_flattened.sol\":25347:25353  buffer */\n      dup3\n        /* \"nftmarket_flattened.sol\":25343:25371  add(buffer, add(32, length)) */\n      add\n        /* \"nftmarket_flattened.sol\":25336:25371  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":25398:25680  while (true) {... */\n    tag_391:\n        /* \"nftmarket_flattened.sol\":25405:25409  true */\n      0x01\n        /* \"nftmarket_flattened.sol\":25398:25680  while (true) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"nftmarket_flattened.sol\":25429:25434  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":25568:25578  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"nftmarket_flattened.sol\":25563:25565  10 */\n      0x0a\n        /* \"nftmarket_flattened.sol\":25556:25561  value */\n      dup7\n        /* \"nftmarket_flattened.sol\":25552:25566  mod(value, 10) */\n      mod\n        /* \"nftmarket_flattened.sol\":25547:25579  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"nftmarket_flattened.sol\":25542:25545  ptr */\n      dup2\n        /* \"nftmarket_flattened.sol\":25534:25580  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"nftmarket_flattened.sol\":25624:25626  10 */\n      0x0a\n        /* \"nftmarket_flattened.sol\":25615:25626  value /= 10 */\n      dup6\n      dup2\n      tag_393\n      jumpi\n      tag_394\n      tag_395\n      jump\t// in\n    tag_394:\n    tag_393:\n      div\n      swap5\n      pop\n        /* \"nftmarket_flattened.sol\":25657:25658  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":25648:25653  value */\n      dup6\n        /* \"nftmarket_flattened.sol\":25648:25658  value == 0 */\n      sub\n        /* \"nftmarket_flattened.sol\":25398:25680  while (true) {... */\n      tag_391\n        /* \"nftmarket_flattened.sol\":25644:25665  if (value == 0) break */\n      jumpi\n        /* \"nftmarket_flattened.sol\":25398:25680  while (true) {... */\n    tag_392:\n        /* \"nftmarket_flattened.sol\":25700:25706  buffer */\n      dup2\n        /* \"nftmarket_flattened.sol\":25693:25706  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":25025:25723  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":44870:45142  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_374:\n        /* \"nftmarket_flattened.sol\":44973:44977  bool */\n      0x00\n        /* \"nftmarket_flattened.sol\":45027:45028  0 */\n      dup1\n        /* \"nftmarket_flattened.sol\":45008:45029  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":45008:45015  spender */\n      dup4\n        /* \"nftmarket_flattened.sol\":45008:45029  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nftmarket_flattened.sol\":45008:45135  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_398\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":45055:45062  spender */\n      dup3\n        /* \"nftmarket_flattened.sol\":45046:45062  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":45046:45051  owner */\n      dup5\n        /* \"nftmarket_flattened.sol\":45046:45062  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":45046:45098  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_399\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":45066:45098  isApprovedForAll(owner, spender) */\n      tag_400\n        /* \"nftmarket_flattened.sol\":45083:45088  owner */\n      dup5\n        /* \"nftmarket_flattened.sol\":45090:45097  spender */\n      dup5\n        /* \"nftmarket_flattened.sol\":45066:45082  isApprovedForAll */\n      tag_152\n        /* \"nftmarket_flattened.sol\":45066:45098  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_400:\n        /* \"nftmarket_flattened.sol\":45046:45098  owner == spender || isApprovedForAll(owner, spender) */\n    tag_399:\n        /* \"nftmarket_flattened.sol\":45046:45134  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_401\n      jumpi\n      pop\n        /* \"nftmarket_flattened.sol\":45127:45134  spender */\n      dup3\n        /* \"nftmarket_flattened.sol\":45102:45134  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":45102:45123  _getApproved(tokenId) */\n      tag_402\n        /* \"nftmarket_flattened.sol\":45115:45122  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":45102:45114  _getApproved */\n      tag_179\n        /* \"nftmarket_flattened.sol\":45102:45123  _getApproved(tokenId) */\n      jump\t// in\n    tag_402:\n        /* \"nftmarket_flattened.sol\":45102:45134  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":45046:45134  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_401:\n        /* \"nftmarket_flattened.sol\":45008:45135  spender != address(0) &&... */\n    tag_398:\n        /* \"nftmarket_flattened.sol\":44989:45135  return... */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":44870:45142  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":48449:48776  function _mint(address to, uint256 tokenId) internal {... */\n    tag_382:\n        /* \"nftmarket_flattened.sol\":48530:48531  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":48516:48532  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":48516:48518  to */\n      dup3\n        /* \"nftmarket_flattened.sol\":48516:48532  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket_flattened.sol\":48512:48599  if (to == address(0)) {... */\n      tag_404\n      jumpi\n        /* \"nftmarket_flattened.sol\":48585:48586  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":48555:48588  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_405\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":48512:48599  if (to == address(0)) {... */\n    tag_404:\n        /* \"nftmarket_flattened.sol\":48608:48629  address previousOwner */\n      0x00\n        /* \"nftmarket_flattened.sol\":48632:48664  _update(to, tokenId, address(0)) */\n      tag_406\n        /* \"nftmarket_flattened.sol\":48640:48642  to */\n      dup4\n        /* \"nftmarket_flattened.sol\":48644:48651  tokenId */\n      dup4\n        /* \"nftmarket_flattened.sol\":48661:48662  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":48632:48639  _update */\n      tag_190\n        /* \"nftmarket_flattened.sol\":48632:48664  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_406:\n        /* \"nftmarket_flattened.sol\":48608:48664  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":48703:48704  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":48678:48705  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket_flattened.sol\":48678:48691  previousOwner */\n      dup2\n        /* \"nftmarket_flattened.sol\":48678:48705  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket_flattened.sol\":48674:48770  if (previousOwner != address(0)) {... */\n      tag_407\n      jumpi\n        /* \"nftmarket_flattened.sol\":48756:48757  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":48728:48759  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"nftmarket_flattened.sol\":48674:48770  if (previousOwner != address(0)) {... */\n    tag_407:\n        /* \"nftmarket_flattened.sol\":48502:48776  {... */\n      pop\n        /* \"nftmarket_flattened.sol\":48449:48776  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket_flattened.sol\":21549:22465  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_386:\n        /* \"nftmarket_flattened.sol\":21602:21609  uint256 */\n      0x00\n        /* \"nftmarket_flattened.sol\":21621:21635  uint256 result */\n      dup1\n        /* \"nftmarket_flattened.sol\":21638:21639  0 */\n      0x00\n        /* \"nftmarket_flattened.sol\":21621:21639  uint256 result = 0 */\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":21686:21694  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"nftmarket_flattened.sol\":21677:21682  value */\n      dup4\n        /* \"nftmarket_flattened.sol\":21677:21694  value >= 10 ** 64 */\n      lt\n        /* \"nftmarket_flattened.sol\":21673:21776  if (value >= 10 ** 64) {... */\n      tag_410\n      jumpi\n        /* \"nftmarket_flattened.sol\":21723:21731  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"nftmarket_flattened.sol\":21714:21731  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_411\n      jumpi\n      tag_412\n      tag_395\n      jump\t// in\n    tag_412:\n    tag_411:\n      div\n      swap3\n      pop\n        /* \"nftmarket_flattened.sol\":21759:21761  64 */\n      0x40\n        /* \"nftmarket_flattened.sol\":21749:21761  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":21673:21776  if (value >= 10 ** 64) {... */\n    tag_410:\n        /* \"nftmarket_flattened.sol\":21802:21810  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"nftmarket_flattened.sol\":21793:21798  value */\n      dup4\n        /* \"nftmarket_flattened.sol\":21793:21810  value >= 10 ** 32 */\n      lt\n        /* \"nftmarket_flattened.sol\":21789:21892  if (value >= 10 ** 32) {... */\n      tag_413\n      jumpi\n        /* \"nftmarket_flattened.sol\":21839:21847  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"nftmarket_flattened.sol\":21830:21847  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_414\n      jumpi\n      tag_415\n      tag_395\n      jump\t// in\n    tag_415:\n    tag_414:\n      div\n      swap3\n      pop\n        /* \"nftmarket_flattened.sol\":21875:21877  32 */\n      0x20\n        /* \"nftmarket_flattened.sol\":21865:21877  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":21789:21892  if (value >= 10 ** 32) {... */\n    tag_413:\n        /* \"nftmarket_flattened.sol\":21918:21926  10 ** 16 */\n      0x2386f26fc10000\n        /* \"nftmarket_flattened.sol\":21909:21914  value */\n      dup4\n        /* \"nftmarket_flattened.sol\":21909:21926  value >= 10 ** 16 */\n      lt\n        /* \"nftmarket_flattened.sol\":21905:22008  if (value >= 10 ** 16) {... */\n      tag_416\n      jumpi\n        /* \"nftmarket_flattened.sol\":21955:21963  10 ** 16 */\n      0x2386f26fc10000\n        /* \"nftmarket_flattened.sol\":21946:21963  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_417\n      jumpi\n      tag_418\n      tag_395\n      jump\t// in\n    tag_418:\n    tag_417:\n      div\n      swap3\n      pop\n        /* \"nftmarket_flattened.sol\":21991:21993  16 */\n      0x10\n        /* \"nftmarket_flattened.sol\":21981:21993  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":21905:22008  if (value >= 10 ** 16) {... */\n    tag_416:\n        /* \"nftmarket_flattened.sol\":22034:22041  10 ** 8 */\n      0x05f5e100\n        /* \"nftmarket_flattened.sol\":22025:22030  value */\n      dup4\n        /* \"nftmarket_flattened.sol\":22025:22041  value >= 10 ** 8 */\n      lt\n        /* \"nftmarket_flattened.sol\":22021:22121  if (value >= 10 ** 8) {... */\n      tag_419\n      jumpi\n        /* \"nftmarket_flattened.sol\":22070:22077  10 ** 8 */\n      0x05f5e100\n        /* \"nftmarket_flattened.sol\":22061:22077  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_420\n      jumpi\n      tag_421\n      tag_395\n      jump\t// in\n    tag_421:\n    tag_420:\n      div\n      swap3\n      pop\n        /* \"nftmarket_flattened.sol\":22105:22106  8 */\n      0x08\n        /* \"nftmarket_flattened.sol\":22095:22106  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":22021:22121  if (value >= 10 ** 8) {... */\n    tag_419:\n        /* \"nftmarket_flattened.sol\":22147:22154  10 ** 4 */\n      0x2710\n        /* \"nftmarket_flattened.sol\":22138:22143  value */\n      dup4\n        /* \"nftmarket_flattened.sol\":22138:22154  value >= 10 ** 4 */\n      lt\n        /* \"nftmarket_flattened.sol\":22134:22234  if (value >= 10 ** 4) {... */\n      tag_422\n      jumpi\n        /* \"nftmarket_flattened.sol\":22183:22190  10 ** 4 */\n      0x2710\n        /* \"nftmarket_flattened.sol\":22174:22190  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_423\n      jumpi\n      tag_424\n      tag_395\n      jump\t// in\n    tag_424:\n    tag_423:\n      div\n      swap3\n      pop\n        /* \"nftmarket_flattened.sol\":22218:22219  4 */\n      0x04\n        /* \"nftmarket_flattened.sol\":22208:22219  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":22134:22234  if (value >= 10 ** 4) {... */\n    tag_422:\n        /* \"nftmarket_flattened.sol\":22260:22267  10 ** 2 */\n      0x64\n        /* \"nftmarket_flattened.sol\":22251:22256  value */\n      dup4\n        /* \"nftmarket_flattened.sol\":22251:22267  value >= 10 ** 2 */\n      lt\n        /* \"nftmarket_flattened.sol\":22247:22347  if (value >= 10 ** 2) {... */\n      tag_425\n      jumpi\n        /* \"nftmarket_flattened.sol\":22296:22303  10 ** 2 */\n      0x64\n        /* \"nftmarket_flattened.sol\":22287:22303  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_426\n      jumpi\n      tag_427\n      tag_395\n      jump\t// in\n    tag_427:\n    tag_426:\n      div\n      swap3\n      pop\n        /* \"nftmarket_flattened.sol\":22331:22332  2 */\n      0x02\n        /* \"nftmarket_flattened.sol\":22321:22332  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":22247:22347  if (value >= 10 ** 2) {... */\n    tag_425:\n        /* \"nftmarket_flattened.sol\":22373:22380  10 ** 1 */\n      0x0a\n        /* \"nftmarket_flattened.sol\":22364:22369  value */\n      dup4\n        /* \"nftmarket_flattened.sol\":22364:22380  value >= 10 ** 1 */\n      lt\n        /* \"nftmarket_flattened.sol\":22360:22426  if (value >= 10 ** 1) {... */\n      tag_428\n      jumpi\n        /* \"nftmarket_flattened.sol\":22410:22411  1 */\n      0x01\n        /* \"nftmarket_flattened.sol\":22400:22411  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"nftmarket_flattened.sol\":22360:22426  if (value >= 10 ** 1) {... */\n    tag_428:\n        /* \"nftmarket_flattened.sol\":22452:22458  result */\n      dup1\n        /* \"nftmarket_flattened.sol\":22445:22458  return result */\n      swap2\n      pop\n      pop\n        /* \"nftmarket_flattened.sol\":21549:22465  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_429:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_430:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_431:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_432:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_433:\n        /* \"#utility.yul\":561:584   */\n      tag_501\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_432\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_502:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_434:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_504\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_433\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_36:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_507\n      tag_430\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":833:952   */\n    tag_506:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_508\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_434\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_435:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_436:\n        /* \"#utility.yul\":1268:1289   */\n      tag_511\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_435\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_39:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_513\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_436\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_437:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_438:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_439:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_517:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_517)\n    tag_519:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_440:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_441:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_522\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_437\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":2329:2400   */\n      tag_523\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_438\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_524\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_439\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":2499:2528   */\n      tag_525\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_440\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_44:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_527\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_441\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_442:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_443:\n        /* \"#utility.yul\":3016:3040   */\n      tag_530\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_442\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_531:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_444:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_533\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_443\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_48:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_536\n      tag_430\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3292:3411   */\n    tag_535:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_537\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_444\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_445:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_446:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_540\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_445\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_447:\n        /* \"#utility.yul\":3872:3896   */\n      tag_542\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_446\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_51:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_544\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_447\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_448:\n        /* \"#utility.yul\":4210:4234   */\n      tag_546\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_446\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_547:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_449:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_549\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_448\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_55:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_552\n      tag_430\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4503:4622   */\n    tag_551:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_553\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_449\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_554\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_444\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_60:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_557\n      tag_430\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":5000:5119   */\n    tag_556:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_558\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_449\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_559\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_449\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_560\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_444\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5633   */\n    tag_450:\n        /* \"#utility.yul\":5602:5626   */\n      tag_562\n        /* \"#utility.yul\":5620:5625   */\n      dup2\n        /* \"#utility.yul\":5602:5626   */\n      tag_442\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5597:5600   */\n      dup3\n        /* \"#utility.yul\":5590:5627   */\n      mstore\n        /* \"#utility.yul\":5515:5633   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5639:5971   */\n    tag_67:\n        /* \"#utility.yul\":5760:5764   */\n      0x00\n        /* \"#utility.yul\":5798:5800   */\n      0x40\n        /* \"#utility.yul\":5787:5796   */\n      dup3\n        /* \"#utility.yul\":5783:5801   */\n      add\n        /* \"#utility.yul\":5775:5801   */\n      swap1\n      pop\n        /* \"#utility.yul\":5811:5882   */\n      tag_564\n        /* \"#utility.yul\":5879:5880   */\n      0x00\n        /* \"#utility.yul\":5868:5877   */\n      dup4\n        /* \"#utility.yul\":5864:5881   */\n      add\n        /* \"#utility.yul\":5855:5861   */\n      dup6\n        /* \"#utility.yul\":5811:5882   */\n      tag_447\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":5892:5964   */\n      tag_565\n        /* \"#utility.yul\":5960:5962   */\n      0x20\n        /* \"#utility.yul\":5949:5958   */\n      dup4\n        /* \"#utility.yul\":5945:5963   */\n      add\n        /* \"#utility.yul\":5936:5942   */\n      dup5\n        /* \"#utility.yul\":5892:5964   */\n      tag_450\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":5639:5971   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5977:6451   */\n    tag_71:\n        /* \"#utility.yul\":6045:6051   */\n      0x00\n        /* \"#utility.yul\":6053:6059   */\n      dup1\n        /* \"#utility.yul\":6102:6104   */\n      0x40\n        /* \"#utility.yul\":6090:6099   */\n      dup4\n        /* \"#utility.yul\":6081:6088   */\n      dup6\n        /* \"#utility.yul\":6077:6100   */\n      sub\n        /* \"#utility.yul\":6073:6105   */\n      slt\n        /* \"#utility.yul\":6070:6189   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":6108:6187   */\n      tag_568\n      tag_430\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":6070:6189   */\n    tag_567:\n        /* \"#utility.yul\":6228:6229   */\n      0x00\n        /* \"#utility.yul\":6253:6306   */\n      tag_569\n        /* \"#utility.yul\":6298:6305   */\n      dup6\n        /* \"#utility.yul\":6289:6295   */\n      dup3\n        /* \"#utility.yul\":6278:6287   */\n      dup7\n        /* \"#utility.yul\":6274:6296   */\n      add\n        /* \"#utility.yul\":6253:6306   */\n      tag_444\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":6243:6306   */\n      swap3\n      pop\n        /* \"#utility.yul\":6199:6316   */\n      pop\n        /* \"#utility.yul\":6355:6357   */\n      0x20\n        /* \"#utility.yul\":6381:6434   */\n      tag_570\n        /* \"#utility.yul\":6426:6433   */\n      dup6\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6406:6415   */\n      dup7\n        /* \"#utility.yul\":6402:6424   */\n      add\n        /* \"#utility.yul\":6381:6434   */\n      tag_444\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":6371:6434   */\n      swap2\n      pop\n        /* \"#utility.yul\":6326:6444   */\n      pop\n        /* \"#utility.yul\":5977:6451   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6457:6679   */\n    tag_78:\n        /* \"#utility.yul\":6550:6554   */\n      0x00\n        /* \"#utility.yul\":6588:6590   */\n      0x20\n        /* \"#utility.yul\":6577:6586   */\n      dup3\n        /* \"#utility.yul\":6573:6591   */\n      add\n        /* \"#utility.yul\":6565:6591   */\n      swap1\n      pop\n        /* \"#utility.yul\":6601:6672   */\n      tag_572\n        /* \"#utility.yul\":6669:6670   */\n      0x00\n        /* \"#utility.yul\":6658:6667   */\n      dup4\n        /* \"#utility.yul\":6654:6671   */\n      add\n        /* \"#utility.yul\":6645:6651   */\n      dup5\n        /* \"#utility.yul\":6601:6672   */\n      tag_450\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6457:6679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6685:6802   */\n    tag_451:\n        /* \"#utility.yul\":6794:6795   */\n      0x00\n        /* \"#utility.yul\":6791:6792   */\n      dup1\n        /* \"#utility.yul\":6784:6796   */\n      revert\n        /* \"#utility.yul\":6808:6925   */\n    tag_452:\n        /* \"#utility.yul\":6917:6918   */\n      0x00\n        /* \"#utility.yul\":6914:6915   */\n      dup1\n        /* \"#utility.yul\":6907:6919   */\n      revert\n        /* \"#utility.yul\":6931:7111   */\n    tag_389:\n        /* \"#utility.yul\":6979:7056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6976:6977   */\n      0x00\n        /* \"#utility.yul\":6969:7057   */\n      mstore\n        /* \"#utility.yul\":7076:7080   */\n      0x41\n        /* \"#utility.yul\":7073:7074   */\n      0x04\n        /* \"#utility.yul\":7066:7081   */\n      mstore\n        /* \"#utility.yul\":7100:7104   */\n      0x24\n        /* \"#utility.yul\":7097:7098   */\n      0x00\n        /* \"#utility.yul\":7090:7105   */\n      revert\n        /* \"#utility.yul\":7117:7398   */\n    tag_453:\n        /* \"#utility.yul\":7200:7227   */\n      tag_577\n        /* \"#utility.yul\":7222:7226   */\n      dup3\n        /* \"#utility.yul\":7200:7227   */\n      tag_440\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":7192:7198   */\n      dup2\n        /* \"#utility.yul\":7188:7228   */\n      add\n        /* \"#utility.yul\":7330:7336   */\n      dup2\n        /* \"#utility.yul\":7318:7328   */\n      dup2\n        /* \"#utility.yul\":7315:7337   */\n      lt\n        /* \"#utility.yul\":7294:7312   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7282:7292   */\n      dup3\n        /* \"#utility.yul\":7279:7313   */\n      gt\n        /* \"#utility.yul\":7276:7338   */\n      or\n        /* \"#utility.yul\":7273:7361   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":7341:7359   */\n      tag_579\n      tag_389\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":7273:7361   */\n    tag_578:\n        /* \"#utility.yul\":7381:7391   */\n      dup1\n        /* \"#utility.yul\":7377:7379   */\n      0x40\n        /* \"#utility.yul\":7370:7392   */\n      mstore\n        /* \"#utility.yul\":7160:7398   */\n      pop\n        /* \"#utility.yul\":7117:7398   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:7533   */\n    tag_454:\n        /* \"#utility.yul\":7438:7444   */\n      0x00\n        /* \"#utility.yul\":7465:7485   */\n      tag_581\n      tag_429\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":7455:7485   */\n      swap1\n      pop\n        /* \"#utility.yul\":7494:7527   */\n      tag_582\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7514:7520   */\n      dup3\n        /* \"#utility.yul\":7494:7527   */\n      tag_453\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7404:7533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7539:7847   */\n    tag_455:\n        /* \"#utility.yul\":7601:7605   */\n      0x00\n        /* \"#utility.yul\":7691:7709   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7683:7689   */\n      dup3\n        /* \"#utility.yul\":7680:7710   */\n      gt\n        /* \"#utility.yul\":7677:7733   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":7713:7731   */\n      tag_585\n      tag_389\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7677:7733   */\n    tag_584:\n        /* \"#utility.yul\":7751:7780   */\n      tag_586\n        /* \"#utility.yul\":7773:7779   */\n      dup3\n        /* \"#utility.yul\":7751:7780   */\n      tag_440\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":7743:7780   */\n      swap1\n      pop\n        /* \"#utility.yul\":7835:7839   */\n      0x20\n        /* \"#utility.yul\":7829:7833   */\n      dup2\n        /* \"#utility.yul\":7825:7840   */\n      add\n        /* \"#utility.yul\":7817:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7539:7847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7853:7999   */\n    tag_456:\n        /* \"#utility.yul\":7950:7956   */\n      dup3\n        /* \"#utility.yul\":7945:7948   */\n      dup2\n        /* \"#utility.yul\":7940:7943   */\n      dup4\n        /* \"#utility.yul\":7927:7957   */\n      calldatacopy\n        /* \"#utility.yul\":7991:7992   */\n      0x00\n        /* \"#utility.yul\":7982:7988   */\n      dup4\n        /* \"#utility.yul\":7977:7980   */\n      dup4\n        /* \"#utility.yul\":7973:7989   */\n      add\n        /* \"#utility.yul\":7966:7993   */\n      mstore\n        /* \"#utility.yul\":7853:7999   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8005:8430   */\n    tag_457:\n        /* \"#utility.yul\":8083:8088   */\n      0x00\n        /* \"#utility.yul\":8108:8174   */\n      tag_589\n        /* \"#utility.yul\":8124:8173   */\n      tag_590\n        /* \"#utility.yul\":8166:8172   */\n      dup5\n        /* \"#utility.yul\":8124:8173   */\n      tag_455\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":8108:8174   */\n      tag_454\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":8099:8174   */\n      swap1\n      pop\n        /* \"#utility.yul\":8197:8203   */\n      dup3\n        /* \"#utility.yul\":8190:8195   */\n      dup2\n        /* \"#utility.yul\":8183:8204   */\n      mstore\n        /* \"#utility.yul\":8235:8239   */\n      0x20\n        /* \"#utility.yul\":8228:8233   */\n      dup2\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8273:8276   */\n      dup5\n        /* \"#utility.yul\":8264:8270   */\n      dup5\n        /* \"#utility.yul\":8259:8262   */\n      dup5\n        /* \"#utility.yul\":8255:8271   */\n      add\n        /* \"#utility.yul\":8252:8277   */\n      gt\n        /* \"#utility.yul\":8249:8361   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":8280:8359   */\n      tag_592\n      tag_452\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":8249:8361   */\n    tag_591:\n        /* \"#utility.yul\":8370:8424   */\n      tag_593\n        /* \"#utility.yul\":8417:8423   */\n      dup5\n        /* \"#utility.yul\":8412:8415   */\n      dup3\n        /* \"#utility.yul\":8407:8410   */\n      dup6\n        /* \"#utility.yul\":8370:8424   */\n      tag_456\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":8089:8430   */\n      pop\n        /* \"#utility.yul\":8005:8430   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8450:8790   */\n    tag_458:\n        /* \"#utility.yul\":8506:8511   */\n      0x00\n        /* \"#utility.yul\":8555:8558   */\n      dup3\n        /* \"#utility.yul\":8548:8552   */\n      0x1f\n        /* \"#utility.yul\":8540:8546   */\n      dup4\n        /* \"#utility.yul\":8536:8553   */\n      add\n        /* \"#utility.yul\":8532:8559   */\n      slt\n        /* \"#utility.yul\":8522:8644   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":8563:8642   */\n      tag_596\n      tag_451\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8522:8644   */\n    tag_595:\n        /* \"#utility.yul\":8680:8686   */\n      dup2\n        /* \"#utility.yul\":8667:8687   */\n      calldataload\n        /* \"#utility.yul\":8705:8784   */\n      tag_597\n        /* \"#utility.yul\":8780:8783   */\n      dup5\n        /* \"#utility.yul\":8772:8778   */\n      dup3\n        /* \"#utility.yul\":8765:8769   */\n      0x20\n        /* \"#utility.yul\":8757:8763   */\n      dup7\n        /* \"#utility.yul\":8753:8770   */\n      add\n        /* \"#utility.yul\":8705:8784   */\n      tag_457\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":8696:8784   */\n      swap2\n      pop\n        /* \"#utility.yul\":8512:8790   */\n      pop\n        /* \"#utility.yul\":8450:8790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8796:9305   */\n    tag_86:\n        /* \"#utility.yul\":8865:8871   */\n      0x00\n        /* \"#utility.yul\":8914:8916   */\n      0x20\n        /* \"#utility.yul\":8902:8911   */\n      dup3\n        /* \"#utility.yul\":8893:8900   */\n      dup5\n        /* \"#utility.yul\":8889:8912   */\n      sub\n        /* \"#utility.yul\":8885:8917   */\n      slt\n        /* \"#utility.yul\":8882:9001   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":8920:8999   */\n      tag_600\n      tag_430\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8882:9001   */\n    tag_599:\n        /* \"#utility.yul\":9068:9069   */\n      0x00\n        /* \"#utility.yul\":9057:9066   */\n      dup3\n        /* \"#utility.yul\":9053:9070   */\n      add\n        /* \"#utility.yul\":9040:9071   */\n      calldataload\n        /* \"#utility.yul\":9098:9116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9090:9096   */\n      dup2\n        /* \"#utility.yul\":9087:9117   */\n      gt\n        /* \"#utility.yul\":9084:9201   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":9120:9199   */\n      tag_602\n      tag_431\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":9084:9201   */\n    tag_601:\n        /* \"#utility.yul\":9225:9288   */\n      tag_603\n        /* \"#utility.yul\":9280:9287   */\n      dup5\n        /* \"#utility.yul\":9271:9277   */\n      dup3\n        /* \"#utility.yul\":9260:9269   */\n      dup6\n        /* \"#utility.yul\":9256:9278   */\n      add\n        /* \"#utility.yul\":9225:9288   */\n      tag_458\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":9215:9288   */\n      swap2\n      pop\n        /* \"#utility.yul\":9011:9298   */\n      pop\n        /* \"#utility.yul\":8796:9305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9965   */\n    tag_96:\n        /* \"#utility.yul\":9389:9395   */\n      0x00\n        /* \"#utility.yul\":9397:9403   */\n      dup1\n        /* \"#utility.yul\":9446:9448   */\n      0x40\n        /* \"#utility.yul\":9434:9443   */\n      dup4\n        /* \"#utility.yul\":9425:9432   */\n      dup6\n        /* \"#utility.yul\":9421:9444   */\n      sub\n        /* \"#utility.yul\":9417:9449   */\n      slt\n        /* \"#utility.yul\":9414:9533   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":9452:9531   */\n      tag_606\n      tag_430\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":9414:9533   */\n    tag_605:\n        /* \"#utility.yul\":9600:9601   */\n      0x00\n        /* \"#utility.yul\":9589:9598   */\n      dup4\n        /* \"#utility.yul\":9585:9602   */\n      add\n        /* \"#utility.yul\":9572:9603   */\n      calldataload\n        /* \"#utility.yul\":9630:9648   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9622:9628   */\n      dup2\n        /* \"#utility.yul\":9619:9649   */\n      gt\n        /* \"#utility.yul\":9616:9733   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":9652:9731   */\n      tag_608\n      tag_431\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":9616:9733   */\n    tag_607:\n        /* \"#utility.yul\":9757:9820   */\n      tag_609\n        /* \"#utility.yul\":9812:9819   */\n      dup6\n        /* \"#utility.yul\":9803:9809   */\n      dup3\n        /* \"#utility.yul\":9792:9801   */\n      dup7\n        /* \"#utility.yul\":9788:9810   */\n      add\n        /* \"#utility.yul\":9757:9820   */\n      tag_458\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":9747:9820   */\n      swap3\n      pop\n        /* \"#utility.yul\":9543:9830   */\n      pop\n        /* \"#utility.yul\":9869:9871   */\n      0x20\n        /* \"#utility.yul\":9895:9948   */\n      tag_610\n        /* \"#utility.yul\":9940:9947   */\n      dup6\n        /* \"#utility.yul\":9931:9937   */\n      dup3\n        /* \"#utility.yul\":9920:9929   */\n      dup7\n        /* \"#utility.yul\":9916:9938   */\n      add\n        /* \"#utility.yul\":9895:9948   */\n      tag_444\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":9885:9948   */\n      swap2\n      pop\n        /* \"#utility.yul\":9840:9958   */\n      pop\n        /* \"#utility.yul\":9311:9965   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9971:10300   */\n    tag_106:\n        /* \"#utility.yul\":10030:10036   */\n      0x00\n        /* \"#utility.yul\":10079:10081   */\n      0x20\n        /* \"#utility.yul\":10067:10076   */\n      dup3\n        /* \"#utility.yul\":10058:10065   */\n      dup5\n        /* \"#utility.yul\":10054:10077   */\n      sub\n        /* \"#utility.yul\":10050:10082   */\n      slt\n        /* \"#utility.yul\":10047:10166   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":10085:10164   */\n      tag_613\n      tag_430\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":10047:10166   */\n    tag_612:\n        /* \"#utility.yul\":10205:10206   */\n      0x00\n        /* \"#utility.yul\":10230:10283   */\n      tag_614\n        /* \"#utility.yul\":10275:10282   */\n      dup5\n        /* \"#utility.yul\":10266:10272   */\n      dup3\n        /* \"#utility.yul\":10255:10264   */\n      dup6\n        /* \"#utility.yul\":10251:10273   */\n      add\n        /* \"#utility.yul\":10230:10283   */\n      tag_449\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":10220:10283   */\n      swap2\n      pop\n        /* \"#utility.yul\":10176:10293   */\n      pop\n        /* \"#utility.yul\":9971:10300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10306:10422   */\n    tag_459:\n        /* \"#utility.yul\":10376:10397   */\n      tag_616\n        /* \"#utility.yul\":10391:10396   */\n      dup2\n        /* \"#utility.yul\":10376:10397   */\n      tag_435\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":10369:10374   */\n      dup2\n        /* \"#utility.yul\":10366:10398   */\n      eq\n        /* \"#utility.yul\":10356:10416   */\n      tag_617\n      jumpi\n        /* \"#utility.yul\":10412:10413   */\n      0x00\n        /* \"#utility.yul\":10409:10410   */\n      dup1\n        /* \"#utility.yul\":10402:10414   */\n      revert\n        /* \"#utility.yul\":10356:10416   */\n    tag_617:\n        /* \"#utility.yul\":10306:10422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10428:10561   */\n    tag_460:\n        /* \"#utility.yul\":10471:10476   */\n      0x00\n        /* \"#utility.yul\":10509:10515   */\n      dup2\n        /* \"#utility.yul\":10496:10516   */\n      calldataload\n        /* \"#utility.yul\":10487:10516   */\n      swap1\n      pop\n        /* \"#utility.yul\":10525:10555   */\n      tag_619\n        /* \"#utility.yul\":10549:10554   */\n      dup2\n        /* \"#utility.yul\":10525:10555   */\n      tag_459\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":10428:10561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10567:11035   */\n    tag_125:\n        /* \"#utility.yul\":10632:10638   */\n      0x00\n        /* \"#utility.yul\":10640:10646   */\n      dup1\n        /* \"#utility.yul\":10689:10691   */\n      0x40\n        /* \"#utility.yul\":10677:10686   */\n      dup4\n        /* \"#utility.yul\":10668:10675   */\n      dup6\n        /* \"#utility.yul\":10664:10687   */\n      sub\n        /* \"#utility.yul\":10660:10692   */\n      slt\n        /* \"#utility.yul\":10657:10776   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":10695:10774   */\n      tag_622\n      tag_430\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":10657:10776   */\n    tag_621:\n        /* \"#utility.yul\":10815:10816   */\n      0x00\n        /* \"#utility.yul\":10840:10893   */\n      tag_623\n        /* \"#utility.yul\":10885:10892   */\n      dup6\n        /* \"#utility.yul\":10876:10882   */\n      dup3\n        /* \"#utility.yul\":10865:10874   */\n      dup7\n        /* \"#utility.yul\":10861:10883   */\n      add\n        /* \"#utility.yul\":10840:10893   */\n      tag_449\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":10830:10893   */\n      swap3\n      pop\n        /* \"#utility.yul\":10786:10903   */\n      pop\n        /* \"#utility.yul\":10942:10944   */\n      0x20\n        /* \"#utility.yul\":10968:11018   */\n      tag_624\n        /* \"#utility.yul\":11010:11017   */\n      dup6\n        /* \"#utility.yul\":11001:11007   */\n      dup3\n        /* \"#utility.yul\":10990:10999   */\n      dup7\n        /* \"#utility.yul\":10986:11008   */\n      add\n        /* \"#utility.yul\":10968:11018   */\n      tag_460\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10958:11018   */\n      swap2\n      pop\n        /* \"#utility.yul\":10913:11028   */\n      pop\n        /* \"#utility.yul\":10567:11035   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11041:11348   */\n    tag_461:\n        /* \"#utility.yul\":11102:11106   */\n      0x00\n        /* \"#utility.yul\":11192:11210   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11184:11190   */\n      dup3\n        /* \"#utility.yul\":11181:11211   */\n      gt\n        /* \"#utility.yul\":11178:11234   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":11214:11232   */\n      tag_627\n      tag_389\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":11178:11234   */\n    tag_626:\n        /* \"#utility.yul\":11252:11281   */\n      tag_628\n        /* \"#utility.yul\":11274:11280   */\n      dup3\n        /* \"#utility.yul\":11252:11281   */\n      tag_440\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":11244:11281   */\n      swap1\n      pop\n        /* \"#utility.yul\":11336:11340   */\n      0x20\n        /* \"#utility.yul\":11330:11334   */\n      dup2\n        /* \"#utility.yul\":11326:11341   */\n      add\n        /* \"#utility.yul\":11318:11341   */\n      swap1\n      pop\n        /* \"#utility.yul\":11041:11348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11354:11777   */\n    tag_462:\n        /* \"#utility.yul\":11431:11436   */\n      0x00\n        /* \"#utility.yul\":11456:11521   */\n      tag_630\n        /* \"#utility.yul\":11472:11520   */\n      tag_631\n        /* \"#utility.yul\":11513:11519   */\n      dup5\n        /* \"#utility.yul\":11472:11520   */\n      tag_461\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":11456:11521   */\n      tag_454\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":11447:11521   */\n      swap1\n      pop\n        /* \"#utility.yul\":11544:11550   */\n      dup3\n        /* \"#utility.yul\":11537:11542   */\n      dup2\n        /* \"#utility.yul\":11530:11551   */\n      mstore\n        /* \"#utility.yul\":11582:11586   */\n      0x20\n        /* \"#utility.yul\":11575:11580   */\n      dup2\n        /* \"#utility.yul\":11571:11587   */\n      add\n        /* \"#utility.yul\":11620:11623   */\n      dup5\n        /* \"#utility.yul\":11611:11617   */\n      dup5\n        /* \"#utility.yul\":11606:11609   */\n      dup5\n        /* \"#utility.yul\":11602:11618   */\n      add\n        /* \"#utility.yul\":11599:11624   */\n      gt\n        /* \"#utility.yul\":11596:11708   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":11627:11706   */\n      tag_633\n      tag_452\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":11596:11708   */\n    tag_632:\n        /* \"#utility.yul\":11717:11771   */\n      tag_634\n        /* \"#utility.yul\":11764:11770   */\n      dup5\n        /* \"#utility.yul\":11759:11762   */\n      dup3\n        /* \"#utility.yul\":11754:11757   */\n      dup6\n        /* \"#utility.yul\":11717:11771   */\n      tag_456\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":11437:11777   */\n      pop\n        /* \"#utility.yul\":11354:11777   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11796:12134   */\n    tag_463:\n        /* \"#utility.yul\":11851:11856   */\n      0x00\n        /* \"#utility.yul\":11900:11903   */\n      dup3\n        /* \"#utility.yul\":11893:11897   */\n      0x1f\n        /* \"#utility.yul\":11885:11891   */\n      dup4\n        /* \"#utility.yul\":11881:11898   */\n      add\n        /* \"#utility.yul\":11877:11904   */\n      slt\n        /* \"#utility.yul\":11867:11989   */\n      tag_636\n      jumpi\n        /* \"#utility.yul\":11908:11987   */\n      tag_637\n      tag_451\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":11867:11989   */\n    tag_636:\n        /* \"#utility.yul\":12025:12031   */\n      dup2\n        /* \"#utility.yul\":12012:12032   */\n      calldataload\n        /* \"#utility.yul\":12050:12128   */\n      tag_638\n        /* \"#utility.yul\":12124:12127   */\n      dup5\n        /* \"#utility.yul\":12116:12122   */\n      dup3\n        /* \"#utility.yul\":12109:12113   */\n      0x20\n        /* \"#utility.yul\":12101:12107   */\n      dup7\n        /* \"#utility.yul\":12097:12114   */\n      add\n        /* \"#utility.yul\":12050:12128   */\n      tag_462\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12041:12128   */\n      swap2\n      pop\n        /* \"#utility.yul\":11857:12134   */\n      pop\n        /* \"#utility.yul\":11796:12134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12140:13083   */\n    tag_137:\n        /* \"#utility.yul\":12235:12241   */\n      0x00\n        /* \"#utility.yul\":12243:12249   */\n      dup1\n        /* \"#utility.yul\":12251:12257   */\n      0x00\n        /* \"#utility.yul\":12259:12265   */\n      dup1\n        /* \"#utility.yul\":12308:12311   */\n      0x80\n        /* \"#utility.yul\":12296:12305   */\n      dup6\n        /* \"#utility.yul\":12287:12294   */\n      dup8\n        /* \"#utility.yul\":12283:12306   */\n      sub\n        /* \"#utility.yul\":12279:12312   */\n      slt\n        /* \"#utility.yul\":12276:12396   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":12315:12394   */\n      tag_641\n      tag_430\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":12276:12396   */\n    tag_640:\n        /* \"#utility.yul\":12435:12436   */\n      0x00\n        /* \"#utility.yul\":12460:12513   */\n      tag_642\n        /* \"#utility.yul\":12505:12512   */\n      dup8\n        /* \"#utility.yul\":12496:12502   */\n      dup3\n        /* \"#utility.yul\":12485:12494   */\n      dup9\n        /* \"#utility.yul\":12481:12503   */\n      add\n        /* \"#utility.yul\":12460:12513   */\n      tag_449\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":12450:12513   */\n      swap5\n      pop\n        /* \"#utility.yul\":12406:12523   */\n      pop\n        /* \"#utility.yul\":12562:12564   */\n      0x20\n        /* \"#utility.yul\":12588:12641   */\n      tag_643\n        /* \"#utility.yul\":12633:12640   */\n      dup8\n        /* \"#utility.yul\":12624:12630   */\n      dup3\n        /* \"#utility.yul\":12613:12622   */\n      dup9\n        /* \"#utility.yul\":12609:12631   */\n      add\n        /* \"#utility.yul\":12588:12641   */\n      tag_449\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":12578:12641   */\n      swap4\n      pop\n        /* \"#utility.yul\":12533:12651   */\n      pop\n        /* \"#utility.yul\":12690:12692   */\n      0x40\n        /* \"#utility.yul\":12716:12769   */\n      tag_644\n        /* \"#utility.yul\":12761:12768   */\n      dup8\n        /* \"#utility.yul\":12752:12758   */\n      dup3\n        /* \"#utility.yul\":12741:12750   */\n      dup9\n        /* \"#utility.yul\":12737:12759   */\n      add\n        /* \"#utility.yul\":12716:12769   */\n      tag_444\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":12706:12769   */\n      swap3\n      pop\n        /* \"#utility.yul\":12661:12779   */\n      pop\n        /* \"#utility.yul\":12846:12848   */\n      0x60\n        /* \"#utility.yul\":12835:12844   */\n      dup6\n        /* \"#utility.yul\":12831:12849   */\n      add\n        /* \"#utility.yul\":12818:12850   */\n      calldataload\n        /* \"#utility.yul\":12877:12895   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12869:12875   */\n      dup2\n        /* \"#utility.yul\":12866:12896   */\n      gt\n        /* \"#utility.yul\":12863:12980   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":12899:12978   */\n      tag_646\n      tag_431\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":12863:12980   */\n    tag_645:\n        /* \"#utility.yul\":13004:13066   */\n      tag_647\n        /* \"#utility.yul\":13058:13065   */\n      dup8\n        /* \"#utility.yul\":13049:13055   */\n      dup3\n        /* \"#utility.yul\":13038:13047   */\n      dup9\n        /* \"#utility.yul\":13034:13056   */\n      add\n        /* \"#utility.yul\":13004:13066   */\n      tag_463\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":12994:13066   */\n      swap2\n      pop\n        /* \"#utility.yul\":12789:13076   */\n      pop\n        /* \"#utility.yul\":12140:13083   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13089:13563   */\n    tag_151:\n        /* \"#utility.yul\":13157:13163   */\n      0x00\n        /* \"#utility.yul\":13165:13171   */\n      dup1\n        /* \"#utility.yul\":13214:13216   */\n      0x40\n        /* \"#utility.yul\":13202:13211   */\n      dup4\n        /* \"#utility.yul\":13193:13200   */\n      dup6\n        /* \"#utility.yul\":13189:13212   */\n      sub\n        /* \"#utility.yul\":13185:13217   */\n      slt\n        /* \"#utility.yul\":13182:13301   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":13220:13299   */\n      tag_650\n      tag_430\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":13182:13301   */\n    tag_649:\n        /* \"#utility.yul\":13340:13341   */\n      0x00\n        /* \"#utility.yul\":13365:13418   */\n      tag_651\n        /* \"#utility.yul\":13410:13417   */\n      dup6\n        /* \"#utility.yul\":13401:13407   */\n      dup3\n        /* \"#utility.yul\":13390:13399   */\n      dup7\n        /* \"#utility.yul\":13386:13408   */\n      add\n        /* \"#utility.yul\":13365:13418   */\n      tag_449\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":13355:13418   */\n      swap3\n      pop\n        /* \"#utility.yul\":13311:13428   */\n      pop\n        /* \"#utility.yul\":13467:13469   */\n      0x20\n        /* \"#utility.yul\":13493:13546   */\n      tag_652\n        /* \"#utility.yul\":13538:13545   */\n      dup6\n        /* \"#utility.yul\":13529:13535   */\n      dup3\n        /* \"#utility.yul\":13518:13527   */\n      dup7\n        /* \"#utility.yul\":13514:13536   */\n      add\n        /* \"#utility.yul\":13493:13546   */\n      tag_449\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":13483:13546   */\n      swap2\n      pop\n        /* \"#utility.yul\":13438:13556   */\n      pop\n        /* \"#utility.yul\":13089:13563   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13569:13749   */\n    tag_464:\n        /* \"#utility.yul\":13617:13694   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13614:13615   */\n      0x00\n        /* \"#utility.yul\":13607:13695   */\n      mstore\n        /* \"#utility.yul\":13714:13718   */\n      0x22\n        /* \"#utility.yul\":13711:13712   */\n      0x04\n        /* \"#utility.yul\":13704:13719   */\n      mstore\n        /* \"#utility.yul\":13738:13742   */\n      0x24\n        /* \"#utility.yul\":13735:13736   */\n      0x00\n        /* \"#utility.yul\":13728:13743   */\n      revert\n        /* \"#utility.yul\":13755:14075   */\n    tag_170:\n        /* \"#utility.yul\":13799:13805   */\n      0x00\n        /* \"#utility.yul\":13836:13837   */\n      0x02\n        /* \"#utility.yul\":13830:13834   */\n      dup3\n        /* \"#utility.yul\":13826:13838   */\n      div\n        /* \"#utility.yul\":13816:13838   */\n      swap1\n      pop\n        /* \"#utility.yul\":13883:13884   */\n      0x01\n        /* \"#utility.yul\":13877:13881   */\n      dup3\n        /* \"#utility.yul\":13873:13885   */\n      and\n        /* \"#utility.yul\":13904:13922   */\n      dup1\n        /* \"#utility.yul\":13894:13975   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":13960:13964   */\n      0x7f\n        /* \"#utility.yul\":13952:13958   */\n      dup3\n        /* \"#utility.yul\":13948:13965   */\n      and\n        /* \"#utility.yul\":13938:13965   */\n      swap2\n      pop\n        /* \"#utility.yul\":13894:13975   */\n    tag_655:\n        /* \"#utility.yul\":14022:14024   */\n      0x20\n        /* \"#utility.yul\":14014:14020   */\n      dup3\n        /* \"#utility.yul\":14011:14025   */\n      lt\n        /* \"#utility.yul\":13991:14009   */\n      dup2\n        /* \"#utility.yul\":13988:14026   */\n      sub\n        /* \"#utility.yul\":13985:14069   */\n      tag_656\n      jumpi\n        /* \"#utility.yul\":14041:14059   */\n      tag_657\n      tag_464\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":13985:14069   */\n    tag_656:\n        /* \"#utility.yul\":13806:14075   */\n      pop\n        /* \"#utility.yul\":13755:14075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14081:14523   */\n    tag_193:\n        /* \"#utility.yul\":14230:14234   */\n      0x00\n        /* \"#utility.yul\":14268:14270   */\n      0x60\n        /* \"#utility.yul\":14257:14266   */\n      dup3\n        /* \"#utility.yul\":14253:14271   */\n      add\n        /* \"#utility.yul\":14245:14271   */\n      swap1\n      pop\n        /* \"#utility.yul\":14281:14352   */\n      tag_659\n        /* \"#utility.yul\":14349:14350   */\n      0x00\n        /* \"#utility.yul\":14338:14347   */\n      dup4\n        /* \"#utility.yul\":14334:14351   */\n      add\n        /* \"#utility.yul\":14325:14331   */\n      dup7\n        /* \"#utility.yul\":14281:14352   */\n      tag_447\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":14362:14434   */\n      tag_660\n        /* \"#utility.yul\":14430:14432   */\n      0x20\n        /* \"#utility.yul\":14419:14428   */\n      dup4\n        /* \"#utility.yul\":14415:14433   */\n      add\n        /* \"#utility.yul\":14406:14412   */\n      dup6\n        /* \"#utility.yul\":14362:14434   */\n      tag_450\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":14444:14516   */\n      tag_661\n        /* \"#utility.yul\":14512:14514   */\n      0x40\n        /* \"#utility.yul\":14501:14510   */\n      dup4\n        /* \"#utility.yul\":14497:14515   */\n      add\n        /* \"#utility.yul\":14488:14494   */\n      dup5\n        /* \"#utility.yul\":14444:14516   */\n      tag_447\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":14081:14523   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14529:14709   */\n    tag_465:\n        /* \"#utility.yul\":14577:14654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14574:14575   */\n      0x00\n        /* \"#utility.yul\":14567:14655   */\n      mstore\n        /* \"#utility.yul\":14674:14678   */\n      0x11\n        /* \"#utility.yul\":14671:14672   */\n      0x04\n        /* \"#utility.yul\":14664:14679   */\n      mstore\n        /* \"#utility.yul\":14698:14702   */\n      0x24\n        /* \"#utility.yul\":14695:14696   */\n      0x00\n        /* \"#utility.yul\":14688:14703   */\n      revert\n        /* \"#utility.yul\":14715:15125   */\n    tag_196:\n        /* \"#utility.yul\":14755:14762   */\n      0x00\n        /* \"#utility.yul\":14778:14798   */\n      tag_664\n        /* \"#utility.yul\":14796:14797   */\n      dup3\n        /* \"#utility.yul\":14778:14798   */\n      tag_442\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":14773:14798   */\n      swap2\n      pop\n        /* \"#utility.yul\":14812:14832   */\n      tag_665\n        /* \"#utility.yul\":14830:14831   */\n      dup4\n        /* \"#utility.yul\":14812:14832   */\n      tag_442\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":14807:14832   */\n      swap3\n      pop\n        /* \"#utility.yul\":14867:14868   */\n      dup3\n        /* \"#utility.yul\":14864:14865   */\n      dup3\n        /* \"#utility.yul\":14860:14869   */\n      mul\n        /* \"#utility.yul\":14889:14919   */\n      tag_666\n        /* \"#utility.yul\":14907:14918   */\n      dup2\n        /* \"#utility.yul\":14889:14919   */\n      tag_442\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":14878:14919   */\n      swap2\n      pop\n        /* \"#utility.yul\":15068:15069   */\n      dup3\n        /* \"#utility.yul\":15059:15066   */\n      dup3\n        /* \"#utility.yul\":15055:15070   */\n      div\n        /* \"#utility.yul\":15052:15053   */\n      dup5\n        /* \"#utility.yul\":15049:15071   */\n      eq\n        /* \"#utility.yul\":15029:15030   */\n      dup4\n        /* \"#utility.yul\":15022:15031   */\n      iszero\n        /* \"#utility.yul\":15002:15085   */\n      or\n        /* \"#utility.yul\":14979:15118   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":15098:15116   */\n      tag_668\n      tag_465\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":14979:15118   */\n    tag_667:\n        /* \"#utility.yul\":14763:15125   */\n      pop\n        /* \"#utility.yul\":14715:15125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15131:15311   */\n    tag_395:\n        /* \"#utility.yul\":15179:15256   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15176:15177   */\n      0x00\n        /* \"#utility.yul\":15169:15257   */\n      mstore\n        /* \"#utility.yul\":15276:15280   */\n      0x12\n        /* \"#utility.yul\":15273:15274   */\n      0x04\n        /* \"#utility.yul\":15266:15281   */\n      mstore\n        /* \"#utility.yul\":15300:15304   */\n      0x24\n        /* \"#utility.yul\":15297:15298   */\n      0x00\n        /* \"#utility.yul\":15290:15305   */\n      revert\n        /* \"#utility.yul\":15317:15502   */\n    tag_198:\n        /* \"#utility.yul\":15357:15358   */\n      0x00\n        /* \"#utility.yul\":15374:15394   */\n      tag_671\n        /* \"#utility.yul\":15392:15393   */\n      dup3\n        /* \"#utility.yul\":15374:15394   */\n      tag_442\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":15369:15394   */\n      swap2\n      pop\n        /* \"#utility.yul\":15408:15428   */\n      tag_672\n        /* \"#utility.yul\":15426:15427   */\n      dup4\n        /* \"#utility.yul\":15408:15428   */\n      tag_442\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":15403:15428   */\n      swap3\n      pop\n        /* \"#utility.yul\":15447:15448   */\n      dup3\n        /* \"#utility.yul\":15437:15472   */\n      tag_673\n      jumpi\n        /* \"#utility.yul\":15452:15470   */\n      tag_674\n      tag_395\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":15437:15472   */\n    tag_673:\n        /* \"#utility.yul\":15494:15495   */\n      dup3\n        /* \"#utility.yul\":15491:15492   */\n      dup3\n        /* \"#utility.yul\":15487:15496   */\n      div\n        /* \"#utility.yul\":15482:15496   */\n      swap1\n      pop\n        /* \"#utility.yul\":15317:15502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15508:15649   */\n    tag_466:\n        /* \"#utility.yul\":15557:15561   */\n      0x00\n        /* \"#utility.yul\":15580:15583   */\n      dup2\n        /* \"#utility.yul\":15572:15583   */\n      swap1\n      pop\n        /* \"#utility.yul\":15603:15606   */\n      dup2\n        /* \"#utility.yul\":15600:15601   */\n      0x00\n        /* \"#utility.yul\":15593:15607   */\n      mstore\n        /* \"#utility.yul\":15637:15641   */\n      0x20\n        /* \"#utility.yul\":15634:15635   */\n      0x00\n        /* \"#utility.yul\":15624:15642   */\n      keccak256\n        /* \"#utility.yul\":15616:15642   */\n      swap1\n      pop\n        /* \"#utility.yul\":15508:15649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15655:15748   */\n    tag_467:\n        /* \"#utility.yul\":15692:15698   */\n      0x00\n        /* \"#utility.yul\":15739:15741   */\n      0x20\n        /* \"#utility.yul\":15734:15736   */\n      0x1f\n        /* \"#utility.yul\":15727:15732   */\n      dup4\n        /* \"#utility.yul\":15723:15737   */\n      add\n        /* \"#utility.yul\":15719:15742   */\n      div\n        /* \"#utility.yul\":15709:15742   */\n      swap1\n      pop\n        /* \"#utility.yul\":15655:15748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15754:15861   */\n    tag_468:\n        /* \"#utility.yul\":15798:15806   */\n      0x00\n        /* \"#utility.yul\":15848:15853   */\n      dup3\n        /* \"#utility.yul\":15842:15846   */\n      dup3\n        /* \"#utility.yul\":15838:15854   */\n      shl\n        /* \"#utility.yul\":15817:15854   */\n      swap1\n      pop\n        /* \"#utility.yul\":15754:15861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15867:16260   */\n    tag_469:\n        /* \"#utility.yul\":15936:15942   */\n      0x00\n        /* \"#utility.yul\":15986:15987   */\n      0x08\n        /* \"#utility.yul\":15974:15984   */\n      dup4\n        /* \"#utility.yul\":15970:15988   */\n      mul\n        /* \"#utility.yul\":16009:16106   */\n      tag_679\n        /* \"#utility.yul\":16039:16105   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16028:16037   */\n      dup3\n        /* \"#utility.yul\":16009:16106   */\n      tag_468\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":16127:16166   */\n      tag_680\n        /* \"#utility.yul\":16157:16165   */\n      dup7\n        /* \"#utility.yul\":16146:16155   */\n      dup4\n        /* \"#utility.yul\":16127:16166   */\n      tag_468\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":16115:16166   */\n      swap6\n      pop\n        /* \"#utility.yul\":16199:16203   */\n      dup1\n        /* \"#utility.yul\":16195:16204   */\n      not\n        /* \"#utility.yul\":16188:16193   */\n      dup5\n        /* \"#utility.yul\":16184:16205   */\n      and\n        /* \"#utility.yul\":16175:16205   */\n      swap4\n      pop\n        /* \"#utility.yul\":16248:16252   */\n      dup1\n        /* \"#utility.yul\":16238:16246   */\n      dup7\n        /* \"#utility.yul\":16234:16253   */\n      and\n        /* \"#utility.yul\":16227:16232   */\n      dup5\n        /* \"#utility.yul\":16224:16254   */\n      or\n        /* \"#utility.yul\":16214:16254   */\n      swap3\n      pop\n        /* \"#utility.yul\":15943:16260   */\n      pop\n      pop\n        /* \"#utility.yul\":15867:16260   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16266:16326   */\n    tag_470:\n        /* \"#utility.yul\":16294:16297   */\n      0x00\n        /* \"#utility.yul\":16315:16320   */\n      dup2\n        /* \"#utility.yul\":16308:16320   */\n      swap1\n      pop\n        /* \"#utility.yul\":16266:16326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16332:16474   */\n    tag_471:\n        /* \"#utility.yul\":16382:16391   */\n      0x00\n        /* \"#utility.yul\":16415:16468   */\n      tag_683\n        /* \"#utility.yul\":16433:16467   */\n      tag_684\n        /* \"#utility.yul\":16442:16466   */\n      tag_685\n        /* \"#utility.yul\":16460:16465   */\n      dup5\n        /* \"#utility.yul\":16442:16466   */\n      tag_442\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":16433:16467   */\n      tag_470\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":16415:16468   */\n      tag_442\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":16402:16468   */\n      swap1\n      pop\n        /* \"#utility.yul\":16332:16474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16480:16555   */\n    tag_472:\n        /* \"#utility.yul\":16523:16526   */\n      0x00\n        /* \"#utility.yul\":16544:16549   */\n      dup2\n        /* \"#utility.yul\":16537:16549   */\n      swap1\n      pop\n        /* \"#utility.yul\":16480:16555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16561:16830   */\n    tag_473:\n        /* \"#utility.yul\":16671:16710   */\n      tag_688\n        /* \"#utility.yul\":16702:16709   */\n      dup4\n        /* \"#utility.yul\":16671:16710   */\n      tag_471\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":16732:16823   */\n      tag_689\n        /* \"#utility.yul\":16781:16822   */\n      tag_690\n        /* \"#utility.yul\":16805:16821   */\n      dup3\n        /* \"#utility.yul\":16781:16822   */\n      tag_472\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":16773:16779   */\n      dup5\n        /* \"#utility.yul\":16766:16770   */\n      dup5\n        /* \"#utility.yul\":16760:16771   */\n      sload\n        /* \"#utility.yul\":16732:16823   */\n      tag_469\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":16726:16730   */\n      dup3\n        /* \"#utility.yul\":16719:16824   */\n      sstore\n        /* \"#utility.yul\":16637:16830   */\n      pop\n        /* \"#utility.yul\":16561:16830   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16836:16909   */\n    tag_474:\n        /* \"#utility.yul\":16881:16884   */\n      0x00\n        /* \"#utility.yul\":16836:16909   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16915:17104   */\n    tag_475:\n        /* \"#utility.yul\":16992:17024   */\n      tag_693\n      tag_474\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":17033:17098   */\n      tag_694\n        /* \"#utility.yul\":17091:17097   */\n      dup2\n        /* \"#utility.yul\":17083:17089   */\n      dup5\n        /* \"#utility.yul\":17077:17081   */\n      dup5\n        /* \"#utility.yul\":17033:17098   */\n      tag_473\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":16968:17104   */\n      pop\n        /* \"#utility.yul\":16915:17104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17110:17296   */\n    tag_476:\n        /* \"#utility.yul\":17170:17290   */\n    tag_696:\n        /* \"#utility.yul\":17187:17190   */\n      dup2\n        /* \"#utility.yul\":17180:17185   */\n      dup2\n        /* \"#utility.yul\":17177:17191   */\n      lt\n        /* \"#utility.yul\":17170:17290   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":17241:17280   */\n      tag_699\n        /* \"#utility.yul\":17278:17279   */\n      0x00\n        /* \"#utility.yul\":17271:17276   */\n      dup3\n        /* \"#utility.yul\":17241:17280   */\n      tag_475\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":17214:17215   */\n      0x01\n        /* \"#utility.yul\":17207:17212   */\n      dup2\n        /* \"#utility.yul\":17203:17216   */\n      add\n        /* \"#utility.yul\":17194:17216   */\n      swap1\n      pop\n        /* \"#utility.yul\":17170:17290   */\n      jump(tag_696)\n    tag_698:\n        /* \"#utility.yul\":17110:17296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17302:17845   */\n    tag_477:\n        /* \"#utility.yul\":17403:17405   */\n      0x1f\n        /* \"#utility.yul\":17398:17401   */\n      dup3\n        /* \"#utility.yul\":17395:17406   */\n      gt\n        /* \"#utility.yul\":17392:17838   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":17437:17475   */\n      tag_702\n        /* \"#utility.yul\":17469:17474   */\n      dup2\n        /* \"#utility.yul\":17437:17475   */\n      tag_466\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":17521:17550   */\n      tag_703\n        /* \"#utility.yul\":17539:17549   */\n      dup5\n        /* \"#utility.yul\":17521:17550   */\n      tag_467\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":17511:17519   */\n      dup2\n        /* \"#utility.yul\":17507:17551   */\n      add\n        /* \"#utility.yul\":17704:17706   */\n      0x20\n        /* \"#utility.yul\":17692:17702   */\n      dup6\n        /* \"#utility.yul\":17689:17707   */\n      lt\n        /* \"#utility.yul\":17686:17735   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":17725:17733   */\n      dup2\n        /* \"#utility.yul\":17710:17733   */\n      swap1\n      pop\n        /* \"#utility.yul\":17686:17735   */\n    tag_704:\n        /* \"#utility.yul\":17748:17828   */\n      tag_705\n        /* \"#utility.yul\":17804:17826   */\n      tag_706\n        /* \"#utility.yul\":17822:17825   */\n      dup6\n        /* \"#utility.yul\":17804:17826   */\n      tag_467\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":17794:17802   */\n      dup4\n        /* \"#utility.yul\":17790:17827   */\n      add\n        /* \"#utility.yul\":17777:17788   */\n      dup3\n        /* \"#utility.yul\":17748:17828   */\n      tag_476\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":17407:17838   */\n      pop\n      pop\n        /* \"#utility.yul\":17392:17838   */\n    tag_701:\n        /* \"#utility.yul\":17302:17845   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17851:17968   */\n    tag_478:\n        /* \"#utility.yul\":17905:17913   */\n      0x00\n        /* \"#utility.yul\":17955:17960   */\n      dup3\n        /* \"#utility.yul\":17949:17953   */\n      dup3\n        /* \"#utility.yul\":17945:17961   */\n      shr\n        /* \"#utility.yul\":17924:17961   */\n      swap1\n      pop\n        /* \"#utility.yul\":17851:17968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17974:18143   */\n    tag_479:\n        /* \"#utility.yul\":18018:18024   */\n      0x00\n        /* \"#utility.yul\":18051:18102   */\n      tag_709\n        /* \"#utility.yul\":18099:18100   */\n      0x00\n        /* \"#utility.yul\":18095:18101   */\n      not\n        /* \"#utility.yul\":18087:18092   */\n      dup5\n        /* \"#utility.yul\":18084:18085   */\n      0x08\n        /* \"#utility.yul\":18080:18093   */\n      mul\n        /* \"#utility.yul\":18051:18102   */\n      tag_478\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":18047:18103   */\n      not\n        /* \"#utility.yul\":18132:18136   */\n      dup1\n        /* \"#utility.yul\":18126:18130   */\n      dup4\n        /* \"#utility.yul\":18122:18137   */\n      and\n        /* \"#utility.yul\":18112:18137   */\n      swap2\n      pop\n        /* \"#utility.yul\":18025:18143   */\n      pop\n        /* \"#utility.yul\":17974:18143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18148:18443   */\n    tag_480:\n        /* \"#utility.yul\":18224:18228   */\n      0x00\n        /* \"#utility.yul\":18370:18399   */\n      tag_711\n        /* \"#utility.yul\":18395:18398   */\n      dup4\n        /* \"#utility.yul\":18389:18393   */\n      dup4\n        /* \"#utility.yul\":18370:18399   */\n      tag_479\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":18362:18399   */\n      swap2\n      pop\n        /* \"#utility.yul\":18432:18435   */\n      dup3\n        /* \"#utility.yul\":18429:18430   */\n      0x02\n        /* \"#utility.yul\":18425:18436   */\n      mul\n        /* \"#utility.yul\":18419:18423   */\n      dup3\n        /* \"#utility.yul\":18416:18437   */\n      or\n        /* \"#utility.yul\":18408:18437   */\n      swap1\n      pop\n        /* \"#utility.yul\":18148:18443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18448:19843   */\n    tag_206:\n        /* \"#utility.yul\":18565:18602   */\n      tag_713\n        /* \"#utility.yul\":18598:18601   */\n      dup3\n        /* \"#utility.yul\":18565:18602   */\n      tag_437\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":18667:18685   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18659:18665   */\n      dup2\n        /* \"#utility.yul\":18656:18686   */\n      gt\n        /* \"#utility.yul\":18653:18709   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":18689:18707   */\n      tag_715\n      tag_389\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":18653:18709   */\n    tag_714:\n        /* \"#utility.yul\":18733:18771   */\n      tag_716\n        /* \"#utility.yul\":18765:18769   */\n      dup3\n        /* \"#utility.yul\":18759:18770   */\n      sload\n        /* \"#utility.yul\":18733:18771   */\n      tag_170\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":18818:18885   */\n      tag_717\n        /* \"#utility.yul\":18878:18884   */\n      dup3\n        /* \"#utility.yul\":18870:18876   */\n      dup3\n        /* \"#utility.yul\":18864:18868   */\n      dup6\n        /* \"#utility.yul\":18818:18885   */\n      tag_477\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":18912:18913   */\n      0x00\n        /* \"#utility.yul\":18936:18940   */\n      0x20\n        /* \"#utility.yul\":18923:18940   */\n      swap1\n      pop\n        /* \"#utility.yul\":18968:18970   */\n      0x1f\n        /* \"#utility.yul\":18960:18966   */\n      dup4\n        /* \"#utility.yul\":18957:18971   */\n      gt\n        /* \"#utility.yul\":18985:18986   */\n      0x01\n        /* \"#utility.yul\":18980:19598   */\n      dup2\n      eq\n      tag_719\n      jumpi\n        /* \"#utility.yul\":19642:19643   */\n      0x00\n        /* \"#utility.yul\":19659:19665   */\n      dup5\n        /* \"#utility.yul\":19656:19733   */\n      iszero\n      tag_720\n      jumpi\n        /* \"#utility.yul\":19708:19717   */\n      dup3\n        /* \"#utility.yul\":19703:19706   */\n      dup8\n        /* \"#utility.yul\":19699:19718   */\n      add\n        /* \"#utility.yul\":19693:19719   */\n      mload\n        /* \"#utility.yul\":19684:19719   */\n      swap1\n      pop\n        /* \"#utility.yul\":19656:19733   */\n    tag_720:\n        /* \"#utility.yul\":19759:19826   */\n      tag_721\n        /* \"#utility.yul\":19819:19825   */\n      dup6\n        /* \"#utility.yul\":19812:19817   */\n      dup3\n        /* \"#utility.yul\":19759:19826   */\n      tag_480\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":19753:19757   */\n      dup7\n        /* \"#utility.yul\":19746:19827   */\n      sstore\n        /* \"#utility.yul\":19615:19837   */\n      pop\n        /* \"#utility.yul\":18950:19837   */\n      jump(tag_718)\n        /* \"#utility.yul\":18980:19598   */\n    tag_719:\n        /* \"#utility.yul\":19032:19036   */\n      0x1f\n        /* \"#utility.yul\":19028:19037   */\n      not\n        /* \"#utility.yul\":19020:19026   */\n      dup5\n        /* \"#utility.yul\":19016:19038   */\n      and\n        /* \"#utility.yul\":19066:19103   */\n      tag_722\n        /* \"#utility.yul\":19098:19102   */\n      dup7\n        /* \"#utility.yul\":19066:19103   */\n      tag_466\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":19125:19126   */\n      0x00\n        /* \"#utility.yul\":19139:19347   */\n    tag_723:\n        /* \"#utility.yul\":19153:19160   */\n      dup3\n        /* \"#utility.yul\":19150:19151   */\n      dup2\n        /* \"#utility.yul\":19147:19161   */\n      lt\n        /* \"#utility.yul\":19139:19347   */\n      iszero\n      tag_725\n      jumpi\n        /* \"#utility.yul\":19232:19241   */\n      dup5\n        /* \"#utility.yul\":19227:19230   */\n      dup10\n        /* \"#utility.yul\":19223:19242   */\n      add\n        /* \"#utility.yul\":19217:19243   */\n      mload\n        /* \"#utility.yul\":19209:19215   */\n      dup3\n        /* \"#utility.yul\":19202:19244   */\n      sstore\n        /* \"#utility.yul\":19283:19284   */\n      0x01\n        /* \"#utility.yul\":19275:19281   */\n      dup3\n        /* \"#utility.yul\":19271:19285   */\n      add\n        /* \"#utility.yul\":19261:19285   */\n      swap2\n      pop\n        /* \"#utility.yul\":19330:19332   */\n      0x20\n        /* \"#utility.yul\":19319:19328   */\n      dup6\n        /* \"#utility.yul\":19315:19333   */\n      add\n        /* \"#utility.yul\":19302:19333   */\n      swap5\n      pop\n        /* \"#utility.yul\":19176:19180   */\n      0x20\n        /* \"#utility.yul\":19173:19174   */\n      dup2\n        /* \"#utility.yul\":19169:19181   */\n      add\n        /* \"#utility.yul\":19164:19181   */\n      swap1\n      pop\n        /* \"#utility.yul\":19139:19347   */\n      jump(tag_723)\n    tag_725:\n        /* \"#utility.yul\":19375:19381   */\n      dup7\n        /* \"#utility.yul\":19366:19373   */\n      dup4\n        /* \"#utility.yul\":19363:19382   */\n      lt\n        /* \"#utility.yul\":19360:19539   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":19433:19442   */\n      dup5\n        /* \"#utility.yul\":19428:19431   */\n      dup10\n        /* \"#utility.yul\":19424:19443   */\n      add\n        /* \"#utility.yul\":19418:19444   */\n      mload\n        /* \"#utility.yul\":19476:19524   */\n      tag_727\n        /* \"#utility.yul\":19518:19522   */\n      0x1f\n        /* \"#utility.yul\":19510:19516   */\n      dup10\n        /* \"#utility.yul\":19506:19523   */\n      and\n        /* \"#utility.yul\":19495:19504   */\n      dup3\n        /* \"#utility.yul\":19476:19524   */\n      tag_479\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":19468:19474   */\n      dup4\n        /* \"#utility.yul\":19461:19525   */\n      sstore\n        /* \"#utility.yul\":19383:19539   */\n      pop\n        /* \"#utility.yul\":19360:19539   */\n    tag_726:\n        /* \"#utility.yul\":19585:19586   */\n      0x01\n        /* \"#utility.yul\":19581:19582   */\n      0x02\n        /* \"#utility.yul\":19573:19579   */\n      dup9\n        /* \"#utility.yul\":19569:19583   */\n      mul\n        /* \"#utility.yul\":19565:19587   */\n      add\n        /* \"#utility.yul\":19559:19563   */\n      dup9\n        /* \"#utility.yul\":19552:19588   */\n      sstore\n        /* \"#utility.yul\":18987:19598   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18950:19837   */\n    tag_718:\n      pop\n        /* \"#utility.yul\":18540:19843   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18448:19843   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19849:20019   */\n    tag_481:\n        /* \"#utility.yul\":19989:20011   */\n      0x546f6b656e206973206e6f742061742073616c65000000000000000000000000\n        /* \"#utility.yul\":19985:19986   */\n      0x00\n        /* \"#utility.yul\":19977:19983   */\n      dup3\n        /* \"#utility.yul\":19973:19987   */\n      add\n        /* \"#utility.yul\":19966:20012   */\n      mstore\n        /* \"#utility.yul\":19849:20019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20025:20391   */\n    tag_482:\n        /* \"#utility.yul\":20167:20170   */\n      0x00\n        /* \"#utility.yul\":20188:20255   */\n      tag_730\n        /* \"#utility.yul\":20252:20254   */\n      0x14\n        /* \"#utility.yul\":20247:20250   */\n      dup4\n        /* \"#utility.yul\":20188:20255   */\n      tag_438\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":20181:20255   */\n      swap2\n      pop\n        /* \"#utility.yul\":20264:20357   */\n      tag_731\n        /* \"#utility.yul\":20353:20356   */\n      dup3\n        /* \"#utility.yul\":20264:20357   */\n      tag_481\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":20382:20384   */\n      0x20\n        /* \"#utility.yul\":20377:20380   */\n      dup3\n        /* \"#utility.yul\":20373:20385   */\n      add\n        /* \"#utility.yul\":20366:20385   */\n      swap1\n      pop\n        /* \"#utility.yul\":20025:20391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20397:20816   */\n    tag_237:\n        /* \"#utility.yul\":20563:20567   */\n      0x00\n        /* \"#utility.yul\":20601:20603   */\n      0x20\n        /* \"#utility.yul\":20590:20599   */\n      dup3\n        /* \"#utility.yul\":20586:20604   */\n      add\n        /* \"#utility.yul\":20578:20604   */\n      swap1\n      pop\n        /* \"#utility.yul\":20650:20659   */\n      dup2\n        /* \"#utility.yul\":20644:20648   */\n      dup2\n        /* \"#utility.yul\":20640:20660   */\n      sub\n        /* \"#utility.yul\":20636:20637   */\n      0x00\n        /* \"#utility.yul\":20625:20634   */\n      dup4\n        /* \"#utility.yul\":20621:20638   */\n      add\n        /* \"#utility.yul\":20614:20661   */\n      mstore\n        /* \"#utility.yul\":20678:20809   */\n      tag_733\n        /* \"#utility.yul\":20804:20808   */\n      dup2\n        /* \"#utility.yul\":20678:20809   */\n      tag_482\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":20670:20809   */\n      swap1\n      pop\n        /* \"#utility.yul\":20397:20816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20822:20995   */\n    tag_483:\n        /* \"#utility.yul\":20962:20987   */\n      0x43616e6e6f742062757920796f7572206f776e204e4654000000000000000000\n        /* \"#utility.yul\":20958:20959   */\n      0x00\n        /* \"#utility.yul\":20950:20956   */\n      dup3\n        /* \"#utility.yul\":20946:20960   */\n      add\n        /* \"#utility.yul\":20939:20988   */\n      mstore\n        /* \"#utility.yul\":20822:20995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21001:21367   */\n    tag_484:\n        /* \"#utility.yul\":21143:21146   */\n      0x00\n        /* \"#utility.yul\":21164:21231   */\n      tag_736\n        /* \"#utility.yul\":21228:21230   */\n      0x17\n        /* \"#utility.yul\":21223:21226   */\n      dup4\n        /* \"#utility.yul\":21164:21231   */\n      tag_438\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":21157:21231   */\n      swap2\n      pop\n        /* \"#utility.yul\":21240:21333   */\n      tag_737\n        /* \"#utility.yul\":21329:21332   */\n      dup3\n        /* \"#utility.yul\":21240:21333   */\n      tag_483\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":21358:21360   */\n      0x20\n        /* \"#utility.yul\":21353:21356   */\n      dup3\n        /* \"#utility.yul\":21349:21361   */\n      add\n        /* \"#utility.yul\":21342:21361   */\n      swap1\n      pop\n        /* \"#utility.yul\":21001:21367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21373:21792   */\n    tag_240:\n        /* \"#utility.yul\":21539:21543   */\n      0x00\n        /* \"#utility.yul\":21577:21579   */\n      0x20\n        /* \"#utility.yul\":21566:21575   */\n      dup3\n        /* \"#utility.yul\":21562:21580   */\n      add\n        /* \"#utility.yul\":21554:21580   */\n      swap1\n      pop\n        /* \"#utility.yul\":21626:21635   */\n      dup2\n        /* \"#utility.yul\":21620:21624   */\n      dup2\n        /* \"#utility.yul\":21616:21636   */\n      sub\n        /* \"#utility.yul\":21612:21613   */\n      0x00\n        /* \"#utility.yul\":21601:21610   */\n      dup4\n        /* \"#utility.yul\":21597:21614   */\n      add\n        /* \"#utility.yul\":21590:21637   */\n      mstore\n        /* \"#utility.yul\":21654:21785   */\n      tag_739\n        /* \"#utility.yul\":21780:21784   */\n      dup2\n        /* \"#utility.yul\":21654:21785   */\n      tag_484\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":21646:21785   */\n      swap1\n      pop\n        /* \"#utility.yul\":21373:21792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21798:21965   */\n    tag_485:\n        /* \"#utility.yul\":21938:21957   */\n      0x537570706c792045786163742066756e64000000000000000000000000000000\n        /* \"#utility.yul\":21934:21935   */\n      0x00\n        /* \"#utility.yul\":21926:21932   */\n      dup3\n        /* \"#utility.yul\":21922:21936   */\n      add\n        /* \"#utility.yul\":21915:21958   */\n      mstore\n        /* \"#utility.yul\":21798:21965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21971:22337   */\n    tag_486:\n        /* \"#utility.yul\":22113:22116   */\n      0x00\n        /* \"#utility.yul\":22134:22201   */\n      tag_742\n        /* \"#utility.yul\":22198:22200   */\n      0x11\n        /* \"#utility.yul\":22193:22196   */\n      dup4\n        /* \"#utility.yul\":22134:22201   */\n      tag_438\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":22127:22201   */\n      swap2\n      pop\n        /* \"#utility.yul\":22210:22303   */\n      tag_743\n        /* \"#utility.yul\":22299:22302   */\n      dup3\n        /* \"#utility.yul\":22210:22303   */\n      tag_485\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":22328:22330   */\n      0x20\n        /* \"#utility.yul\":22323:22326   */\n      dup3\n        /* \"#utility.yul\":22319:22331   */\n      add\n        /* \"#utility.yul\":22312:22331   */\n      swap1\n      pop\n        /* \"#utility.yul\":21971:22337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22343:22762   */\n    tag_243:\n        /* \"#utility.yul\":22509:22513   */\n      0x00\n        /* \"#utility.yul\":22547:22549   */\n      0x20\n        /* \"#utility.yul\":22536:22545   */\n      dup3\n        /* \"#utility.yul\":22532:22550   */\n      add\n        /* \"#utility.yul\":22524:22550   */\n      swap1\n      pop\n        /* \"#utility.yul\":22596:22605   */\n      dup2\n        /* \"#utility.yul\":22590:22594   */\n      dup2\n        /* \"#utility.yul\":22586:22606   */\n      sub\n        /* \"#utility.yul\":22582:22583   */\n      0x00\n        /* \"#utility.yul\":22571:22580   */\n      dup4\n        /* \"#utility.yul\":22567:22584   */\n      add\n        /* \"#utility.yul\":22560:22607   */\n      mstore\n        /* \"#utility.yul\":22624:22755   */\n      tag_745\n        /* \"#utility.yul\":22750:22754   */\n      dup2\n        /* \"#utility.yul\":22624:22755   */\n      tag_486\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":22616:22755   */\n      swap1\n      pop\n        /* \"#utility.yul\":22343:22762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22768:22962   */\n    tag_251:\n        /* \"#utility.yul\":22808:22812   */\n      0x00\n        /* \"#utility.yul\":22828:22848   */\n      tag_747\n        /* \"#utility.yul\":22846:22847   */\n      dup3\n        /* \"#utility.yul\":22828:22848   */\n      tag_442\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":22823:22848   */\n      swap2\n      pop\n        /* \"#utility.yul\":22862:22882   */\n      tag_748\n        /* \"#utility.yul\":22880:22881   */\n      dup4\n        /* \"#utility.yul\":22862:22882   */\n      tag_442\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":22857:22882   */\n      swap3\n      pop\n        /* \"#utility.yul\":22906:22907   */\n      dup3\n        /* \"#utility.yul\":22903:22904   */\n      dup3\n        /* \"#utility.yul\":22899:22908   */\n      sub\n        /* \"#utility.yul\":22891:22908   */\n      swap1\n      pop\n        /* \"#utility.yul\":22930:22931   */\n      dup2\n        /* \"#utility.yul\":22924:22928   */\n      dup2\n        /* \"#utility.yul\":22921:22932   */\n      gt\n        /* \"#utility.yul\":22918:22955   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":22935:22953   */\n      tag_750\n      tag_465\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":22918:22955   */\n    tag_749:\n        /* \"#utility.yul\":22768:22962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22968:23144   */\n    tag_487:\n        /* \"#utility.yul\":23108:23136   */\n      0x596f75722061726520417574686f72697a6520746f2073656c6c000000000000\n        /* \"#utility.yul\":23104:23105   */\n      0x00\n        /* \"#utility.yul\":23096:23102   */\n      dup3\n        /* \"#utility.yul\":23092:23106   */\n      add\n        /* \"#utility.yul\":23085:23137   */\n      mstore\n        /* \"#utility.yul\":22968:23144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23150:23516   */\n    tag_488:\n        /* \"#utility.yul\":23292:23295   */\n      0x00\n        /* \"#utility.yul\":23313:23380   */\n      tag_753\n        /* \"#utility.yul\":23377:23379   */\n      0x1a\n        /* \"#utility.yul\":23372:23375   */\n      dup4\n        /* \"#utility.yul\":23313:23380   */\n      tag_438\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":23306:23380   */\n      swap2\n      pop\n        /* \"#utility.yul\":23389:23482   */\n      tag_754\n        /* \"#utility.yul\":23478:23481   */\n      dup3\n        /* \"#utility.yul\":23389:23482   */\n      tag_487\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":23507:23509   */\n      0x20\n        /* \"#utility.yul\":23502:23505   */\n      dup3\n        /* \"#utility.yul\":23498:23510   */\n      add\n        /* \"#utility.yul\":23491:23510   */\n      swap1\n      pop\n        /* \"#utility.yul\":23150:23516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23522:23941   */\n    tag_258:\n        /* \"#utility.yul\":23688:23692   */\n      0x00\n        /* \"#utility.yul\":23726:23728   */\n      0x20\n        /* \"#utility.yul\":23715:23724   */\n      dup3\n        /* \"#utility.yul\":23711:23729   */\n      add\n        /* \"#utility.yul\":23703:23729   */\n      swap1\n      pop\n        /* \"#utility.yul\":23775:23784   */\n      dup2\n        /* \"#utility.yul\":23769:23773   */\n      dup2\n        /* \"#utility.yul\":23765:23785   */\n      sub\n        /* \"#utility.yul\":23761:23762   */\n      0x00\n        /* \"#utility.yul\":23750:23759   */\n      dup4\n        /* \"#utility.yul\":23746:23763   */\n      add\n        /* \"#utility.yul\":23739:23786   */\n      mstore\n        /* \"#utility.yul\":23803:23934   */\n      tag_756\n        /* \"#utility.yul\":23929:23933   */\n      dup2\n        /* \"#utility.yul\":23803:23934   */\n      tag_488\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":23795:23934   */\n      swap1\n      pop\n        /* \"#utility.yul\":23522:23941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23947:24095   */\n    tag_489:\n        /* \"#utility.yul\":24049:24060   */\n      0x00\n        /* \"#utility.yul\":24086:24089   */\n      dup2\n        /* \"#utility.yul\":24071:24089   */\n      swap1\n      pop\n        /* \"#utility.yul\":23947:24095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24101:24491   */\n    tag_490:\n        /* \"#utility.yul\":24207:24210   */\n      0x00\n        /* \"#utility.yul\":24235:24274   */\n      tag_759\n        /* \"#utility.yul\":24268:24273   */\n      dup3\n        /* \"#utility.yul\":24235:24274   */\n      tag_437\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":24290:24379   */\n      tag_760\n        /* \"#utility.yul\":24372:24378   */\n      dup2\n        /* \"#utility.yul\":24367:24370   */\n      dup6\n        /* \"#utility.yul\":24290:24379   */\n      tag_489\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":24283:24379   */\n      swap4\n      pop\n        /* \"#utility.yul\":24388:24453   */\n      tag_761\n        /* \"#utility.yul\":24446:24452   */\n      dup2\n        /* \"#utility.yul\":24441:24444   */\n      dup6\n        /* \"#utility.yul\":24434:24438   */\n      0x20\n        /* \"#utility.yul\":24427:24432   */\n      dup7\n        /* \"#utility.yul\":24423:24439   */\n      add\n        /* \"#utility.yul\":24388:24453   */\n      tag_439\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":24478:24484   */\n      dup1\n        /* \"#utility.yul\":24473:24476   */\n      dup5\n        /* \"#utility.yul\":24469:24485   */\n      add\n        /* \"#utility.yul\":24462:24485   */\n      swap2\n      pop\n        /* \"#utility.yul\":24211:24491   */\n      pop\n        /* \"#utility.yul\":24101:24491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24497:24932   */\n    tag_275:\n        /* \"#utility.yul\":24677:24680   */\n      0x00\n        /* \"#utility.yul\":24699:24794   */\n      tag_763\n        /* \"#utility.yul\":24790:24793   */\n      dup3\n        /* \"#utility.yul\":24781:24787   */\n      dup6\n        /* \"#utility.yul\":24699:24794   */\n      tag_490\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":24692:24794   */\n      swap2\n      pop\n        /* \"#utility.yul\":24811:24906   */\n      tag_764\n        /* \"#utility.yul\":24902:24905   */\n      dup3\n        /* \"#utility.yul\":24893:24899   */\n      dup5\n        /* \"#utility.yul\":24811:24906   */\n      tag_490\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":24804:24906   */\n      swap2\n      pop\n        /* \"#utility.yul\":24923:24926   */\n      dup2\n        /* \"#utility.yul\":24916:24926   */\n      swap1\n      pop\n        /* \"#utility.yul\":24497:24932   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24938:25036   */\n    tag_491:\n        /* \"#utility.yul\":24989:24995   */\n      0x00\n        /* \"#utility.yul\":25023:25028   */\n      dup2\n        /* \"#utility.yul\":25017:25029   */\n      mload\n        /* \"#utility.yul\":25007:25029   */\n      swap1\n      pop\n        /* \"#utility.yul\":24938:25036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25042:25210   */\n    tag_492:\n        /* \"#utility.yul\":25125:25136   */\n      0x00\n        /* \"#utility.yul\":25159:25165   */\n      dup3\n        /* \"#utility.yul\":25154:25157   */\n      dup3\n        /* \"#utility.yul\":25147:25166   */\n      mstore\n        /* \"#utility.yul\":25199:25203   */\n      0x20\n        /* \"#utility.yul\":25194:25197   */\n      dup3\n        /* \"#utility.yul\":25190:25204   */\n      add\n        /* \"#utility.yul\":25175:25204   */\n      swap1\n      pop\n        /* \"#utility.yul\":25042:25210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25216:25589   */\n    tag_493:\n        /* \"#utility.yul\":25302:25305   */\n      0x00\n        /* \"#utility.yul\":25330:25368   */\n      tag_768\n        /* \"#utility.yul\":25362:25367   */\n      dup3\n        /* \"#utility.yul\":25330:25368   */\n      tag_491\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":25384:25454   */\n      tag_769\n        /* \"#utility.yul\":25447:25453   */\n      dup2\n        /* \"#utility.yul\":25442:25445   */\n      dup6\n        /* \"#utility.yul\":25384:25454   */\n      tag_492\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":25377:25454   */\n      swap4\n      pop\n        /* \"#utility.yul\":25463:25528   */\n      tag_770\n        /* \"#utility.yul\":25521:25527   */\n      dup2\n        /* \"#utility.yul\":25516:25519   */\n      dup6\n        /* \"#utility.yul\":25509:25513   */\n      0x20\n        /* \"#utility.yul\":25502:25507   */\n      dup7\n        /* \"#utility.yul\":25498:25514   */\n      add\n        /* \"#utility.yul\":25463:25528   */\n      tag_439\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":25553:25582   */\n      tag_771\n        /* \"#utility.yul\":25575:25581   */\n      dup2\n        /* \"#utility.yul\":25553:25582   */\n      tag_440\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":25548:25551   */\n      dup5\n        /* \"#utility.yul\":25544:25583   */\n      add\n        /* \"#utility.yul\":25537:25583   */\n      swap2\n      pop\n        /* \"#utility.yul\":25306:25589   */\n      pop\n        /* \"#utility.yul\":25216:25589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25595:26235   */\n    tag_335:\n        /* \"#utility.yul\":25790:25794   */\n      0x00\n        /* \"#utility.yul\":25828:25831   */\n      0x80\n        /* \"#utility.yul\":25817:25826   */\n      dup3\n        /* \"#utility.yul\":25813:25832   */\n      add\n        /* \"#utility.yul\":25805:25832   */\n      swap1\n      pop\n        /* \"#utility.yul\":25842:25913   */\n      tag_773\n        /* \"#utility.yul\":25910:25911   */\n      0x00\n        /* \"#utility.yul\":25899:25908   */\n      dup4\n        /* \"#utility.yul\":25895:25912   */\n      add\n        /* \"#utility.yul\":25886:25892   */\n      dup8\n        /* \"#utility.yul\":25842:25913   */\n      tag_447\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":25923:25995   */\n      tag_774\n        /* \"#utility.yul\":25991:25993   */\n      0x20\n        /* \"#utility.yul\":25980:25989   */\n      dup4\n        /* \"#utility.yul\":25976:25994   */\n      add\n        /* \"#utility.yul\":25967:25973   */\n      dup7\n        /* \"#utility.yul\":25923:25995   */\n      tag_447\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":26005:26077   */\n      tag_775\n        /* \"#utility.yul\":26073:26075   */\n      0x40\n        /* \"#utility.yul\":26062:26071   */\n      dup4\n        /* \"#utility.yul\":26058:26076   */\n      add\n        /* \"#utility.yul\":26049:26055   */\n      dup6\n        /* \"#utility.yul\":26005:26077   */\n      tag_450\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":26124:26133   */\n      dup2\n        /* \"#utility.yul\":26118:26122   */\n      dup2\n        /* \"#utility.yul\":26114:26134   */\n      sub\n        /* \"#utility.yul\":26109:26111   */\n      0x60\n        /* \"#utility.yul\":26098:26107   */\n      dup4\n        /* \"#utility.yul\":26094:26112   */\n      add\n        /* \"#utility.yul\":26087:26135   */\n      mstore\n        /* \"#utility.yul\":26152:26228   */\n      tag_776\n        /* \"#utility.yul\":26223:26227   */\n      dup2\n        /* \"#utility.yul\":26214:26220   */\n      dup5\n        /* \"#utility.yul\":26152:26228   */\n      tag_493\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":26144:26228   */\n      swap1\n      pop\n        /* \"#utility.yul\":25595:26235   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26241:26382   */\n    tag_494:\n        /* \"#utility.yul\":26297:26302   */\n      0x00\n        /* \"#utility.yul\":26328:26334   */\n      dup2\n        /* \"#utility.yul\":26322:26335   */\n      mload\n        /* \"#utility.yul\":26313:26335   */\n      swap1\n      pop\n        /* \"#utility.yul\":26344:26376   */\n      tag_778\n        /* \"#utility.yul\":26370:26375   */\n      dup2\n        /* \"#utility.yul\":26344:26376   */\n      tag_433\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":26241:26382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26388:26737   */\n    tag_338:\n        /* \"#utility.yul\":26457:26463   */\n      0x00\n        /* \"#utility.yul\":26506:26508   */\n      0x20\n        /* \"#utility.yul\":26494:26503   */\n      dup3\n        /* \"#utility.yul\":26485:26492   */\n      dup5\n        /* \"#utility.yul\":26481:26504   */\n      sub\n        /* \"#utility.yul\":26477:26509   */\n      slt\n        /* \"#utility.yul\":26474:26593   */\n      iszero\n      tag_780\n      jumpi\n        /* \"#utility.yul\":26512:26591   */\n      tag_781\n      tag_430\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":26474:26593   */\n    tag_780:\n        /* \"#utility.yul\":26632:26633   */\n      0x00\n        /* \"#utility.yul\":26657:26720   */\n      tag_782\n        /* \"#utility.yul\":26712:26719   */\n      dup5\n        /* \"#utility.yul\":26703:26709   */\n      dup3\n        /* \"#utility.yul\":26692:26701   */\n      dup6\n        /* \"#utility.yul\":26688:26710   */\n      add\n        /* \"#utility.yul\":26657:26720   */\n      tag_494\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":26647:26720   */\n      swap2\n      pop\n        /* \"#utility.yul\":26603:26730   */\n      pop\n        /* \"#utility.yul\":26388:26737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e7029830c710f6053b68b0206460caa2aae169741b9705f4dc0967f6cbd5b1a964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1917": {
									"entryPoint": null,
									"id": 1917,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3027": {
									"entryPoint": null,
									"id": 3027,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a60095534801562000015575f80fd5b506040518060400160405280600681526020017f4d79204e667400000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e465400000000000000000000000000000000000000000000000000000000815250815f908162000092919062000351565b508060019081620000a4919062000351565b50505033600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000435565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200016957607f821691505b6020821081036200017f576200017e62000124565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620001e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a6565b620001ef8683620001a6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000239620002336200022d8462000207565b62000210565b62000207565b9050919050565b5f819050919050565b620002548362000219565b6200026c620002638262000240565b848454620001b2565b825550505050565b5f90565b6200028262000274565b6200028f81848462000249565b505050565b5b81811015620002b657620002aa5f8262000278565b60018101905062000295565b5050565b601f8211156200030557620002cf8162000185565b620002da8462000197565b81016020851015620002ea578190505b62000302620002f98562000197565b83018262000294565b50505b505050565b5f82821c905092915050565b5f620003275f19846008026200030a565b1980831691505092915050565b5f62000341838362000316565b9150826002028217905092915050565b6200035c82620000ed565b67ffffffffffffffff811115620003785762000377620000f7565b5b62000384825462000151565b62000391828285620002ba565b5f60209050601f831160018114620003c7575f8415620003b2578287015190505b620003be858262000334565b8655506200042d565b601f198416620003d78662000185565b5f5b828110156200040057848901518255600182019150602085019450602081019050620003d9565b868310156200042057848901516200041c601f89168262000316565b8355505b6001600288020188555050505b505050505050565b61319b80620004435f395ff3fe608060405260043610610180575f3560e01c806370a08231116100d0578063a90d14e211610089578063d547cfb711610063578063d547cfb7146105a6578063e985e9c5146105d0578063f2a413b51461060c578063f8b2cb4f1461064857610180565b8063a90d14e21461051a578063b88d4fde14610542578063c87b56dd1461056a57610180565b806370a082311461040a5780637d7f1f3e146104465780638a71bb2d1461048257806395d89b41146104ac578063a22cb465146104d6578063a37365e0146104fe57610180565b80632a55205a1161013d57806355f804b31161011757806355f804b3146103425780635a51a8851461036a5780635afa3a72146103a65780636352211e146103ce57610180565b80632a55205a146102b35780633d0673d4146102f057806342842e0e1461031a57610180565b806301ffc9a71461018457806306fdde03146101c0578063081812fc146101ea578063095ea7b31461022657806323b872dd1461024e578063265aa62114610276575b5f80fd5b34801561018f575f80fd5b506101aa60048036038101906101a591906123d2565b610684565b6040516101b79190612417565b60405180910390f35b3480156101cb575f80fd5b506101d46106e4565b6040516101e191906124ba565b60405180910390f35b3480156101f5575f80fd5b50610210600480360381019061020b919061250d565b610773565b60405161021d9190612577565b60405180910390f35b348015610231575f80fd5b5061024c600480360381019061024791906125ba565b61078e565b005b348015610259575f80fd5b50610274600480360381019061026f91906125f8565b6107a4565b005b348015610281575f80fd5b5061029c6004803603810190610297919061250d565b6108a3565b6040516102aa929190612657565b60405180910390f35b3480156102be575f80fd5b506102d960048036038101906102d4919061267e565b6108e2565b6040516102e7929190612657565b60405180910390f35b3480156102fb575f80fd5b50610304610930565b60405161031191906126bc565b60405180910390f35b348015610325575f80fd5b50610340600480360381019061033b91906125f8565b610940565b005b34801561034d575f80fd5b5061036860048036038101906103639190612801565b61095f565b005b348015610375575f80fd5b50610390600480360381019061038b919061250d565b610972565b60405161039d91906126bc565b60405180910390f35b3480156103b1575f80fd5b506103cc60048036038101906103c79190612848565b6109fd565b005b3480156103d9575f80fd5b506103f460048036038101906103ef919061250d565b610b1d565b6040516104019190612577565b60405180910390f35b348015610415575f80fd5b50610430600480360381019061042b91906128a2565b610b2e565b60405161043d91906126bc565b60405180910390f35b348015610451575f80fd5b5061046c6004803603810190610467919061250d565b610be4565b6040516104799190612417565b60405180910390f35b34801561048d575f80fd5b50610496610c52565b6040516104a391906126bc565b60405180910390f35b3480156104b7575f80fd5b506104c0610c58565b6040516104cd91906124ba565b60405180910390f35b3480156104e1575f80fd5b506104fc60048036038101906104f791906128f7565b610ce8565b005b6105186004803603810190610513919061250d565b610cfe565b005b348015610525575f80fd5b50610540600480360381019061053b919061250d565b610f58565b005b34801561054d575f80fd5b50610568600480360381019061056391906129d3565b611035565b005b348015610575575f80fd5b50610590600480360381019061058b919061250d565b611052565b60405161059d91906124ba565b60405180910390f35b3480156105b1575f80fd5b506105ba61115d565b6040516105c791906124ba565b60405180910390f35b3480156105db575f80fd5b506105f660048036038101906105f19190612a53565b6111e9565b6040516106039190612417565b60405180910390f35b348015610617575f80fd5b50610632600480360381019061062d919061250d565b611277565b60405161063f9190612417565b60405180910390f35b348015610653575f80fd5b5061066e600480360381019061066991906128a2565b6112e5565b60405161067b91906126bc565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106dd57506106dc82611305565b5b9050919050565b60605f80546106f290612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461071e90612abe565b80156107695780601f1061074057610100808354040283529160200191610769565b820191905f5260205f20905b81548152906001019060200180831161074c57829003601f168201915b5050505050905090565b5f61077d826113e6565b506107878261146c565b9050919050565b6107a0828261079b6114a5565b6114ac565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610814575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161080b9190612577565b60405180910390fd5b5f61082783836108226114a5565b6114be565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461089d578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161089493929190612aee565b60405180910390fd5b50505050565b600d602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f805f6064600954856108f59190612b50565b6108ff9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168192509250509250929050565b5f61093b60076116c9565b905090565b61095a83838360405180602001604052805f815250611035565b505050565b806008908161096e9190612d8b565b5050565b5f80600d5f8481526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151915050919050565b5f610a0860076116c9565b9050610a1433826116d5565b610a1e81846116f2565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250600d5f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550610b18600761174c565b505050565b5f610b27826113e6565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b9f575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610b969190612577565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f80610bef83610b1d565b9050600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b60095481565b606060018054610c6790612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9390612abe565b8015610cde5780601f10610cb557610100808354040283529160200191610cde565b820191905f5260205f20905b815481529060010190602001808311610cc157829003601f168201915b5050505050905090565b610cfa610cf36114a5565b8383611760565b5050565b5f610d0882610b1d565b905060011515600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16151514610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da090612ea4565b60405180910390fd5b5f3390505f600d5f8581526020019081526020015f206001015490508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90612f0c565b60405180910390fd5b803414610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c90612f74565b60405180910390fd5b610e808383866118c9565b5f606460095483610e919190612b50565b610e9b9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f01573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc8284610f289190612f92565b90811502906040515f60405180830381858888f19350505050158015610f50573d5f803e3d5ffd5b505050505050565b610f6181610b1d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc59061300f565b60405180910390fd5b6001600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6110408484846107a4565b61104c84848484611a31565b50505050565b606061105d826113e6565b505f60065f8481526020019081526020015f20805461107b90612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546110a790612abe565b80156110f25780601f106110c9576101008083540402835291602001916110f2565b820191905f5260205f20905b8154815290600101906020018083116110d557829003601f168201915b505050505090505f611102611be3565b90505f815103611116578192505050611158565b5f8251111561114a578082604051602001611132929190613067565b60405160208183030381529060405292505050611158565b61115384611bf9565b925050505b919050565b6008805461116a90612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461119690612abe565b80156111e15780601f106111b8576101008083540402835291602001916111e1565b820191905f5260205f20905b8154815290600101906020018083116111c457829003601f168201915b505050505081565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f8061128283610b1d565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806113cf57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806113df57506113de82611c5f565b5b9050919050565b5f806113f183611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361146357826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161145a91906126bc565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6114b98383836001611d01565b505050565b5f806114c984611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461150a57611509818486611ec0565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611595576115495f855f80611d01565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461161457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b6116ee828260405180602001604052805f815250611f83565b5050565b8060065f8481526020019081526020015f2090816117109190612d8b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161174091906126bc565b60405180910390a15050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117d057816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016117c79190612577565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118bc9190612417565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611939575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119309190612577565b60405180910390fd5b5f61194583835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b757816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ae91906126bc565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a2b578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401611a2293929190612aee565b60405180910390fd5b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611bdd578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a746114a5565b8685856040518563ffffffff1660e01b8152600401611a9694939291906130dc565b6020604051808303815f875af1925050508015611ad157506040513d601f19601f82011682018060405250810190611ace919061313a565b60015b611b52573d805f8114611aff576040519150601f19603f3d011682016040523d82523d5f602084013e611b04565b606091505b505f815103611b4a57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b419190612577565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611bdb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611bd29190612577565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b6060611c04826113e6565b505f611c0e611be3565b90505f815111611c2c5760405180602001604052805f815250611c57565b80611c3684611f9e565b604051602001611c47929190613067565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611d3957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611e6b575f611d48846113e6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611db257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611dc55750611dc381846111e9565b155b15611e0757826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611dfe9190612577565b60405180910390fd5b8115611e6957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611ecb838383612068565b611f7e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f3f57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611f3691906126bc565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611f75929190612657565b60405180910390fd5b505050565b611f8d8383612128565b611f995f848484611a31565b505050565b60605f6001611fac8461221b565b0190505f8167ffffffffffffffff811115611fca57611fc96126dd565b5b6040519080825280601f01601f191660200182016040528015611ffc5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561205d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161205257612051612b91565b5b0494505f8503612009575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561211f57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806120e057506120df84846111e9565b5b8061211e57508273ffffffffffffffffffffffffffffffffffffffff166121068361146c565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612198575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161218f9190612577565b60405180910390fd5b5f6121a483835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612216575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161220d9190612577565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612277577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161226d5761226c612b91565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106122b4576d04ee2d6d415b85acef810000000083816122aa576122a9612b91565b5b0492506020810190505b662386f26fc1000083106122e357662386f26fc1000083816122d9576122d8612b91565b5b0492506010810190505b6305f5e100831061230c576305f5e100838161230257612301612b91565b5b0492506008810190505b612710831061233157612710838161232757612326612b91565b5b0492506004810190505b60648310612354576064838161234a57612349612b91565b5b0492506002810190505b600a8310612363576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123b18161237d565b81146123bb575f80fd5b50565b5f813590506123cc816123a8565b92915050565b5f602082840312156123e7576123e6612375565b5b5f6123f4848285016123be565b91505092915050565b5f8115159050919050565b612411816123fd565b82525050565b5f60208201905061242a5f830184612408565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561246757808201518184015260208101905061244c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61248c82612430565b612496818561243a565b93506124a681856020860161244a565b6124af81612472565b840191505092915050565b5f6020820190508181035f8301526124d28184612482565b905092915050565b5f819050919050565b6124ec816124da565b81146124f6575f80fd5b50565b5f81359050612507816124e3565b92915050565b5f6020828403121561252257612521612375565b5b5f61252f848285016124f9565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61256182612538565b9050919050565b61257181612557565b82525050565b5f60208201905061258a5f830184612568565b92915050565b61259981612557565b81146125a3575f80fd5b50565b5f813590506125b481612590565b92915050565b5f80604083850312156125d0576125cf612375565b5b5f6125dd858286016125a6565b92505060206125ee858286016124f9565b9150509250929050565b5f805f6060848603121561260f5761260e612375565b5b5f61261c868287016125a6565b935050602061262d868287016125a6565b925050604061263e868287016124f9565b9150509250925092565b612651816124da565b82525050565b5f60408201905061266a5f830185612568565b6126776020830184612648565b9392505050565b5f806040838503121561269457612693612375565b5b5f6126a1858286016124f9565b92505060206126b2858286016124f9565b9150509250929050565b5f6020820190506126cf5f830184612648565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61271382612472565b810181811067ffffffffffffffff82111715612732576127316126dd565b5b80604052505050565b5f61274461236c565b9050612750828261270a565b919050565b5f67ffffffffffffffff82111561276f5761276e6126dd565b5b61277882612472565b9050602081019050919050565b828183375f83830152505050565b5f6127a56127a084612755565b61273b565b9050828152602081018484840111156127c1576127c06126d9565b5b6127cc848285612785565b509392505050565b5f82601f8301126127e8576127e76126d5565b5b81356127f8848260208601612793565b91505092915050565b5f6020828403121561281657612815612375565b5b5f82013567ffffffffffffffff81111561283357612832612379565b5b61283f848285016127d4565b91505092915050565b5f806040838503121561285e5761285d612375565b5b5f83013567ffffffffffffffff81111561287b5761287a612379565b5b612887858286016127d4565b9250506020612898858286016124f9565b9150509250929050565b5f602082840312156128b7576128b6612375565b5b5f6128c4848285016125a6565b91505092915050565b6128d6816123fd565b81146128e0575f80fd5b50565b5f813590506128f1816128cd565b92915050565b5f806040838503121561290d5761290c612375565b5b5f61291a858286016125a6565b925050602061292b858286016128e3565b9150509250929050565b5f67ffffffffffffffff82111561294f5761294e6126dd565b5b61295882612472565b9050602081019050919050565b5f61297761297284612935565b61273b565b905082815260208101848484011115612993576129926126d9565b5b61299e848285612785565b509392505050565b5f82601f8301126129ba576129b96126d5565b5b81356129ca848260208601612965565b91505092915050565b5f805f80608085870312156129eb576129ea612375565b5b5f6129f8878288016125a6565b9450506020612a09878288016125a6565b9350506040612a1a878288016124f9565b925050606085013567ffffffffffffffff811115612a3b57612a3a612379565b5b612a47878288016129a6565b91505092959194509250565b5f8060408385031215612a6957612a68612375565b5b5f612a76858286016125a6565b9250506020612a87858286016125a6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612ad557607f821691505b602082108103612ae857612ae7612a91565b5b50919050565b5f606082019050612b015f830186612568565b612b0e6020830185612648565b612b1b6040830184612568565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612b5a826124da565b9150612b65836124da565b9250828202612b73816124da565b91508282048414831517612b8a57612b89612b23565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612bc8826124da565b9150612bd3836124da565b925082612be357612be2612b91565b5b828204905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612c4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c0f565b612c548683612c0f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612c8f612c8a612c85846124da565b612c6c565b6124da565b9050919050565b5f819050919050565b612ca883612c75565b612cbc612cb482612c96565b848454612c1b565b825550505050565b5f90565b612cd0612cc4565b612cdb818484612c9f565b505050565b5b81811015612cfe57612cf35f82612cc8565b600181019050612ce1565b5050565b601f821115612d4357612d1481612bee565b612d1d84612c00565b81016020851015612d2c578190505b612d40612d3885612c00565b830182612ce0565b50505b505050565b5f82821c905092915050565b5f612d635f1984600802612d48565b1980831691505092915050565b5f612d7b8383612d54565b9150826002028217905092915050565b612d9482612430565b67ffffffffffffffff811115612dad57612dac6126dd565b5b612db78254612abe565b612dc2828285612d02565b5f60209050601f831160018114612df3575f8415612de1578287015190505b612deb8582612d70565b865550612e52565b601f198416612e0186612bee565b5f5b82811015612e2857848901518255600182019150602085019450602081019050612e03565b86831015612e455784890151612e41601f891682612d54565b8355505b6001600288020188555050505b505050505050565b7f546f6b656e206973206e6f742061742073616c650000000000000000000000005f82015250565b5f612e8e60148361243a565b9150612e9982612e5a565b602082019050919050565b5f6020820190508181035f830152612ebb81612e82565b9050919050565b7f43616e6e6f742062757920796f7572206f776e204e46540000000000000000005f82015250565b5f612ef660178361243a565b9150612f0182612ec2565b602082019050919050565b5f6020820190508181035f830152612f2381612eea565b9050919050565b7f537570706c792045786163742066756e640000000000000000000000000000005f82015250565b5f612f5e60118361243a565b9150612f6982612f2a565b602082019050919050565b5f6020820190508181035f830152612f8b81612f52565b9050919050565b5f612f9c826124da565b9150612fa7836124da565b9250828203905081811115612fbf57612fbe612b23565b5b92915050565b7f596f75722061726520417574686f72697a6520746f2073656c6c0000000000005f82015250565b5f612ff9601a8361243a565b915061300482612fc5565b602082019050919050565b5f6020820190508181035f83015261302681612fed565b9050919050565b5f81905092915050565b5f61304182612430565b61304b818561302d565b935061305b81856020860161244a565b80840191505092915050565b5f6130728285613037565b915061307e8284613037565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6130ae8261308a565b6130b88185613094565b93506130c881856020860161244a565b6130d181612472565b840191505092915050565b5f6080820190506130ef5f830187612568565b6130fc6020830186612568565b6131096040830185612648565b818103606083015261311b81846130a4565b905095945050505050565b5f81519050613134816123a8565b92915050565b5f6020828403121561314f5761314e612375565b5b5f61315c84828501613126565b9150509291505056fea2646970667358221220e7029830c710f6053b68b0206460caa2aae169741b9705f4dc0967f6cbd5b1a964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79204E66740000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x92 SWAP2 SWAP1 PUSH3 0x351 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x351 JUMP JUMPDEST POP POP POP CALLER PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x435 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x169 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x17F JUMPI PUSH3 0x17E PUSH3 0x124 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x1E3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1A6 JUMP JUMPDEST PUSH3 0x1EF DUP7 DUP4 PUSH3 0x1A6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x239 PUSH3 0x233 PUSH3 0x22D DUP5 PUSH3 0x207 JUMP JUMPDEST PUSH3 0x210 JUMP JUMPDEST PUSH3 0x207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x254 DUP4 PUSH3 0x219 JUMP JUMPDEST PUSH3 0x26C PUSH3 0x263 DUP3 PUSH3 0x240 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1B2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x282 PUSH3 0x274 JUMP JUMPDEST PUSH3 0x28F DUP2 DUP5 DUP5 PUSH3 0x249 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B6 JUMPI PUSH3 0x2AA PUSH0 DUP3 PUSH3 0x278 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x295 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x305 JUMPI PUSH3 0x2CF DUP2 PUSH3 0x185 JUMP JUMPDEST PUSH3 0x2DA DUP5 PUSH3 0x197 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2EA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x302 PUSH3 0x2F9 DUP6 PUSH3 0x197 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x294 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x327 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x30A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x341 DUP4 DUP4 PUSH3 0x316 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x35C DUP3 PUSH3 0xED JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x378 JUMPI PUSH3 0x377 PUSH3 0xF7 JUMP JUMPDEST JUMPDEST PUSH3 0x384 DUP3 SLOAD PUSH3 0x151 JUMP JUMPDEST PUSH3 0x391 DUP3 DUP3 DUP6 PUSH3 0x2BA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3C7 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3B2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3BE DUP6 DUP3 PUSH3 0x334 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x42D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3D7 DUP7 PUSH3 0x185 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x400 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3D9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x420 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x41C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x316 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x319B DUP1 PUSH3 0x443 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA90D14E2 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547CFB7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xF2A413B5 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x648 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0xA90D14E2 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x56A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x7D7F1F3E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x8A71BB2D EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xA37365E0 EQ PUSH2 0x4FE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x5A51A885 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x5AFA3A72 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x3D0673D4 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x31A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x265AA621 EQ PUSH2 0x276 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2801 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xF58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH2 0x1035 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2A53 JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x66E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6DD JUMPI POP PUSH2 0x6DC DUP3 PUSH2 0x1305 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x6F2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71E SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x740 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x77D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH2 0x787 DUP3 PUSH2 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A0 DUP3 DUP3 PUSH2 0x79B PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x814 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x827 DUP4 DUP4 PUSH2 0x822 PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89D JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93B PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x95A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1035 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 SWAP1 DUP2 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA08 PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP PUSH2 0xA14 CALLER DUP3 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0xA1E DUP2 DUP5 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB18 PUSH1 0x7 PUSH2 0x174C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB27 DUP3 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEF DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC67 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC93 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCFA PUSH2 0xCF3 PUSH2 0x14A5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1760 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD08 DUP3 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP4 DUP4 DUP7 PUSH2 0x18C9 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP4 PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF01 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 DUP5 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xB1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP1 PUSH2 0x300F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1040 DUP5 DUP5 DUP5 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x104C DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x105D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x107B SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A7 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1102 PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1116 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x114A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1132 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1153 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x116A SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1196 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1282 DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x13CF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x13DF JUMPI POP PUSH2 0x13DE DUP3 PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F1 DUP4 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1463 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14B9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14C9 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150A JUMPI PUSH2 0x1509 DUP2 DUP5 DUP7 PUSH2 0x1EC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI PUSH2 0x1549 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1614 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1F83 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1710 SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C7 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1939 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1930 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1945 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A2B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1BDD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A74 PUSH2 0x14A5 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AD1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACE SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B52 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1B4A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1BDB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C04 DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH2 0x1C0E PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH2 0x1C36 DUP5 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C47 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1D39 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E6B JUMPI PUSH0 PUSH2 0x1D48 DUP5 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DB2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DC5 JUMPI POP PUSH2 0x1DC3 DUP2 DUP5 PUSH2 0x11E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1E69 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECB DUP4 DUP4 DUP4 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x1F7E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F75 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F8D DUP4 DUP4 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x1F99 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1FAC DUP5 PUSH2 0x221B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x205D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x2009 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x211F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x20E0 JUMPI POP PUSH2 0x20DF DUP5 DUP5 PUSH2 0x11E9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x211E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2106 DUP4 PUSH2 0x146C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2198 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218F SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21A4 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2216 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2277 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x22B4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x22E3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x230C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2302 JUMPI PUSH2 0x2301 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2331 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2327 JUMPI PUSH2 0x2326 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2354 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x234A JUMPI PUSH2 0x2349 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2363 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B1 DUP2 PUSH2 0x237D JUMP JUMPDEST DUP2 EQ PUSH2 0x23BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CC DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E7 JUMPI PUSH2 0x23E6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F4 DUP5 DUP3 DUP6 ADD PUSH2 0x23BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2411 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242A PUSH0 DUP4 ADD DUP5 PUSH2 0x2408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2467 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x244C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x248C DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x2496 DUP2 DUP6 PUSH2 0x243A JUMP JUMPDEST SWAP4 POP PUSH2 0x24A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24D2 DUP2 DUP5 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EC DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP2 EQ PUSH2 0x24F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2507 DUP2 PUSH2 0x24E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252F DUP5 DUP3 DUP6 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2561 DUP3 PUSH2 0x2538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258A PUSH0 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2599 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B4 DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25CF PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25DD DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25EE DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261C DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x262D DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x263E DUP7 DUP3 DUP8 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2651 DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x266A PUSH0 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2677 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A1 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26B2 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26CF PUSH0 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2713 DUP3 PUSH2 0x2472 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2732 JUMPI PUSH2 0x2731 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2744 PUSH2 0x236C JUMP JUMPDEST SWAP1 POP PUSH2 0x2750 DUP3 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x276F JUMPI PUSH2 0x276E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2778 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27A5 PUSH2 0x27A0 DUP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27C1 JUMPI PUSH2 0x27C0 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x27CC DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27E8 JUMPI PUSH2 0x27E7 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2816 JUMPI PUSH2 0x2815 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2833 JUMPI PUSH2 0x2832 PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x283F DUP5 DUP3 DUP6 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285D PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287B JUMPI PUSH2 0x287A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2887 DUP6 DUP3 DUP7 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2898 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B7 JUMPI PUSH2 0x28B6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C4 DUP5 DUP3 DUP6 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP2 EQ PUSH2 0x28E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F1 DUP2 PUSH2 0x28CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291A DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292B DUP6 DUP3 DUP7 ADD PUSH2 0x28E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2958 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2977 PUSH2 0x2972 DUP5 PUSH2 0x2935 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x299E DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x29EB JUMPI PUSH2 0x29EA PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F8 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A09 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A1A DUP8 DUP3 DUP9 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2A47 DUP8 DUP3 DUP9 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A69 JUMPI PUSH2 0x2A68 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A76 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A87 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2AD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AE8 JUMPI PUSH2 0x2AE7 PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B01 PUSH0 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2B0E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST PUSH2 0x2B1B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2B5A DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B65 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B73 DUP2 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B8A JUMPI PUSH2 0x2B89 PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BC8 DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD3 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BE3 JUMPI PUSH2 0x2BE2 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2C4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2C0F JUMP JUMPDEST PUSH2 0x2C54 DUP7 DUP4 PUSH2 0x2C0F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C8F PUSH2 0x2C8A PUSH2 0x2C85 DUP5 PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA8 DUP4 PUSH2 0x2C75 JUMP JUMPDEST PUSH2 0x2CBC PUSH2 0x2CB4 DUP3 PUSH2 0x2C96 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C1B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CD0 PUSH2 0x2CC4 JUMP JUMPDEST PUSH2 0x2CDB DUP2 DUP5 DUP5 PUSH2 0x2C9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CFE JUMPI PUSH2 0x2CF3 PUSH0 DUP3 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2CE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D14 DUP2 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x2D1D DUP5 PUSH2 0x2C00 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2D2C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2D40 PUSH2 0x2D38 DUP6 PUSH2 0x2C00 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2CE0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D63 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2D48 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B DUP4 DUP4 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2DB7 DUP3 SLOAD PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x2DC2 DUP3 DUP3 DUP6 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DF3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2DE1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2DEB DUP6 DUP3 PUSH2 0x2D70 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2E01 DUP7 PUSH2 0x2BEE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E28 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E03 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2E45 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2E41 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2D54 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F742061742073616C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8E PUSH1 0x14 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2E99 DUP3 PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EBB DUP2 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E204E4654000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EF6 PUSH1 0x17 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F01 DUP3 PUSH2 0x2EC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F23 DUP2 PUSH2 0x2EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537570706C792045786163742066756E64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F5E PUSH1 0x11 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F69 DUP3 PUSH2 0x2F2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8B DUP2 PUSH2 0x2F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F9C DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA7 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2FBF JUMPI PUSH2 0x2FBE PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75722061726520417574686F72697A6520746F2073656C6C000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF9 PUSH1 0x1A DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x3004 DUP3 PUSH2 0x2FC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3026 DUP2 PUSH2 0x2FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3041 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x304B DUP2 DUP6 PUSH2 0x302D JUMP JUMPDEST SWAP4 POP PUSH2 0x305B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3072 DUP3 DUP6 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP PUSH2 0x307E DUP3 DUP5 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30AE DUP3 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x30B8 DUP2 DUP6 PUSH2 0x3094 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x30D1 DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x30EF PUSH0 DUP4 ADD DUP8 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x30FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x3109 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x311B DUP2 DUP5 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3134 DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314F JUMPI PUSH2 0x314E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x315C DUP5 DUP3 DUP6 ADD PUSH2 0x3126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 MUL SWAP9 ADDRESS 0xC7 LT 0xF6 SDIV EXTCODESIZE PUSH9 0xB0206460CAA2AAE169 PUSH21 0x1B9705F4DC0967F6CBD5B1A964736F6C6343000814 STOP CALLER ",
							"sourceMap": "58306:2999:0:-:0;;;58524:2;58489:37;;58827:87;;;;;;;;;;39875:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39949:5;39941;:13;;;;;;:::i;:::-;;39974:7;39964;:17;;;;;;:::i;:::-;;39875:113;;58897:10:::1;58882:13;;:25;;;;;;;;;;;;;;;;;;58306:2999:::0;;7:99:1;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;58306:2999:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BuyNFT_3273": {
									"entryPoint": 3326,
									"id": 3273,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@KnowPrice_3169": {
									"entryPoint": 2418,
									"id": 3169,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@SellNft_3111": {
									"entryPoint": 3928,
									"id": 3111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@SoldNft_3131": {
									"entryPoint": 3044,
									"id": 3131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_approve_2659": {
									"entryPoint": 5292,
									"id": 2659,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2725": {
									"entryPoint": 7425,
									"id": 2725,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2052": {
									"entryPoint": 7139,
									"id": 2052,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2307": {
									"entryPoint": 7872,
									"id": 2307,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2855": {
									"entryPoint": 6705,
									"id": 2855,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_2234": {
									"entryPoint": 5228,
									"id": 2234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2270": {
									"entryPoint": 8296,
									"id": 2270,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2463": {
									"entryPoint": 8488,
									"id": 2463,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1627": {
									"entryPoint": 5285,
									"id": 1627,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2221": {
									"entryPoint": 7368,
									"id": 2221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_2791": {
									"entryPoint": 5094,
									"id": 2791,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_2478": {
									"entryPoint": 5845,
									"id": 2478,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2504": {
									"entryPoint": 8067,
									"id": 2504,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2762": {
									"entryPoint": 5984,
									"id": 2762,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_2972": {
									"entryPoint": 5874,
									"id": 2972,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_2597": {
									"entryPoint": 6345,
									"id": 2597,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_2413": {
									"entryPoint": 5310,
									"id": 2413,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_2068": {
									"entryPoint": 1934,
									"id": 2068,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1976": {
									"entryPoint": 2862,
									"id": 1976,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseTokenURI_2987": {
									"entryPoint": 4445,
									"id": 2987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_17": {
									"entryPoint": 5833,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2085": {
									"entryPoint": 1907,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalance_3180": {
									"entryPoint": 4837,
									"id": 3180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalToken_3190": {
									"entryPoint": 2352,
									"id": 3190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_31": {
									"entryPoint": 5964,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_2118": {
									"entryPoint": 4585,
									"id": 2118,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isSellNft_3151": {
									"entryPoint": 4727,
									"id": 3151,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1186": {
									"entryPoint": 8731,
									"id": 1186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_3086": {
									"entryPoint": 2557,
									"id": 3086,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_1998": {
									"entryPoint": 1764,
									"id": 1998,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nfts_3014": {
									"entryPoint": 2211,
									"id": 3014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_1989": {
									"entryPoint": 2845,
									"id": 1989,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@royaltyInfo_3299": {
									"entryPoint": 2274,
									"id": 3299,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@royaltyPercentage_2990": {
									"entryPoint": 3154,
									"id": 2990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2182": {
									"entryPoint": 2368,
									"id": 2182,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2208": {
									"entryPoint": 4149,
									"id": 2208,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2101": {
									"entryPoint": 3304,
									"id": 2101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_3037": {
									"entryPoint": 2399,
									"id": 3037,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1703": {
									"entryPoint": 7263,
									"id": 1703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1948": {
									"entryPoint": 4869,
									"id": 1948,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2896": {
									"entryPoint": 1668,
									"id": 2896,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2007": {
									"entryPoint": 3160,
									"id": 2007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1429": {
									"entryPoint": 8094,
									"id": 1429,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2043": {
									"entryPoint": 7161,
									"id": 2043,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2953": {
									"entryPoint": 4178,
									"id": 2953,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2164": {
									"entryPoint": 1956,
									"id": 2164,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10597,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 10131,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 12582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 10196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 10707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 12602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 10241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 10312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12391,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 12508,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9815,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10990,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 11246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 9559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 11381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9290,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 11264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11043,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 11414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9081,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9077,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 11279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5": {
									"entryPoint": 12229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8": {
									"entryPoint": 11866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f": {
									"entryPoint": 11970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e": {
									"entryPoint": 12074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 11291,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11423,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26740:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:1"
															},
															"nodeType": "YulIf",
															"src": "5000:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:1",
														"type": ""
													}
												],
												"src": "4890:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5580:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5597:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5620:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5602:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5602:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5568:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5575:3:1",
														"type": ""
													}
												],
												"src": "5515:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5765:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5775:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5787:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5775:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5855:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5868:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5879:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5864:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5811:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5811:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5811:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5936:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5949:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5960:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5945:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5945:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5892:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5892:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5729:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5741:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5749:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5760:4:1",
														"type": ""
													}
												],
												"src": "5639:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6060:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6106:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6108:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6108:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6108:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6081:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6102:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6073:32:1"
															},
															"nodeType": "YulIf",
															"src": "6070:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6199:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6214:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6218:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6243:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6278:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6289:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6274:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6274:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6298:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6253:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6243:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6326:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6341:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6355:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6345:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6371:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6406:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6417:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6402:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6402:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6426:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6381:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6381:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6371:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6022:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6033:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6045:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6053:6:1",
														"type": ""
													}
												],
												"src": "5977:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6555:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6565:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6577:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6565:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6645:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6669:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6654:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6601:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6527:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6539:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6550:4:1",
														"type": ""
													}
												],
												"src": "6457:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6774:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6791:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6794:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6784:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6784:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6685:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6897:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6914:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6917:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6907:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6907:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6808:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6959:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6976:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6979:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6969:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6969:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7073:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7076:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7066:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7066:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7100:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7090:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6931:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7160:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7170:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7192:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7222:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7200:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7200:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7188:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7174:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7339:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7341:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7341:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7341:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7282:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7294:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7279:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7279:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7318:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7330:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7315:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7315:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7276:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7276:62:1"
															},
															"nodeType": "YulIf",
															"src": "7273:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7377:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7381:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7370:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7370:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7146:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7154:4:1",
														"type": ""
													}
												],
												"src": "7117:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7445:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7455:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7465:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7465:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7455:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7514:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7522:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7494:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7494:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7494:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7429:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7438:6:1",
														"type": ""
													}
												],
												"src": "7404:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7606:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7711:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7713:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7713:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7713:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7683:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7691:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7680:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:30:1"
															},
															"nodeType": "YulIf",
															"src": "7677:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7743:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7773:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7751:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7751:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7743:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7817:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7829:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7835:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7825:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7817:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7590:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7601:4:1",
														"type": ""
													}
												],
												"src": "7539:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7917:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7940:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7945:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7950:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7927:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7927:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7927:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7977:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7982:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7973:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7991:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7899:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7904:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7909:6:1",
														"type": ""
													}
												],
												"src": "7853:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8089:341:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8099:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8166:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8124:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8124:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8108:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8108:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8099:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8190:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8197:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8183:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8183:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8213:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8228:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8235:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8217:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8278:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8280:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8280:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8280:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8259:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8264:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8255:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8273:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8252:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8252:25:1"
															},
															"nodeType": "YulIf",
															"src": "8249:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8407:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8412:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8417:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8370:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8370:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8370:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8062:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8067:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8075:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8083:5:1",
														"type": ""
													}
												],
												"src": "8005:425:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8512:278:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8563:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8563:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8540:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8548:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8536:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8536:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8555:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8532:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:35:1"
															},
															"nodeType": "YulIf",
															"src": "8522:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8653:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8680:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8667:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8667:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8657:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8696:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8757:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8765:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8753:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8772:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8780:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8705:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8696:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8490:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8498:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8506:5:1",
														"type": ""
													}
												],
												"src": "8450:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8872:433:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8918:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8920:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8920:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8920:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8893:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8902:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8889:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8889:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8914:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8885:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8885:32:1"
															},
															"nodeType": "YulIf",
															"src": "8882:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9011:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9026:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9057:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9068:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9053:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9053:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9040:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9040:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9030:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9118:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9120:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9120:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9120:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9090:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9098:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9087:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9087:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9084:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9215:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9260:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9271:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9256:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9256:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9280:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9225:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9225:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9215:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8842:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8853:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8865:6:1",
														"type": ""
													}
												],
												"src": "8796:509:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9404:561:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9450:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9452:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9452:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9452:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9446:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:32:1"
															},
															"nodeType": "YulIf",
															"src": "9414:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9543:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9558:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9589:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9600:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9585:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9585:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9572:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9572:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9562:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9650:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9652:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9652:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9652:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9622:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9630:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9619:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9619:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9616:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9747:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9792:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9803:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9788:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9788:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9812:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9757:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9757:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9747:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9840:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9855:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9869:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9859:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9885:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9920:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9931:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9916:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9916:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9940:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9895:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9895:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9885:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9389:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9397:6:1",
														"type": ""
													}
												],
												"src": "9311:654:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10037:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10083:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10085:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10085:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10085:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10058:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10067:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10054:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10079:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10050:32:1"
															},
															"nodeType": "YulIf",
															"src": "10047:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10176:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10191:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10205:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10195:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10220:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10255:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10266:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10251:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10251:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10275:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10230:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10230:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10220:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10007:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10018:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10030:6:1",
														"type": ""
													}
												],
												"src": "9971:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10346:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10400:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10409:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10412:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10402:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10402:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10402:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10369:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10391:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10376:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10376:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10366:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10366:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:40:1"
															},
															"nodeType": "YulIf",
															"src": "10356:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10339:5:1",
														"type": ""
													}
												],
												"src": "10306:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10477:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10487:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10509:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10496:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10496:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10487:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10549:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10525:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10525:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10525:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10455:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10463:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10471:5:1",
														"type": ""
													}
												],
												"src": "10428:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10647:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10693:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10695:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10695:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10695:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10668:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10677:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10664:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10689:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:32:1"
															},
															"nodeType": "YulIf",
															"src": "10657:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10786:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10801:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10815:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10805:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10830:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10865:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10876:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10861:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10861:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10885:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10840:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10840:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10830:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10913:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10928:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10942:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10932:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10958:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10990:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11001:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10986:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10986:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11010:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10968:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10968:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10958:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10609:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10620:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10632:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10640:6:1",
														"type": ""
													}
												],
												"src": "10567:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11107:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11212:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11214:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11214:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11214:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11184:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11181:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:30:1"
															},
															"nodeType": "YulIf",
															"src": "11178:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11244:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11274:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "11252:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11252:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11244:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11318:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "11330:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11336:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11318:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11091:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11102:4:1",
														"type": ""
													}
												],
												"src": "11041:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11437:340:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11447:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11513:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11472:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11472:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11456:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11447:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "11537:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11530:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11530:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11560:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "11575:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11582:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11571:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11571:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "11564:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11625:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "11627:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11627:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11627:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "11606:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11611:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11602:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11620:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11599:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11599:25:1"
															},
															"nodeType": "YulIf",
															"src": "11596:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11754:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11759:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11764:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11717:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11717:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11717:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11410:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11415:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11423:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11431:5:1",
														"type": ""
													}
												],
												"src": "11354:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11857:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11906:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11908:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11908:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11908:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11885:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11893:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11881:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11881:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11900:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11877:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11877:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11870:35:1"
															},
															"nodeType": "YulIf",
															"src": "11867:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11998:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12025:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12012:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12002:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12041:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12101:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12109:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12097:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12116:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12124:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12050:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12050:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12041:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11835:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11843:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11851:5:1",
														"type": ""
													}
												],
												"src": "11796:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12266:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12313:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12315:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12315:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12315:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12287:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12296:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12283:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12308:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12279:33:1"
															},
															"nodeType": "YulIf",
															"src": "12276:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "12406:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12421:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12435:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12425:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12450:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12485:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12496:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12481:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12505:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12460:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12460:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12450:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12533:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12548:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12562:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12552:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12578:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12613:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12624:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12609:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12609:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12633:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12588:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12588:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12578:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12661:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12676:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12690:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12680:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12706:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12741:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12752:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12737:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12737:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12761:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12716:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12716:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12706:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12789:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12804:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12835:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12846:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12831:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12831:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12818:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12818:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12808:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12897:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12899:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12899:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12899:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12869:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12877:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12866:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12866:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "12863:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12994:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13038:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13049:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13034:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13034:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13058:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13004:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13004:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "12994:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12212:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12223:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12235:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12243:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12251:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12259:6:1",
														"type": ""
													}
												],
												"src": "12140:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13172:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13218:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13220:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13220:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13220:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13193:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13202:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13189:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13214:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13185:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13185:32:1"
															},
															"nodeType": "YulIf",
															"src": "13182:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "13311:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13326:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13340:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13330:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13355:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13390:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13401:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13386:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13410:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13365:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13365:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13355:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13438:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13453:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13467:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13457:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13483:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13518:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13529:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13514:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13538:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13493:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13493:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13483:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13134:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13145:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13157:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13165:6:1",
														"type": ""
													}
												],
												"src": "13089:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13597:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13614:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13617:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13607:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13607:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13711:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13714:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13704:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13704:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13735:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13738:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13728:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13728:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13569:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13806:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13816:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13830:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13836:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13826:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13816:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13847:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13877:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13883:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13873:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13873:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "13851:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13924:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13938:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "13952:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13960:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13948:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13948:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13938:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13904:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13897:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13897:26:1"
															},
															"nodeType": "YulIf",
															"src": "13894:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14027:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "14041:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14041:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14041:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13991:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14014:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14022:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14011:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14011:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13988:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13988:38:1"
															},
															"nodeType": "YulIf",
															"src": "13985:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13790:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13799:6:1",
														"type": ""
													}
												],
												"src": "13755:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14235:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14245:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14257:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14268:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14253:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14253:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14245:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14325:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14349:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14334:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14281:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14281:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14281:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14430:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14415:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14362:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14362:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14362:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14512:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14497:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14444:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14444:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14444:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14191:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14203:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14211:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14219:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14230:4:1",
														"type": ""
													}
												],
												"src": "14081:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14557:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14574:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14577:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14567:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14567:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14671:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14674:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14664:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14664:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14695:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14698:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14688:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14688:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14529:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14763:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14773:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14796:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14778:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14778:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14773:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14807:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14830:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14812:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14812:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14807:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14841:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14864:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14867:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14860:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14845:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14878:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14907:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14889:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14889:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14878:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15098:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15098:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15029:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15022:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15022:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "15052:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "15059:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "15068:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "15055:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15055:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "15049:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15049:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15002:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15002:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14982:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14982:113:1"
															},
															"nodeType": "YulIf",
															"src": "14979:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14746:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14749:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14755:7:1",
														"type": ""
													}
												],
												"src": "14715:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15159:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15176:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15179:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15169:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15169:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15169:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15273:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15276:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15266:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15266:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15297:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15300:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15290:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15290:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15131:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15359:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15369:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15392:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15374:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15374:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15369:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15403:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15426:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15408:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15403:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15450:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15452:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15452:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15452:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15447:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15440:9:1"
															},
															"nodeType": "YulIf",
															"src": "15437:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15482:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15491:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15494:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15487:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15482:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15348:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15351:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15357:1:1",
														"type": ""
													}
												],
												"src": "15317:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15562:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15572:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "15580:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15572:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15600:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15603:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15593:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15593:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15616:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15634:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15637:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15624:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15616:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15549:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15557:4:1",
														"type": ""
													}
												],
												"src": "15508:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15699:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15709:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15727:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15734:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15723:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15739:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15719:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15709:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15682:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15692:6:1",
														"type": ""
													}
												],
												"src": "15655:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15807:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15817:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "15842:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15848:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15838:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15838:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "15817:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "15782:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15788:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "15798:8:1",
														"type": ""
													}
												],
												"src": "15754:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15943:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15953:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "15974:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15986:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15970:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "15957:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15997:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "16028:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16039:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "16009:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16009:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "16001:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16115:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "16146:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "16157:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "16127:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16127:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "16115:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16175:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16188:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16199:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16195:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16184:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16184:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16175:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16214:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16227:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "16238:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16248:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16234:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16214:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15904:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "15911:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "15923:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15936:6:1",
														"type": ""
													}
												],
												"src": "15867:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16298:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16308:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16315:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16308:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16284:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16294:3:1",
														"type": ""
													}
												],
												"src": "16266:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16392:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16402:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16460:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16442:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16442:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "16433:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16433:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16415:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16415:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16402:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16372:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16382:9:1",
														"type": ""
													}
												],
												"src": "16332:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16527:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16537:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16544:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16537:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16513:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16523:3:1",
														"type": ""
													}
												],
												"src": "16480:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16637:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16647:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "16702:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16671:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16671:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "16651:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16726:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "16766:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "16760:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16760:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16773:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "16805:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16781:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16781:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "16732:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16732:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "16719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16719:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16719:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16614:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16620:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "16628:7:1",
														"type": ""
													}
												],
												"src": "16561:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16885:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16895:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16902:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16895:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16881:3:1",
														"type": ""
													}
												],
												"src": "16836:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16968:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16978:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16992:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16992:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "16982:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "17077:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17083:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "17091:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17033:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17033:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17033:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16954:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16960:6:1",
														"type": ""
													}
												],
												"src": "16915:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17160:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17227:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17271:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17278:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "17241:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17241:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17241:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "17180:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "17187:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17177:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17177:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17192:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17194:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17207:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17214:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17203:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17203:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "17194:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17174:2:1",
																"statements": []
															},
															"src": "17170:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "17148:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17155:3:1",
														"type": ""
													}
												],
												"src": "17110:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17381:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17407:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17421:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "17469:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "17437:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17437:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "17425:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17488:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "17511:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "17539:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "17521:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17521:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17507:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17507:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "17492:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17708:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "17710:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "17725:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "17710:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "17692:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17704:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "17689:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17689:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "17686:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "17777:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "17794:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "17822:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "17804:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17804:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17790:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17790:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "17748:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17748:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17748:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "17398:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17403:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17395:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17395:11:1"
															},
															"nodeType": "YulIf",
															"src": "17392:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "17357:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "17364:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "17369:10:1",
														"type": ""
													}
												],
												"src": "17302:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17914:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17924:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "17949:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17955:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17945:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17924:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "17889:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17895:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17905:8:1",
														"type": ""
													}
												],
												"src": "17851:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18025:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18035:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18084:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "18087:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "18080:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18080:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18099:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "18095:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18095:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "18051:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18051:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "18047:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18047:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "18039:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18112:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18126:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "18132:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18122:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18112:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18002:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "18008:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18018:6:1",
														"type": ""
													}
												],
												"src": "17974:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18229:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18362:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18389:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "18395:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18370:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18370:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18362:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18408:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18419:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18429:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "18432:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "18425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18425:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18416:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18416:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "18408:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18210:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "18216:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "18224:4:1",
														"type": ""
													}
												],
												"src": "18148:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18540:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18551:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "18598:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18565:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18565:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "18555:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18687:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18689:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18689:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18689:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18659:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18667:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18656:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18656:30:1"
															},
															"nodeType": "YulIf",
															"src": "18653:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18719:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "18765:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "18759:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18759:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "18733:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18733:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "18723:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "18864:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "18870:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18878:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "18818:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18818:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18818:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18895:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18912:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "18899:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18923:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18936:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "18923:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18987:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19001:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "19020:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19032:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "19028:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19028:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "19016:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19016:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "19005:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19052:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19098:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "19066:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19066:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "19056:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19116:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19125:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "19120:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19184:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19209:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "19227:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "19232:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "19223:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "19223:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "19217:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19217:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "19202:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19202:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19202:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19261:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19275:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19283:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19271:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19271:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "19261:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19302:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "19319:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19330:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19315:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19315:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "19302:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19150:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "19153:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19147:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19147:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "19162:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19164:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "19173:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19176:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19169:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19169:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19164:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "19143:3:1",
																					"statements": []
																				},
																				"src": "19139:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19383:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "19401:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "19428:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "19433:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "19424:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19424:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "19418:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19418:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "19405:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19468:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "19495:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "19510:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "19518:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "19506:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "19506:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "19476:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19476:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "19461:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19461:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19461:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "19366:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "19375:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19363:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19363:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "19360:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19559:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "19573:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "19581:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "19569:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "19569:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19585:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19565:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19565:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "19552:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19552:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19552:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18980:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18985:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19615:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19629:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19642:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "19633:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19666:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19684:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "19703:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "19708:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "19699:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19699:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "19693:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19693:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "19684:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "19659:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "19656:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19753:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "19812:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "19819:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "19759:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19759:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "19746:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19746:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19746:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19607:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18960:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18968:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18957:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18957:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "18950:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "18529:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18535:3:1",
														"type": ""
													}
												],
												"src": "18448:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19955:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19977:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19985:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19973:14:1"
																	},
																	{
																		"hexValue": "546f6b656e206973206e6f742061742073616c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19989:22:1",
																		"type": "",
																		"value": "Token is not at sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19966:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19966:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19947:6:1",
														"type": ""
													}
												],
												"src": "19849:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20171:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20181:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20247:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20252:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20188:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20188:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20181:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20353:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
																	"nodeType": "YulIdentifier",
																	"src": "20264:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20264:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20264:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20366:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20377:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20382:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20373:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20373:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20366:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20159:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20167:3:1",
														"type": ""
													}
												],
												"src": "20025:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20568:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20578:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20590:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20601:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20586:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20586:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20578:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20625:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20636:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20621:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20621:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20644:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20650:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20640:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20614:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20614:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20670:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20804:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20678:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20678:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20670:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20548:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20563:4:1",
														"type": ""
													}
												],
												"src": "20397:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20928:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20950:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20958:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20946:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20946:14:1"
																	},
																	{
																		"hexValue": "43616e6e6f742062757920796f7572206f776e204e4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20962:25:1",
																		"type": "",
																		"value": "Cannot buy your own NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20939:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20939:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20920:6:1",
														"type": ""
													}
												],
												"src": "20822:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21147:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21157:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21223:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21228:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21164:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21164:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21157:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21329:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
																	"nodeType": "YulIdentifier",
																	"src": "21240:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21240:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21240:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21342:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21353:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21358:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21349:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21349:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21342:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21135:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21143:3:1",
														"type": ""
													}
												],
												"src": "21001:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21544:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21554:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21566:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21577:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21562:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21554:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21601:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21612:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21597:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21597:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21620:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21626:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21616:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21616:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21590:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21590:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21646:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21780:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21654:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21654:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21646:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21524:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21539:4:1",
														"type": ""
													}
												],
												"src": "21373:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21904:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21926:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21934:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21922:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21922:14:1"
																	},
																	{
																		"hexValue": "537570706c792045786163742066756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21938:19:1",
																		"type": "",
																		"value": "Supply Exact fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21915:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21915:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21896:6:1",
														"type": ""
													}
												],
												"src": "21798:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22117:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22127:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22193:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22198:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22134:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22134:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22127:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22299:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
																	"nodeType": "YulIdentifier",
																	"src": "22210:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22210:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22210:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22312:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22323:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22328:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22319:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22319:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22312:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22105:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22113:3:1",
														"type": ""
													}
												],
												"src": "21971:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22514:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22524:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22536:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22547:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22532:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22532:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22524:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22571:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22582:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22567:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22590:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22596:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22586:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22560:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22560:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22616:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22750:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22624:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22624:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22616:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22494:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22509:4:1",
														"type": ""
													}
												],
												"src": "22343:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22813:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22823:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22846:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22828:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22828:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22823:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22857:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22880:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22862:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22862:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22857:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22891:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22903:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22906:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22899:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22891:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22933:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22935:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22935:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22935:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "22924:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22930:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22921:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22921:11:1"
															},
															"nodeType": "YulIf",
															"src": "22918:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22799:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22802:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22808:4:1",
														"type": ""
													}
												],
												"src": "22768:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23074:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23096:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23104:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23092:14:1"
																	},
																	{
																		"hexValue": "596f75722061726520417574686f72697a6520746f2073656c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23108:28:1",
																		"type": "",
																		"value": "Your are Authorize to sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23085:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23085:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23066:6:1",
														"type": ""
													}
												],
												"src": "22968:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23296:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23306:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23372:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23377:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23313:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23313:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23306:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23478:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
																	"nodeType": "YulIdentifier",
																	"src": "23389:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23389:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23389:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23491:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23502:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23507:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23498:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23491:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23284:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23292:3:1",
														"type": ""
													}
												],
												"src": "23150:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23693:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23703:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23715:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23726:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23711:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23711:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23703:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23750:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23761:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23746:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23769:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23775:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23765:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23739:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23739:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23795:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23929:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23803:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23803:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23673:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23688:4:1",
														"type": ""
													}
												],
												"src": "23522:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24061:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24071:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24086:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24071:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24033:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24038:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24049:11:1",
														"type": ""
													}
												],
												"src": "23947:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24211:280:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24221:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24268:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "24235:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24235:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "24225:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24283:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24367:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24372:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24290:76:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24290:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24283:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24427:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24434:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24423:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24441:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24446:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "24388:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24388:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24388:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24462:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24473:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24478:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24469:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24462:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24192:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24199:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24207:3:1",
														"type": ""
													}
												],
												"src": "24101:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24681:251:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24692:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24781:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24790:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24699:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24699:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24692:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24804:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24893:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24902:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24811:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24811:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24804:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24916:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "24923:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24916:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24652:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24658:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24677:3:1",
														"type": ""
													}
												],
												"src": "24497:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24996:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25007:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25023:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25017:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25017:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25007:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24979:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24989:6:1",
														"type": ""
													}
												],
												"src": "24938:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25137:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25154:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25159:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25147:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25147:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25147:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25175:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25194:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25199:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25190:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25175:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25109:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25114:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25125:11:1",
														"type": ""
													}
												],
												"src": "25042:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25306:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25316:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25362:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25330:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25330:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25320:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25377:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25442:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25447:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25384:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25384:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25377:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25502:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25509:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25498:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25516:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25521:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "25463:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25463:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25463:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25537:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25548:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25575:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "25553:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25553:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25544:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25537:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25287:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25294:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25302:3:1",
														"type": ""
													}
												],
												"src": "25216:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25795:440:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25805:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25817:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25828:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25813:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25813:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25805:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25886:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25899:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25910:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25895:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25842:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25842:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25842:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25967:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25980:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25991:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25976:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25976:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25923:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25923:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25923:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26049:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26062:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26073:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26058:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26005:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26005:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26005:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26109:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26094:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26118:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26124:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26114:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26087:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26087:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26144:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "26214:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26223:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26152:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26152:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26144:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25743:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "25755:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25763:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25771:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25779:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25790:4:1",
														"type": ""
													}
												],
												"src": "25595:640:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26303:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26313:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "26328:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26322:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26322:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26313:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26370:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "26344:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26344:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26344:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "26281:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26289:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26297:5:1",
														"type": ""
													}
												],
												"src": "26241:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26464:273:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26510:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "26512:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26512:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26512:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26481:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "26477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26477:32:1"
															},
															"nodeType": "YulIf",
															"src": "26474:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "26603:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "26618:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26632:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "26622:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "26647:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "26692:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "26703:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "26688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26688:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26712:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "26657:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26657:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "26647:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26434:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "26445:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26457:6:1",
														"type": ""
													}
												],
												"src": "26388:349:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token is not at sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot buy your own NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Supply Exact fund\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your are Authorize to sell\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610180575f3560e01c806370a08231116100d0578063a90d14e211610089578063d547cfb711610063578063d547cfb7146105a6578063e985e9c5146105d0578063f2a413b51461060c578063f8b2cb4f1461064857610180565b8063a90d14e21461051a578063b88d4fde14610542578063c87b56dd1461056a57610180565b806370a082311461040a5780637d7f1f3e146104465780638a71bb2d1461048257806395d89b41146104ac578063a22cb465146104d6578063a37365e0146104fe57610180565b80632a55205a1161013d57806355f804b31161011757806355f804b3146103425780635a51a8851461036a5780635afa3a72146103a65780636352211e146103ce57610180565b80632a55205a146102b35780633d0673d4146102f057806342842e0e1461031a57610180565b806301ffc9a71461018457806306fdde03146101c0578063081812fc146101ea578063095ea7b31461022657806323b872dd1461024e578063265aa62114610276575b5f80fd5b34801561018f575f80fd5b506101aa60048036038101906101a591906123d2565b610684565b6040516101b79190612417565b60405180910390f35b3480156101cb575f80fd5b506101d46106e4565b6040516101e191906124ba565b60405180910390f35b3480156101f5575f80fd5b50610210600480360381019061020b919061250d565b610773565b60405161021d9190612577565b60405180910390f35b348015610231575f80fd5b5061024c600480360381019061024791906125ba565b61078e565b005b348015610259575f80fd5b50610274600480360381019061026f91906125f8565b6107a4565b005b348015610281575f80fd5b5061029c6004803603810190610297919061250d565b6108a3565b6040516102aa929190612657565b60405180910390f35b3480156102be575f80fd5b506102d960048036038101906102d4919061267e565b6108e2565b6040516102e7929190612657565b60405180910390f35b3480156102fb575f80fd5b50610304610930565b60405161031191906126bc565b60405180910390f35b348015610325575f80fd5b50610340600480360381019061033b91906125f8565b610940565b005b34801561034d575f80fd5b5061036860048036038101906103639190612801565b61095f565b005b348015610375575f80fd5b50610390600480360381019061038b919061250d565b610972565b60405161039d91906126bc565b60405180910390f35b3480156103b1575f80fd5b506103cc60048036038101906103c79190612848565b6109fd565b005b3480156103d9575f80fd5b506103f460048036038101906103ef919061250d565b610b1d565b6040516104019190612577565b60405180910390f35b348015610415575f80fd5b50610430600480360381019061042b91906128a2565b610b2e565b60405161043d91906126bc565b60405180910390f35b348015610451575f80fd5b5061046c6004803603810190610467919061250d565b610be4565b6040516104799190612417565b60405180910390f35b34801561048d575f80fd5b50610496610c52565b6040516104a391906126bc565b60405180910390f35b3480156104b7575f80fd5b506104c0610c58565b6040516104cd91906124ba565b60405180910390f35b3480156104e1575f80fd5b506104fc60048036038101906104f791906128f7565b610ce8565b005b6105186004803603810190610513919061250d565b610cfe565b005b348015610525575f80fd5b50610540600480360381019061053b919061250d565b610f58565b005b34801561054d575f80fd5b50610568600480360381019061056391906129d3565b611035565b005b348015610575575f80fd5b50610590600480360381019061058b919061250d565b611052565b60405161059d91906124ba565b60405180910390f35b3480156105b1575f80fd5b506105ba61115d565b6040516105c791906124ba565b60405180910390f35b3480156105db575f80fd5b506105f660048036038101906105f19190612a53565b6111e9565b6040516106039190612417565b60405180910390f35b348015610617575f80fd5b50610632600480360381019061062d919061250d565b611277565b60405161063f9190612417565b60405180910390f35b348015610653575f80fd5b5061066e600480360381019061066991906128a2565b6112e5565b60405161067b91906126bc565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106dd57506106dc82611305565b5b9050919050565b60605f80546106f290612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461071e90612abe565b80156107695780601f1061074057610100808354040283529160200191610769565b820191905f5260205f20905b81548152906001019060200180831161074c57829003601f168201915b5050505050905090565b5f61077d826113e6565b506107878261146c565b9050919050565b6107a0828261079b6114a5565b6114ac565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610814575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161080b9190612577565b60405180910390fd5b5f61082783836108226114a5565b6114be565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461089d578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161089493929190612aee565b60405180910390fd5b50505050565b600d602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f805f6064600954856108f59190612b50565b6108ff9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168192509250509250929050565b5f61093b60076116c9565b905090565b61095a83838360405180602001604052805f815250611035565b505050565b806008908161096e9190612d8b565b5050565b5f80600d5f8481526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151915050919050565b5f610a0860076116c9565b9050610a1433826116d5565b610a1e81846116f2565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250600d5f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550610b18600761174c565b505050565b5f610b27826113e6565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b9f575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610b969190612577565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f80610bef83610b1d565b9050600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b60095481565b606060018054610c6790612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9390612abe565b8015610cde5780601f10610cb557610100808354040283529160200191610cde565b820191905f5260205f20905b815481529060010190602001808311610cc157829003601f168201915b5050505050905090565b610cfa610cf36114a5565b8383611760565b5050565b5f610d0882610b1d565b905060011515600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16151514610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da090612ea4565b60405180910390fd5b5f3390505f600d5f8581526020019081526020015f206001015490508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90612f0c565b60405180910390fd5b803414610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c90612f74565b60405180910390fd5b610e808383866118c9565b5f606460095483610e919190612b50565b610e9b9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f01573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc8284610f289190612f92565b90811502906040515f60405180830381858888f19350505050158015610f50573d5f803e3d5ffd5b505050505050565b610f6181610b1d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc59061300f565b60405180910390fd5b6001600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6110408484846107a4565b61104c84848484611a31565b50505050565b606061105d826113e6565b505f60065f8481526020019081526020015f20805461107b90612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546110a790612abe565b80156110f25780601f106110c9576101008083540402835291602001916110f2565b820191905f5260205f20905b8154815290600101906020018083116110d557829003601f168201915b505050505090505f611102611be3565b90505f815103611116578192505050611158565b5f8251111561114a578082604051602001611132929190613067565b60405160208183030381529060405292505050611158565b61115384611bf9565b925050505b919050565b6008805461116a90612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461119690612abe565b80156111e15780601f106111b8576101008083540402835291602001916111e1565b820191905f5260205f20905b8154815290600101906020018083116111c457829003601f168201915b505050505081565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f8061128283610b1d565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806113cf57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806113df57506113de82611c5f565b5b9050919050565b5f806113f183611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361146357826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161145a91906126bc565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6114b98383836001611d01565b505050565b5f806114c984611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461150a57611509818486611ec0565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611595576115495f855f80611d01565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461161457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b6116ee828260405180602001604052805f815250611f83565b5050565b8060065f8481526020019081526020015f2090816117109190612d8b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161174091906126bc565b60405180910390a15050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117d057816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016117c79190612577565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118bc9190612417565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611939575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119309190612577565b60405180910390fd5b5f61194583835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b757816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ae91906126bc565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a2b578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401611a2293929190612aee565b60405180910390fd5b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611bdd578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a746114a5565b8685856040518563ffffffff1660e01b8152600401611a9694939291906130dc565b6020604051808303815f875af1925050508015611ad157506040513d601f19601f82011682018060405250810190611ace919061313a565b60015b611b52573d805f8114611aff576040519150601f19603f3d011682016040523d82523d5f602084013e611b04565b606091505b505f815103611b4a57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b419190612577565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611bdb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611bd29190612577565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b6060611c04826113e6565b505f611c0e611be3565b90505f815111611c2c5760405180602001604052805f815250611c57565b80611c3684611f9e565b604051602001611c47929190613067565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611d3957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611e6b575f611d48846113e6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611db257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611dc55750611dc381846111e9565b155b15611e0757826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611dfe9190612577565b60405180910390fd5b8115611e6957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611ecb838383612068565b611f7e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f3f57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611f3691906126bc565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611f75929190612657565b60405180910390fd5b505050565b611f8d8383612128565b611f995f848484611a31565b505050565b60605f6001611fac8461221b565b0190505f8167ffffffffffffffff811115611fca57611fc96126dd565b5b6040519080825280601f01601f191660200182016040528015611ffc5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561205d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161205257612051612b91565b5b0494505f8503612009575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561211f57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806120e057506120df84846111e9565b5b8061211e57508273ffffffffffffffffffffffffffffffffffffffff166121068361146c565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612198575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161218f9190612577565b60405180910390fd5b5f6121a483835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612216575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161220d9190612577565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612277577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161226d5761226c612b91565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106122b4576d04ee2d6d415b85acef810000000083816122aa576122a9612b91565b5b0492506020810190505b662386f26fc1000083106122e357662386f26fc1000083816122d9576122d8612b91565b5b0492506010810190505b6305f5e100831061230c576305f5e100838161230257612301612b91565b5b0492506008810190505b612710831061233157612710838161232757612326612b91565b5b0492506004810190505b60648310612354576064838161234a57612349612b91565b5b0492506002810190505b600a8310612363576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123b18161237d565b81146123bb575f80fd5b50565b5f813590506123cc816123a8565b92915050565b5f602082840312156123e7576123e6612375565b5b5f6123f4848285016123be565b91505092915050565b5f8115159050919050565b612411816123fd565b82525050565b5f60208201905061242a5f830184612408565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561246757808201518184015260208101905061244c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61248c82612430565b612496818561243a565b93506124a681856020860161244a565b6124af81612472565b840191505092915050565b5f6020820190508181035f8301526124d28184612482565b905092915050565b5f819050919050565b6124ec816124da565b81146124f6575f80fd5b50565b5f81359050612507816124e3565b92915050565b5f6020828403121561252257612521612375565b5b5f61252f848285016124f9565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61256182612538565b9050919050565b61257181612557565b82525050565b5f60208201905061258a5f830184612568565b92915050565b61259981612557565b81146125a3575f80fd5b50565b5f813590506125b481612590565b92915050565b5f80604083850312156125d0576125cf612375565b5b5f6125dd858286016125a6565b92505060206125ee858286016124f9565b9150509250929050565b5f805f6060848603121561260f5761260e612375565b5b5f61261c868287016125a6565b935050602061262d868287016125a6565b925050604061263e868287016124f9565b9150509250925092565b612651816124da565b82525050565b5f60408201905061266a5f830185612568565b6126776020830184612648565b9392505050565b5f806040838503121561269457612693612375565b5b5f6126a1858286016124f9565b92505060206126b2858286016124f9565b9150509250929050565b5f6020820190506126cf5f830184612648565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61271382612472565b810181811067ffffffffffffffff82111715612732576127316126dd565b5b80604052505050565b5f61274461236c565b9050612750828261270a565b919050565b5f67ffffffffffffffff82111561276f5761276e6126dd565b5b61277882612472565b9050602081019050919050565b828183375f83830152505050565b5f6127a56127a084612755565b61273b565b9050828152602081018484840111156127c1576127c06126d9565b5b6127cc848285612785565b509392505050565b5f82601f8301126127e8576127e76126d5565b5b81356127f8848260208601612793565b91505092915050565b5f6020828403121561281657612815612375565b5b5f82013567ffffffffffffffff81111561283357612832612379565b5b61283f848285016127d4565b91505092915050565b5f806040838503121561285e5761285d612375565b5b5f83013567ffffffffffffffff81111561287b5761287a612379565b5b612887858286016127d4565b9250506020612898858286016124f9565b9150509250929050565b5f602082840312156128b7576128b6612375565b5b5f6128c4848285016125a6565b91505092915050565b6128d6816123fd565b81146128e0575f80fd5b50565b5f813590506128f1816128cd565b92915050565b5f806040838503121561290d5761290c612375565b5b5f61291a858286016125a6565b925050602061292b858286016128e3565b9150509250929050565b5f67ffffffffffffffff82111561294f5761294e6126dd565b5b61295882612472565b9050602081019050919050565b5f61297761297284612935565b61273b565b905082815260208101848484011115612993576129926126d9565b5b61299e848285612785565b509392505050565b5f82601f8301126129ba576129b96126d5565b5b81356129ca848260208601612965565b91505092915050565b5f805f80608085870312156129eb576129ea612375565b5b5f6129f8878288016125a6565b9450506020612a09878288016125a6565b9350506040612a1a878288016124f9565b925050606085013567ffffffffffffffff811115612a3b57612a3a612379565b5b612a47878288016129a6565b91505092959194509250565b5f8060408385031215612a6957612a68612375565b5b5f612a76858286016125a6565b9250506020612a87858286016125a6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612ad557607f821691505b602082108103612ae857612ae7612a91565b5b50919050565b5f606082019050612b015f830186612568565b612b0e6020830185612648565b612b1b6040830184612568565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612b5a826124da565b9150612b65836124da565b9250828202612b73816124da565b91508282048414831517612b8a57612b89612b23565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612bc8826124da565b9150612bd3836124da565b925082612be357612be2612b91565b5b828204905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612c4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c0f565b612c548683612c0f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612c8f612c8a612c85846124da565b612c6c565b6124da565b9050919050565b5f819050919050565b612ca883612c75565b612cbc612cb482612c96565b848454612c1b565b825550505050565b5f90565b612cd0612cc4565b612cdb818484612c9f565b505050565b5b81811015612cfe57612cf35f82612cc8565b600181019050612ce1565b5050565b601f821115612d4357612d1481612bee565b612d1d84612c00565b81016020851015612d2c578190505b612d40612d3885612c00565b830182612ce0565b50505b505050565b5f82821c905092915050565b5f612d635f1984600802612d48565b1980831691505092915050565b5f612d7b8383612d54565b9150826002028217905092915050565b612d9482612430565b67ffffffffffffffff811115612dad57612dac6126dd565b5b612db78254612abe565b612dc2828285612d02565b5f60209050601f831160018114612df3575f8415612de1578287015190505b612deb8582612d70565b865550612e52565b601f198416612e0186612bee565b5f5b82811015612e2857848901518255600182019150602085019450602081019050612e03565b86831015612e455784890151612e41601f891682612d54565b8355505b6001600288020188555050505b505050505050565b7f546f6b656e206973206e6f742061742073616c650000000000000000000000005f82015250565b5f612e8e60148361243a565b9150612e9982612e5a565b602082019050919050565b5f6020820190508181035f830152612ebb81612e82565b9050919050565b7f43616e6e6f742062757920796f7572206f776e204e46540000000000000000005f82015250565b5f612ef660178361243a565b9150612f0182612ec2565b602082019050919050565b5f6020820190508181035f830152612f2381612eea565b9050919050565b7f537570706c792045786163742066756e640000000000000000000000000000005f82015250565b5f612f5e60118361243a565b9150612f6982612f2a565b602082019050919050565b5f6020820190508181035f830152612f8b81612f52565b9050919050565b5f612f9c826124da565b9150612fa7836124da565b9250828203905081811115612fbf57612fbe612b23565b5b92915050565b7f596f75722061726520417574686f72697a6520746f2073656c6c0000000000005f82015250565b5f612ff9601a8361243a565b915061300482612fc5565b602082019050919050565b5f6020820190508181035f83015261302681612fed565b9050919050565b5f81905092915050565b5f61304182612430565b61304b818561302d565b935061305b81856020860161244a565b80840191505092915050565b5f6130728285613037565b915061307e8284613037565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6130ae8261308a565b6130b88185613094565b93506130c881856020860161244a565b6130d181612472565b840191505092915050565b5f6080820190506130ef5f830187612568565b6130fc6020830186612568565b6131096040830185612648565b818103606083015261311b81846130a4565b905095945050505050565b5f81519050613134816123a8565b92915050565b5f6020828403121561314f5761314e612375565b5b5f61315c84828501613126565b9150509291505056fea2646970667358221220e7029830c710f6053b68b0206460caa2aae169741b9705f4dc0967f6cbd5b1a964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA90D14E2 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547CFB7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xF2A413B5 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x648 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0xA90D14E2 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x56A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x7D7F1F3E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x8A71BB2D EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xA37365E0 EQ PUSH2 0x4FE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x5A51A885 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x5AFA3A72 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x3D0673D4 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x31A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x265AA621 EQ PUSH2 0x276 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2801 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xF58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH2 0x1035 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2A53 JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x66E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6DD JUMPI POP PUSH2 0x6DC DUP3 PUSH2 0x1305 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x6F2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71E SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x740 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x77D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH2 0x787 DUP3 PUSH2 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A0 DUP3 DUP3 PUSH2 0x79B PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x814 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x827 DUP4 DUP4 PUSH2 0x822 PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89D JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93B PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x95A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1035 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 SWAP1 DUP2 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA08 PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP PUSH2 0xA14 CALLER DUP3 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0xA1E DUP2 DUP5 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB18 PUSH1 0x7 PUSH2 0x174C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB27 DUP3 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEF DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC67 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC93 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCFA PUSH2 0xCF3 PUSH2 0x14A5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1760 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD08 DUP3 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP4 DUP4 DUP7 PUSH2 0x18C9 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP4 PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF01 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 DUP5 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xB1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP1 PUSH2 0x300F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1040 DUP5 DUP5 DUP5 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x104C DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x105D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x107B SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A7 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1102 PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1116 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x114A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1132 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1153 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x116A SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1196 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1282 DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x13CF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x13DF JUMPI POP PUSH2 0x13DE DUP3 PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F1 DUP4 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1463 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14B9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14C9 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150A JUMPI PUSH2 0x1509 DUP2 DUP5 DUP7 PUSH2 0x1EC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI PUSH2 0x1549 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1614 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1F83 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1710 SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C7 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1939 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1930 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1945 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A2B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1BDD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A74 PUSH2 0x14A5 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AD1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACE SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B52 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1B4A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1BDB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C04 DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH2 0x1C0E PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH2 0x1C36 DUP5 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C47 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1D39 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E6B JUMPI PUSH0 PUSH2 0x1D48 DUP5 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DB2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DC5 JUMPI POP PUSH2 0x1DC3 DUP2 DUP5 PUSH2 0x11E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1E69 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECB DUP4 DUP4 DUP4 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x1F7E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F75 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F8D DUP4 DUP4 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x1F99 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1FAC DUP5 PUSH2 0x221B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x205D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x2009 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x211F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x20E0 JUMPI POP PUSH2 0x20DF DUP5 DUP5 PUSH2 0x11E9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x211E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2106 DUP4 PUSH2 0x146C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2198 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218F SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21A4 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2216 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2277 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x22B4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x22E3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x230C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2302 JUMPI PUSH2 0x2301 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2331 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2327 JUMPI PUSH2 0x2326 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2354 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x234A JUMPI PUSH2 0x2349 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2363 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B1 DUP2 PUSH2 0x237D JUMP JUMPDEST DUP2 EQ PUSH2 0x23BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CC DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E7 JUMPI PUSH2 0x23E6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F4 DUP5 DUP3 DUP6 ADD PUSH2 0x23BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2411 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242A PUSH0 DUP4 ADD DUP5 PUSH2 0x2408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2467 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x244C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x248C DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x2496 DUP2 DUP6 PUSH2 0x243A JUMP JUMPDEST SWAP4 POP PUSH2 0x24A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24D2 DUP2 DUP5 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EC DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP2 EQ PUSH2 0x24F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2507 DUP2 PUSH2 0x24E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252F DUP5 DUP3 DUP6 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2561 DUP3 PUSH2 0x2538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258A PUSH0 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2599 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B4 DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25CF PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25DD DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25EE DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261C DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x262D DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x263E DUP7 DUP3 DUP8 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2651 DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x266A PUSH0 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2677 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A1 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26B2 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26CF PUSH0 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2713 DUP3 PUSH2 0x2472 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2732 JUMPI PUSH2 0x2731 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2744 PUSH2 0x236C JUMP JUMPDEST SWAP1 POP PUSH2 0x2750 DUP3 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x276F JUMPI PUSH2 0x276E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2778 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27A5 PUSH2 0x27A0 DUP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27C1 JUMPI PUSH2 0x27C0 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x27CC DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27E8 JUMPI PUSH2 0x27E7 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2816 JUMPI PUSH2 0x2815 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2833 JUMPI PUSH2 0x2832 PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x283F DUP5 DUP3 DUP6 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285D PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287B JUMPI PUSH2 0x287A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2887 DUP6 DUP3 DUP7 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2898 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B7 JUMPI PUSH2 0x28B6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C4 DUP5 DUP3 DUP6 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP2 EQ PUSH2 0x28E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F1 DUP2 PUSH2 0x28CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291A DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292B DUP6 DUP3 DUP7 ADD PUSH2 0x28E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2958 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2977 PUSH2 0x2972 DUP5 PUSH2 0x2935 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x299E DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x29EB JUMPI PUSH2 0x29EA PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F8 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A09 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A1A DUP8 DUP3 DUP9 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2A47 DUP8 DUP3 DUP9 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A69 JUMPI PUSH2 0x2A68 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A76 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A87 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2AD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AE8 JUMPI PUSH2 0x2AE7 PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B01 PUSH0 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2B0E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST PUSH2 0x2B1B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2B5A DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B65 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B73 DUP2 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B8A JUMPI PUSH2 0x2B89 PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BC8 DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD3 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BE3 JUMPI PUSH2 0x2BE2 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2C4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2C0F JUMP JUMPDEST PUSH2 0x2C54 DUP7 DUP4 PUSH2 0x2C0F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C8F PUSH2 0x2C8A PUSH2 0x2C85 DUP5 PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA8 DUP4 PUSH2 0x2C75 JUMP JUMPDEST PUSH2 0x2CBC PUSH2 0x2CB4 DUP3 PUSH2 0x2C96 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C1B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CD0 PUSH2 0x2CC4 JUMP JUMPDEST PUSH2 0x2CDB DUP2 DUP5 DUP5 PUSH2 0x2C9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CFE JUMPI PUSH2 0x2CF3 PUSH0 DUP3 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2CE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D14 DUP2 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x2D1D DUP5 PUSH2 0x2C00 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2D2C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2D40 PUSH2 0x2D38 DUP6 PUSH2 0x2C00 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2CE0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D63 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2D48 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B DUP4 DUP4 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2DB7 DUP3 SLOAD PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x2DC2 DUP3 DUP3 DUP6 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DF3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2DE1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2DEB DUP6 DUP3 PUSH2 0x2D70 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2E01 DUP7 PUSH2 0x2BEE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E28 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E03 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2E45 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2E41 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2D54 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F742061742073616C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8E PUSH1 0x14 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2E99 DUP3 PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EBB DUP2 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E204E4654000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EF6 PUSH1 0x17 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F01 DUP3 PUSH2 0x2EC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F23 DUP2 PUSH2 0x2EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537570706C792045786163742066756E64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F5E PUSH1 0x11 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F69 DUP3 PUSH2 0x2F2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8B DUP2 PUSH2 0x2F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F9C DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA7 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2FBF JUMPI PUSH2 0x2FBE PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75722061726520417574686F72697A6520746F2073656C6C000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF9 PUSH1 0x1A DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x3004 DUP3 PUSH2 0x2FC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3026 DUP2 PUSH2 0x2FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3041 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x304B DUP2 DUP6 PUSH2 0x302D JUMP JUMPDEST SWAP4 POP PUSH2 0x305B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3072 DUP3 DUP6 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP PUSH2 0x307E DUP3 DUP5 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30AE DUP3 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x30B8 DUP2 DUP6 PUSH2 0x3094 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x30D1 DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x30EF PUSH0 DUP4 ADD DUP8 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x30FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x3109 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x311B DUP2 DUP5 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3134 DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314F JUMPI PUSH2 0x314E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x315C DUP5 DUP3 DUP6 ADD PUSH2 0x3126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 MUL SWAP9 ADDRESS 0xC7 LT 0xF6 SDIV EXTCODESIZE PUSH9 0xB0206460CAA2AAE169 PUSH21 0x1B9705F4DC0967F6CBD5B1A964736F6C6343000814 STOP CALLER ",
							"sourceMap": "58306:2999:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56980:207;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40859:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41991:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41817:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;42637:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58785:35;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;61024:279;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;60100:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;43281:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58921:107;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;59843:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;59034:330;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40679:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40414:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;59543:145;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58489:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41012:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42212:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;60205:813;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;59370:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43479:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;57253:593;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58457:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42422:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;59694:143;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;59989:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;56980:207;57082:4;56803:10;56796:18;;57105:35;;;:11;:35;;;;:75;;;;57144:36;57168:11;57144:23;:36::i;:::-;57105:75;57098:82;;56980:207;;;:::o;40859:89::-;40904:13;40936:5;40929:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40859:89;:::o;41991:154::-;42058:7;42077:22;42091:7;42077:13;:22::i;:::-;;42117:21;42130:7;42117:12;:21::i;:::-;42110:28;;41991:154;;;:::o;41817:113::-;41888:35;41897:2;41901:7;41910:12;:10;:12::i;:::-;41888:8;:35::i;:::-;41817:113;;:::o;42637:578::-;42745:1;42731:16;;:2;:16;;;42727:87;;42800:1;42770:33;;;;;;;;;;;:::i;:::-;;;;;;;;42727:87;43032:21;43056:34;43064:2;43068:7;43077:12;:10;:12::i;:::-;43056:7;:34::i;:::-;43032:58;;43121:4;43104:21;;:13;:21;;;43100:109;;43169:4;43175:7;43184:13;43148:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;43100:109;42717:498;42637:578;;;:::o;58785:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;61024:279::-;61109:16;61127:21;61160:17;61210:3;61189:17;;61181:5;:25;;;;:::i;:::-;61180:33;;;;:::i;:::-;61160:53;;61231:13;;;;;;;;;;;61246:9;61223:33;;;;;61024:279;;;;;:::o;60100:99::-;60145:4;60167:25;:15;:23;:25::i;:::-;60160:32;;60100:99;:::o;43281:132::-;43367:39;43384:4;43390:2;43394:7;43367:39;;;;;;;;;;;;:16;:39::i;:::-;43281:132;;;:::o;58921:107::-;59006:15;58991:12;:30;;;;;;:::i;:::-;;58921:107;:::o;59843:140::-;59899:4;59916:15;59934:4;:14;59939:8;59934:14;;;;;;;;;;;59916:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59965:4;:10;;;59958:17;;;59843:140;;;:::o;59034:330::-;59104:15;59122:25;:15;:23;:25::i;:::-;59104:43;;59157:30;59167:10;59179:7;59157:9;:30::i;:::-;59197:31;59210:7;59219:8;59197:12;:31::i;:::-;59254:22;;;;;;;;59258:10;59254:22;;;;;;59270:5;59254:22;;;59239:4;:13;59244:7;59239:13;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59315:5;59286:6;:19;59294:10;59286:19;;;;;;;;;;;;;;;:28;59306:7;59286:28;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;59329:27;:15;:25;:27::i;:::-;59094:270;59034:330;;:::o;40679:118::-;40742:7;40768:22;40782:7;40768:13;:22::i;:::-;40761:29;;40679:118;;;:::o;40414:208::-;40477:7;40517:1;40500:19;;:5;:19;;;40496:87;;40569:1;40542:30;;;;;;;;;;;:::i;:::-;;;;;;;;40496:87;40599:9;:16;40609:5;40599:16;;;;;;;;;;;;;;;;40592:23;;40414:208;;;:::o;59543:145::-;59597:4;59613:11;59626:17;59634:8;59626:7;:17::i;:::-;59613:30;;59660:6;:11;59667:3;59660:11;;;;;;;;;;;;;;;:21;59672:8;59660:21;;;;;;;;;;;;;;;;;;;;;59653:28;;;59543:145;;;:::o;58489:37::-;;;;:::o;41012:93::-;41059:13;41091:7;41084:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41012:93;:::o;42212:144::-;42297:52;42316:12;:10;:12::i;:::-;42330:8;42340;42297:18;:52::i;:::-;42212:144;;:::o;60205:813::-;60273:18;60294:16;60302:7;60294;:16::i;:::-;60273:37;;60358:4;60328:34;;:6;:18;60335:10;60328:18;;;;;;;;;;;;;;;:27;60347:7;60328:27;;;;;;;;;;;;;;;;;;;;;:34;;;60320:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;60398:13;60414:10;60398:26;;60434:13;60450:4;:13;60455:7;60450:13;;;;;;;;;;;:19;;;60434:35;;60501:5;60487:19;;:10;:19;;;60479:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;60565:5;60552:9;:18;60544:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;60644:37;60654:10;60666:5;60673:7;60644:9;:37::i;:::-;60741:17;60791:3;60770:17;;60762:5;:25;;;;:::i;:::-;60761:33;;;;:::i;:::-;60741:53;;60835:13;;;;;;;;;;;60827:31;;:42;60859:9;60827:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60971:10;60963:28;;:47;61000:9;60992:5;:17;;;;:::i;:::-;60963:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60254:764;;;;60205:813;:::o;59370:167::-;59441:16;59449:7;59441;:16::i;:::-;59427:30;;:10;:30;;;59419:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;59526:4;59498:6;:18;59505:10;59498:18;;;;;;;;;;;;;;;:27;59517:7;59498:27;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;59370:167;:::o;43479:208::-;43592:31;43605:4;43611:2;43615:7;43592:12;:31::i;:::-;43633:47;43656:4;43662:2;43666:7;43675:4;43633:22;:47::i;:::-;43479:208;;;;:::o;57253:593::-;57326:13;57351:22;57365:7;57351:13;:22::i;:::-;;57384:23;57410:10;:19;57421:7;57410:19;;;;;;;;;;;57384:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57439:18;57460:10;:8;:10::i;:::-;57439:31;;57565:1;57549:4;57543:18;:23;57539:70;;57589:9;57582:16;;;;;;57539:70;57734:1;57714:9;57708:23;:27;57704:95;;;57772:4;57778:9;57758:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;57751:37;;;;;;57704:95;57816:23;57831:7;57816:14;:23::i;:::-;57809:30;;;;57253:593;;;;:::o;58457:26::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;42422:153::-;42510:4;42533:18;:25;42552:5;42533:25;;;;;;;;;;;;;;;:35;42559:8;42533:35;;;;;;;;;;;;;;;;;;;;;;;;;42526:42;;42422:153;;;;:::o;59694:143::-;59749:4;59765:10;59778:16;59786:7;59778;:16::i;:::-;59765:29;;59811:6;:10;59818:2;59811:10;;;;;;;;;;;;;;;:19;59822:7;59811:19;;;;;;;;;;;;;;;;;;;;;59804:26;;;59694:143;;;:::o;59989:105::-;60043:7;60076:3;:11;;;60069:18;;59989:105;;;:::o;40055:300::-;40157:4;40207:25;40192:40;;;:11;:40;;;;:104;;;;40263:33;40248:48;;;:11;:48;;;;40192:104;:156;;;;40312:36;40336:11;40312:23;:36::i;:::-;40192:156;40173:175;;40055:300;;;:::o;54632:241::-;54695:7;54714:13;54730:17;54739:7;54730:8;:17::i;:::-;54714:33;;54778:1;54761:19;;:5;:19;;;54757:88;;54826:7;54803:31;;;;;;;;;;;:::i;:::-;;;;;;;;54757:88;54861:5;54854:12;;;54632:241;;;:::o;44432:127::-;44502:7;44528:15;:24;44544:7;44528:24;;;;;;;;;;;;;;;;;;;;;44521:31;;44432:127;;;:::o;28165:96::-;28218:7;28244:10;28237:17;;28165:96;:::o;52912:120::-;52992:33;53001:2;53005:7;53014:4;53020;52992:8;:33::i;:::-;52912:120;;;:::o;47332:795::-;47418:7;47437:12;47452:17;47461:7;47452:8;:17::i;:::-;47437:32;;47545:1;47529:18;;:4;:18;;;47525:86;;47563:37;47580:4;47586;47592:7;47563:16;:37::i;:::-;47525:86;47671:1;47655:18;;:4;:18;;;47651:256;;47771:48;47788:1;47792:7;47809:1;47813:5;47771:8;:48::i;:::-;47881:1;47862:9;:15;47872:4;47862:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;47651:256;47935:1;47921:16;;:2;:16;;;47917:107;;47998:1;47981:9;:13;47991:2;47981:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;47917:107;48053:2;48034:7;:16;48042:7;48034:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;48090:7;48086:2;48071:27;;48080:4;48071:27;;;;;;;;;;;;48116:4;48109:11;;;47332:795;;;;;:::o;882:112::-;947:7;973;:14;;;966:21;;882:112;;;:::o;49127:100::-;49194:26;49204:2;49208:7;49194:26;;;;;;;;;;;;:9;:26::i;:::-;49127:100;;:::o;57965:167::-;58078:9;58056:10;:19;58067:7;58056:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;58102:23;58117:7;58102:23;;;;;;:::i;:::-;;;;;;;;57965:167;;:::o;1000:123::-;1105:1;1087:7;:14;;;:19;;;;;;;;;;;1000:123;:::o;54085:312::-;54212:1;54192:22;;:8;:22;;;54188:91;;54259:8;54237:31;;;;;;;;;;;:::i;:::-;;;;;;;;54188:91;54326:8;54288:18;:25;54307:5;54288:25;;;;;;;;;;;;;;;:35;54314:8;54288:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;54371:8;54349:41;;54364:5;54349:41;;;54381:8;54349:41;;;;;;:::i;:::-;;;;;;;;54085:312;;;:::o;50507:460::-;50606:1;50592:16;;:2;:16;;;50588:87;;50661:1;50631:33;;;;;;;;;;;:::i;:::-;;;;;;;;50588:87;50684:21;50708:32;50716:2;50720:7;50737:1;50708:7;:32::i;:::-;50684:56;;50779:1;50754:27;;:13;:27;;;50750:211;;50827:7;50804:31;;;;;;;;;;;:::i;:::-;;;;;;;;50750:211;50873:4;50856:21;;:13;:21;;;50852:109;;50921:4;50927:7;50936:13;50900:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;50852:109;50578:389;50507:460;;;:::o;55412:782::-;55545:1;55528:2;:14;;;:18;55524:664;;;55582:2;55566:36;;;55603:12;:10;:12::i;:::-;55617:4;55623:7;55632:4;55566:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;55562:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55892:1;55875:6;:13;:18;55871:293;;55946:2;55924:25;;;;;;;;;;;:::i;:::-;;;;;;;;55871:293;56116:6;56110:13;56101:6;56097:2;56093:15;56086:38;55562:616;55694:41;;;55684:51;;;:6;:51;;;;55680:130;;55788:2;55766:25;;;;;;;;;;;:::i;:::-;;;;;;;;55680:130;55638:186;55524:664;55412:782;;;;:::o;41668:92::-;41719:13;41744:9;;;;;;;;;;;;;;41668:92;:::o;41171:255::-;41235:13;41260:22;41274:7;41260:13;:22::i;:::-;;41293:21;41317:10;:8;:10::i;:::-;41293:34;;41368:1;41350:7;41344:21;:25;:75;;;;;;;;;;;;;;;;;41386:7;41395:18;:7;:16;:18::i;:::-;41372:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41344:75;41337:82;;;41171:255;;;:::o;32063:146::-;32139:4;32177:25;32162:40;;;:11;:40;;;;32155:47;;32063:146;;;:::o;44201:115::-;44267:7;44293;:16;44301:7;44293:16;;;;;;;;;;;;;;;;;;;;;44286:23;;44201:115;;;:::o;53214:662::-;53374:9;:31;;;;53403:1;53387:18;;:4;:18;;;;53374:31;53370:460;;;53421:13;53437:22;53451:7;53437:13;:22::i;:::-;53421:38;;53603:1;53587:18;;:4;:18;;;;:35;;;;;53618:4;53609:13;;:5;:13;;;;53587:35;:69;;;;;53627:29;53644:5;53651:4;53627:16;:29::i;:::-;53626:30;53587:69;53583:142;;;53705:4;53683:27;;;;;;;;;;;:::i;:::-;;;;;;;;53583:142;53743:9;53739:81;;;53797:7;53793:2;53777:28;;53786:5;53777:28;;;;;;;;;;;;53739:81;53407:423;53370:460;53867:2;53840:15;:24;53856:7;53840:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;53214:662;;;;:::o;45576:368::-;45688:38;45702:5;45709:7;45718;45688:13;:38::i;:::-;45683:255;;45763:1;45746:19;;:5;:19;;;45742:186;;45815:7;45792:31;;;;;;;;;;;:::i;:::-;;;;;;;;45742:186;45896:7;45905;45869:44;;;;;;;;;;;;:::i;:::-;;;;;;;;45683:255;45576:368;;;:::o;49448:182::-;49542:18;49548:2;49552:7;49542:5;:18::i;:::-;49570:53;49601:1;49605:2;49609:7;49618:4;49570:22;:53::i;:::-;49448:182;;;:::o;25025:698::-;25081:13;25130:14;25167:1;25147:17;25158:5;25147:10;:17::i;:::-;:21;25130:38;;25182:20;25216:6;25205:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25182:41;;25237:11;25363:6;25359:2;25355:15;25347:6;25343:28;25336:35;;25398:282;25405:4;25398:282;;;25429:5;;;;;;;;25568:10;25563:2;25556:5;25552:14;25547:32;25542:3;25534:46;25624:2;25615:11;;;;;;:::i;:::-;;;;;25657:1;25648:5;:10;25398:282;25644:21;25398:282;25700:6;25693:13;;;;;25025:698;;;:::o;44870:272::-;44973:4;45027:1;45008:21;;:7;:21;;;;:127;;;;;45055:7;45046:16;;:5;:16;;;:52;;;;45066:32;45083:5;45090:7;45066:16;:32::i;:::-;45046:52;:88;;;;45127:7;45102:32;;:21;45115:7;45102:12;:21::i;:::-;:32;;;45046:88;45008:127;44989:146;;44870:272;;;;;:::o;48449:327::-;48530:1;48516:16;;:2;:16;;;48512:87;;48585:1;48555:33;;;;;;;;;;;:::i;:::-;;;;;;;;48512:87;48608:21;48632:32;48640:2;48644:7;48661:1;48632:7;:32::i;:::-;48608:56;;48703:1;48678:27;;:13;:27;;;48674:96;;48756:1;48728:31;;;;;;;;;;;:::i;:::-;;;;;;;;48674:96;48502:274;48449:327;;:::o;21549:916::-;21602:7;21621:14;21638:1;21621:18;;21686:8;21677:5;:17;21673:103;;21723:8;21714:17;;;;;;:::i;:::-;;;;;21759:2;21749:12;;;;21673:103;21802:8;21793:5;:17;21789:103;;21839:8;21830:17;;;;;;:::i;:::-;;;;;21875:2;21865:12;;;;21789:103;21918:8;21909:5;:17;21905:103;;21955:8;21946:17;;;;;;:::i;:::-;;;;;21991:2;21981:12;;;;21905:103;22034:7;22025:5;:16;22021:100;;22070:7;22061:16;;;;;;:::i;:::-;;;;;22105:1;22095:11;;;;22021:100;22147:7;22138:5;:16;22134:100;;22183:7;22174:16;;;;;;:::i;:::-;;;;;22218:1;22208:11;;;;22134:100;22260:7;22251:5;:16;22247:100;;22296:7;22287:16;;;;;;:::i;:::-;;;;;22331:1;22321:11;;;;22247:100;22373:7;22364:5;:16;22360:66;;22410:1;22400:11;;;;22360:66;22452:6;22445:13;;;21549:916;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:118::-;5602:24;5620:5;5602:24;:::i;:::-;5597:3;5590:37;5515:118;;:::o;5639:332::-;5760:4;5798:2;5787:9;5783:18;5775:26;;5811:71;5879:1;5868:9;5864:17;5855:6;5811:71;:::i;:::-;5892:72;5960:2;5949:9;5945:18;5936:6;5892:72;:::i;:::-;5639:332;;;;;:::o;5977:474::-;6045:6;6053;6102:2;6090:9;6081:7;6077:23;6073:32;6070:119;;;6108:79;;:::i;:::-;6070:119;6228:1;6253:53;6298:7;6289:6;6278:9;6274:22;6253:53;:::i;:::-;6243:63;;6199:117;6355:2;6381:53;6426:7;6417:6;6406:9;6402:22;6381:53;:::i;:::-;6371:63;;6326:118;5977:474;;;;;:::o;6457:222::-;6550:4;6588:2;6577:9;6573:18;6565:26;;6601:71;6669:1;6658:9;6654:17;6645:6;6601:71;:::i;:::-;6457:222;;;;:::o;6685:117::-;6794:1;6791;6784:12;6808:117;6917:1;6914;6907:12;6931:180;6979:77;6976:1;6969:88;7076:4;7073:1;7066:15;7100:4;7097:1;7090:15;7117:281;7200:27;7222:4;7200:27;:::i;:::-;7192:6;7188:40;7330:6;7318:10;7315:22;7294:18;7282:10;7279:34;7276:62;7273:88;;;7341:18;;:::i;:::-;7273:88;7381:10;7377:2;7370:22;7160:238;7117:281;;:::o;7404:129::-;7438:6;7465:20;;:::i;:::-;7455:30;;7494:33;7522:4;7514:6;7494:33;:::i;:::-;7404:129;;;:::o;7539:308::-;7601:4;7691:18;7683:6;7680:30;7677:56;;;7713:18;;:::i;:::-;7677:56;7751:29;7773:6;7751:29;:::i;:::-;7743:37;;7835:4;7829;7825:15;7817:23;;7539:308;;;:::o;7853:146::-;7950:6;7945:3;7940;7927:30;7991:1;7982:6;7977:3;7973:16;7966:27;7853:146;;;:::o;8005:425::-;8083:5;8108:66;8124:49;8166:6;8124:49;:::i;:::-;8108:66;:::i;:::-;8099:75;;8197:6;8190:5;8183:21;8235:4;8228:5;8224:16;8273:3;8264:6;8259:3;8255:16;8252:25;8249:112;;;8280:79;;:::i;:::-;8249:112;8370:54;8417:6;8412:3;8407;8370:54;:::i;:::-;8089:341;8005:425;;;;;:::o;8450:340::-;8506:5;8555:3;8548:4;8540:6;8536:17;8532:27;8522:122;;8563:79;;:::i;:::-;8522:122;8680:6;8667:20;8705:79;8780:3;8772:6;8765:4;8757:6;8753:17;8705:79;:::i;:::-;8696:88;;8512:278;8450:340;;;;:::o;8796:509::-;8865:6;8914:2;8902:9;8893:7;8889:23;8885:32;8882:119;;;8920:79;;:::i;:::-;8882:119;9068:1;9057:9;9053:17;9040:31;9098:18;9090:6;9087:30;9084:117;;;9120:79;;:::i;:::-;9084:117;9225:63;9280:7;9271:6;9260:9;9256:22;9225:63;:::i;:::-;9215:73;;9011:287;8796:509;;;;:::o;9311:654::-;9389:6;9397;9446:2;9434:9;9425:7;9421:23;9417:32;9414:119;;;9452:79;;:::i;:::-;9414:119;9600:1;9589:9;9585:17;9572:31;9630:18;9622:6;9619:30;9616:117;;;9652:79;;:::i;:::-;9616:117;9757:63;9812:7;9803:6;9792:9;9788:22;9757:63;:::i;:::-;9747:73;;9543:287;9869:2;9895:53;9940:7;9931:6;9920:9;9916:22;9895:53;:::i;:::-;9885:63;;9840:118;9311:654;;;;;:::o;9971:329::-;10030:6;10079:2;10067:9;10058:7;10054:23;10050:32;10047:119;;;10085:79;;:::i;:::-;10047:119;10205:1;10230:53;10275:7;10266:6;10255:9;10251:22;10230:53;:::i;:::-;10220:63;;10176:117;9971:329;;;;:::o;10306:116::-;10376:21;10391:5;10376:21;:::i;:::-;10369:5;10366:32;10356:60;;10412:1;10409;10402:12;10356:60;10306:116;:::o;10428:133::-;10471:5;10509:6;10496:20;10487:29;;10525:30;10549:5;10525:30;:::i;:::-;10428:133;;;;:::o;10567:468::-;10632:6;10640;10689:2;10677:9;10668:7;10664:23;10660:32;10657:119;;;10695:79;;:::i;:::-;10657:119;10815:1;10840:53;10885:7;10876:6;10865:9;10861:22;10840:53;:::i;:::-;10830:63;;10786:117;10942:2;10968:50;11010:7;11001:6;10990:9;10986:22;10968:50;:::i;:::-;10958:60;;10913:115;10567:468;;;;;:::o;11041:307::-;11102:4;11192:18;11184:6;11181:30;11178:56;;;11214:18;;:::i;:::-;11178:56;11252:29;11274:6;11252:29;:::i;:::-;11244:37;;11336:4;11330;11326:15;11318:23;;11041:307;;;:::o;11354:423::-;11431:5;11456:65;11472:48;11513:6;11472:48;:::i;:::-;11456:65;:::i;:::-;11447:74;;11544:6;11537:5;11530:21;11582:4;11575:5;11571:16;11620:3;11611:6;11606:3;11602:16;11599:25;11596:112;;;11627:79;;:::i;:::-;11596:112;11717:54;11764:6;11759:3;11754;11717:54;:::i;:::-;11437:340;11354:423;;;;;:::o;11796:338::-;11851:5;11900:3;11893:4;11885:6;11881:17;11877:27;11867:122;;11908:79;;:::i;:::-;11867:122;12025:6;12012:20;12050:78;12124:3;12116:6;12109:4;12101:6;12097:17;12050:78;:::i;:::-;12041:87;;11857:277;11796:338;;;;:::o;12140:943::-;12235:6;12243;12251;12259;12308:3;12296:9;12287:7;12283:23;12279:33;12276:120;;;12315:79;;:::i;:::-;12276:120;12435:1;12460:53;12505:7;12496:6;12485:9;12481:22;12460:53;:::i;:::-;12450:63;;12406:117;12562:2;12588:53;12633:7;12624:6;12613:9;12609:22;12588:53;:::i;:::-;12578:63;;12533:118;12690:2;12716:53;12761:7;12752:6;12741:9;12737:22;12716:53;:::i;:::-;12706:63;;12661:118;12846:2;12835:9;12831:18;12818:32;12877:18;12869:6;12866:30;12863:117;;;12899:79;;:::i;:::-;12863:117;13004:62;13058:7;13049:6;13038:9;13034:22;13004:62;:::i;:::-;12994:72;;12789:287;12140:943;;;;;;;:::o;13089:474::-;13157:6;13165;13214:2;13202:9;13193:7;13189:23;13185:32;13182:119;;;13220:79;;:::i;:::-;13182:119;13340:1;13365:53;13410:7;13401:6;13390:9;13386:22;13365:53;:::i;:::-;13355:63;;13311:117;13467:2;13493:53;13538:7;13529:6;13518:9;13514:22;13493:53;:::i;:::-;13483:63;;13438:118;13089:474;;;;;:::o;13569:180::-;13617:77;13614:1;13607:88;13714:4;13711:1;13704:15;13738:4;13735:1;13728:15;13755:320;13799:6;13836:1;13830:4;13826:12;13816:22;;13883:1;13877:4;13873:12;13904:18;13894:81;;13960:4;13952:6;13948:17;13938:27;;13894:81;14022:2;14014:6;14011:14;13991:18;13988:38;13985:84;;14041:18;;:::i;:::-;13985:84;13806:269;13755:320;;;:::o;14081:442::-;14230:4;14268:2;14257:9;14253:18;14245:26;;14281:71;14349:1;14338:9;14334:17;14325:6;14281:71;:::i;:::-;14362:72;14430:2;14419:9;14415:18;14406:6;14362:72;:::i;:::-;14444;14512:2;14501:9;14497:18;14488:6;14444:72;:::i;:::-;14081:442;;;;;;:::o;14529:180::-;14577:77;14574:1;14567:88;14674:4;14671:1;14664:15;14698:4;14695:1;14688:15;14715:410;14755:7;14778:20;14796:1;14778:20;:::i;:::-;14773:25;;14812:20;14830:1;14812:20;:::i;:::-;14807:25;;14867:1;14864;14860:9;14889:30;14907:11;14889:30;:::i;:::-;14878:41;;15068:1;15059:7;15055:15;15052:1;15049:22;15029:1;15022:9;15002:83;14979:139;;15098:18;;:::i;:::-;14979:139;14763:362;14715:410;;;;:::o;15131:180::-;15179:77;15176:1;15169:88;15276:4;15273:1;15266:15;15300:4;15297:1;15290:15;15317:185;15357:1;15374:20;15392:1;15374:20;:::i;:::-;15369:25;;15408:20;15426:1;15408:20;:::i;:::-;15403:25;;15447:1;15437:35;;15452:18;;:::i;:::-;15437:35;15494:1;15491;15487:9;15482:14;;15317:185;;;;:::o;15508:141::-;15557:4;15580:3;15572:11;;15603:3;15600:1;15593:14;15637:4;15634:1;15624:18;15616:26;;15508:141;;;:::o;15655:93::-;15692:6;15739:2;15734;15727:5;15723:14;15719:23;15709:33;;15655:93;;;:::o;15754:107::-;15798:8;15848:5;15842:4;15838:16;15817:37;;15754:107;;;;:::o;15867:393::-;15936:6;15986:1;15974:10;15970:18;16009:97;16039:66;16028:9;16009:97;:::i;:::-;16127:39;16157:8;16146:9;16127:39;:::i;:::-;16115:51;;16199:4;16195:9;16188:5;16184:21;16175:30;;16248:4;16238:8;16234:19;16227:5;16224:30;16214:40;;15943:317;;15867:393;;;;;:::o;16266:60::-;16294:3;16315:5;16308:12;;16266:60;;;:::o;16332:142::-;16382:9;16415:53;16433:34;16442:24;16460:5;16442:24;:::i;:::-;16433:34;:::i;:::-;16415:53;:::i;:::-;16402:66;;16332:142;;;:::o;16480:75::-;16523:3;16544:5;16537:12;;16480:75;;;:::o;16561:269::-;16671:39;16702:7;16671:39;:::i;:::-;16732:91;16781:41;16805:16;16781:41;:::i;:::-;16773:6;16766:4;16760:11;16732:91;:::i;:::-;16726:4;16719:105;16637:193;16561:269;;;:::o;16836:73::-;16881:3;16836:73;:::o;16915:189::-;16992:32;;:::i;:::-;17033:65;17091:6;17083;17077:4;17033:65;:::i;:::-;16968:136;16915:189;;:::o;17110:186::-;17170:120;17187:3;17180:5;17177:14;17170:120;;;17241:39;17278:1;17271:5;17241:39;:::i;:::-;17214:1;17207:5;17203:13;17194:22;;17170:120;;;17110:186;;:::o;17302:543::-;17403:2;17398:3;17395:11;17392:446;;;17437:38;17469:5;17437:38;:::i;:::-;17521:29;17539:10;17521:29;:::i;:::-;17511:8;17507:44;17704:2;17692:10;17689:18;17686:49;;;17725:8;17710:23;;17686:49;17748:80;17804:22;17822:3;17804:22;:::i;:::-;17794:8;17790:37;17777:11;17748:80;:::i;:::-;17407:431;;17392:446;17302:543;;;:::o;17851:117::-;17905:8;17955:5;17949:4;17945:16;17924:37;;17851:117;;;;:::o;17974:169::-;18018:6;18051:51;18099:1;18095:6;18087:5;18084:1;18080:13;18051:51;:::i;:::-;18047:56;18132:4;18126;18122:15;18112:25;;18025:118;17974:169;;;;:::o;18148:295::-;18224:4;18370:29;18395:3;18389:4;18370:29;:::i;:::-;18362:37;;18432:3;18429:1;18425:11;18419:4;18416:21;18408:29;;18148:295;;;;:::o;18448:1395::-;18565:37;18598:3;18565:37;:::i;:::-;18667:18;18659:6;18656:30;18653:56;;;18689:18;;:::i;:::-;18653:56;18733:38;18765:4;18759:11;18733:38;:::i;:::-;18818:67;18878:6;18870;18864:4;18818:67;:::i;:::-;18912:1;18936:4;18923:17;;18968:2;18960:6;18957:14;18985:1;18980:618;;;;19642:1;19659:6;19656:77;;;19708:9;19703:3;19699:19;19693:26;19684:35;;19656:77;19759:67;19819:6;19812:5;19759:67;:::i;:::-;19753:4;19746:81;19615:222;18950:887;;18980:618;19032:4;19028:9;19020:6;19016:22;19066:37;19098:4;19066:37;:::i;:::-;19125:1;19139:208;19153:7;19150:1;19147:14;19139:208;;;19232:9;19227:3;19223:19;19217:26;19209:6;19202:42;19283:1;19275:6;19271:14;19261:24;;19330:2;19319:9;19315:18;19302:31;;19176:4;19173:1;19169:12;19164:17;;19139:208;;;19375:6;19366:7;19363:19;19360:179;;;19433:9;19428:3;19424:19;19418:26;19476:48;19518:4;19510:6;19506:17;19495:9;19476:48;:::i;:::-;19468:6;19461:64;19383:156;19360:179;19585:1;19581;19573:6;19569:14;19565:22;19559:4;19552:36;18987:611;;;18950:887;;18540:1303;;;18448:1395;;:::o;19849:170::-;19989:22;19985:1;19977:6;19973:14;19966:46;19849:170;:::o;20025:366::-;20167:3;20188:67;20252:2;20247:3;20188:67;:::i;:::-;20181:74;;20264:93;20353:3;20264:93;:::i;:::-;20382:2;20377:3;20373:12;20366:19;;20025:366;;;:::o;20397:419::-;20563:4;20601:2;20590:9;20586:18;20578:26;;20650:9;20644:4;20640:20;20636:1;20625:9;20621:17;20614:47;20678:131;20804:4;20678:131;:::i;:::-;20670:139;;20397:419;;;:::o;20822:173::-;20962:25;20958:1;20950:6;20946:14;20939:49;20822:173;:::o;21001:366::-;21143:3;21164:67;21228:2;21223:3;21164:67;:::i;:::-;21157:74;;21240:93;21329:3;21240:93;:::i;:::-;21358:2;21353:3;21349:12;21342:19;;21001:366;;;:::o;21373:419::-;21539:4;21577:2;21566:9;21562:18;21554:26;;21626:9;21620:4;21616:20;21612:1;21601:9;21597:17;21590:47;21654:131;21780:4;21654:131;:::i;:::-;21646:139;;21373:419;;;:::o;21798:167::-;21938:19;21934:1;21926:6;21922:14;21915:43;21798:167;:::o;21971:366::-;22113:3;22134:67;22198:2;22193:3;22134:67;:::i;:::-;22127:74;;22210:93;22299:3;22210:93;:::i;:::-;22328:2;22323:3;22319:12;22312:19;;21971:366;;;:::o;22343:419::-;22509:4;22547:2;22536:9;22532:18;22524:26;;22596:9;22590:4;22586:20;22582:1;22571:9;22567:17;22560:47;22624:131;22750:4;22624:131;:::i;:::-;22616:139;;22343:419;;;:::o;22768:194::-;22808:4;22828:20;22846:1;22828:20;:::i;:::-;22823:25;;22862:20;22880:1;22862:20;:::i;:::-;22857:25;;22906:1;22903;22899:9;22891:17;;22930:1;22924:4;22921:11;22918:37;;;22935:18;;:::i;:::-;22918:37;22768:194;;;;:::o;22968:176::-;23108:28;23104:1;23096:6;23092:14;23085:52;22968:176;:::o;23150:366::-;23292:3;23313:67;23377:2;23372:3;23313:67;:::i;:::-;23306:74;;23389:93;23478:3;23389:93;:::i;:::-;23507:2;23502:3;23498:12;23491:19;;23150:366;;;:::o;23522:419::-;23688:4;23726:2;23715:9;23711:18;23703:26;;23775:9;23769:4;23765:20;23761:1;23750:9;23746:17;23739:47;23803:131;23929:4;23803:131;:::i;:::-;23795:139;;23522:419;;;:::o;23947:148::-;24049:11;24086:3;24071:18;;23947:148;;;;:::o;24101:390::-;24207:3;24235:39;24268:5;24235:39;:::i;:::-;24290:89;24372:6;24367:3;24290:89;:::i;:::-;24283:96;;24388:65;24446:6;24441:3;24434:4;24427:5;24423:16;24388:65;:::i;:::-;24478:6;24473:3;24469:16;24462:23;;24211:280;24101:390;;;;:::o;24497:435::-;24677:3;24699:95;24790:3;24781:6;24699:95;:::i;:::-;24692:102;;24811:95;24902:3;24893:6;24811:95;:::i;:::-;24804:102;;24923:3;24916:10;;24497:435;;;;;:::o;24938:98::-;24989:6;25023:5;25017:12;25007:22;;24938:98;;;:::o;25042:168::-;25125:11;25159:6;25154:3;25147:19;25199:4;25194:3;25190:14;25175:29;;25042:168;;;;:::o;25216:373::-;25302:3;25330:38;25362:5;25330:38;:::i;:::-;25384:70;25447:6;25442:3;25384:70;:::i;:::-;25377:77;;25463:65;25521:6;25516:3;25509:4;25502:5;25498:16;25463:65;:::i;:::-;25553:29;25575:6;25553:29;:::i;:::-;25548:3;25544:39;25537:46;;25306:283;25216:373;;;;:::o;25595:640::-;25790:4;25828:3;25817:9;25813:19;25805:27;;25842:71;25910:1;25899:9;25895:17;25886:6;25842:71;:::i;:::-;25923:72;25991:2;25980:9;25976:18;25967:6;25923:72;:::i;:::-;26005;26073:2;26062:9;26058:18;26049:6;26005:72;:::i;:::-;26124:9;26118:4;26114:20;26109:2;26098:9;26094:18;26087:48;26152:76;26223:4;26214:6;26152:76;:::i;:::-;26144:84;;25595:640;;;;;;;:::o;26241:141::-;26297:5;26328:6;26322:13;26313:22;;26344:32;26370:5;26344:32;:::i;:::-;26241:141;;;;:::o;26388:349::-;26457:6;26506:2;26494:9;26485:7;26481:23;26477:32;26474:119;;;26512:79;;:::i;:::-;26474:119;26632:1;26657:63;26712:7;26703:6;26692:9;26688:22;26657:63;:::i;:::-;26647:73;;26603:127;26388:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2539800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BuyNFT(uint256)": "infinite",
								"KnowPrice(uint256)": "infinite",
								"SellNft(uint256)": "infinite",
								"SoldNft(uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"baseTokenURI()": "infinite",
								"getApproved(uint256)": "infinite",
								"getBalance(address)": "3357",
								"getTotalToken()": "2547",
								"isApprovedForAll(address,address)": "infinite",
								"isSellNft(uint256)": "infinite",
								"mintNFT(string,uint256)": "infinite",
								"name()": "infinite",
								"nfts(uint256)": "infinite",
								"ownerOf(uint256)": "infinite",
								"royaltyInfo(uint256,uint256)": "infinite",
								"royaltyPercentage()": "2492",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58306,
									"end": 61305,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58524,
									"end": 58526,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 58489,
									"end": 58526,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 58489,
									"end": 58526,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58827,
									"end": 58914,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "4D79204E66740000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "PUSH",
									"source": 0,
									"value": "4D4E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39949,
									"end": 39954,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39941,
									"end": 39946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39941,
									"end": 39954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39941,
									"end": 39954,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39974,
									"end": 39981,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39964,
									"end": 39971,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39964,
									"end": 39981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39964,
									"end": 39981,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39875,
									"end": 39988,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58897,
									"end": 58907,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58895,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 58882,
									"end": 58895,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58882,
									"end": 58907,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58306,
									"end": 61305,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7029830c710f6053b68b0206460caa2aae169741b9705f4dc0967f6cbd5b1a964736f6c63430008140033",
									".code": [
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "A90D14E2"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "D547CFB7"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "D547CFB7"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "F2A413B5"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "F8B2CB4F"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "A90D14E2"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "7D7F1F3E"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "8A71BB2D"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "A37365E0"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "2A55205A"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "55F804B3"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "55F804B3"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "5A51A885"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "5AFA3A72"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "2A55205A"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "3D0673D4"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "265AA621"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58306,
											"end": 61305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 56980,
											"end": 57187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 56980,
											"end": 57187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 56980,
											"end": 57187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 40859,
											"end": 40948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 40859,
											"end": 40948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41991,
											"end": 42145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41991,
											"end": 42145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41991,
											"end": 42145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41817,
											"end": 41930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 41817,
											"end": 41930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42637,
											"end": 43215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 42637,
											"end": 43215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 58785,
											"end": 58820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 58785,
											"end": 58820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 58785,
											"end": 58820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 61024,
											"end": 61303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 61024,
											"end": 61303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 61024,
											"end": 61303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 60100,
											"end": 60199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 60100,
											"end": 60199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43281,
											"end": 43413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43281,
											"end": 43413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 58921,
											"end": 59028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 58921,
											"end": 59028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 59843,
											"end": 59983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 59843,
											"end": 59983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 59843,
											"end": 59983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 59034,
											"end": 59364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 59034,
											"end": 59364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40679,
											"end": 40797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 40679,
											"end": 40797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40679,
											"end": 40797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40414,
											"end": 40622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 40414,
											"end": 40622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40414,
											"end": 40622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 59543,
											"end": 59688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59543,
											"end": 59688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 59543,
											"end": 59688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 58489,
											"end": 58526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 58489,
											"end": 58526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 41012,
											"end": 41105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 41012,
											"end": 41105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 42212,
											"end": 42356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 42212,
											"end": 42356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 60205,
											"end": 61018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 60205,
											"end": 61018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 59370,
											"end": 59537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 59370,
											"end": 59537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 43479,
											"end": 43687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 43479,
											"end": 43687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 57253,
											"end": 57846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 57253,
											"end": 57846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 57253,
											"end": 57846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 58457,
											"end": 58483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 58457,
											"end": 58483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 42422,
											"end": 42575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 42422,
											"end": 42575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42422,
											"end": 42575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 59694,
											"end": 59837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 59694,
											"end": 59837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 59694,
											"end": 59837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 59989,
											"end": 60094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 59989,
											"end": 60094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 59989,
											"end": 60094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57082,
											"end": 57086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56803,
											"end": 56813,
											"name": "PUSH",
											"source": 0,
											"value": "49064906"
										},
										{
											"begin": 56796,
											"end": 56814,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56796,
											"end": 56814,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57105,
											"end": 57140,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57105,
											"end": 57140,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 57105,
											"end": 57180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57144,
											"end": 57180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57168,
											"end": 57179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57144,
											"end": 57167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 57144,
											"end": 57180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57144,
											"end": 57180,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57144,
											"end": 57180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57105,
											"end": 57180,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 57105,
											"end": 57180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57098,
											"end": 57180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57098,
											"end": 57180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56980,
											"end": 57187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40904,
											"end": 40917,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40936,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 40929,
											"end": 40941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 40929,
											"end": 40941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40929,
											"end": 40941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40859,
											"end": 40948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42058,
											"end": 42065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42077,
											"end": 42099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 42091,
											"end": 42098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42077,
											"end": 42090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 42077,
											"end": 42099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42077,
											"end": 42099,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 42077,
											"end": 42099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42077,
											"end": 42099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42117,
											"end": 42138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 42130,
											"end": 42137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42117,
											"end": 42129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 42117,
											"end": 42138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42117,
											"end": 42138,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 42117,
											"end": 42138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42110,
											"end": 42138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42110,
											"end": 42138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41991,
											"end": 42145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41888,
											"end": 41923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 41897,
											"end": 41899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41901,
											"end": 41908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41910,
											"end": 41922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 41910,
											"end": 41920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 41910,
											"end": 41922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41910,
											"end": 41922,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 41910,
											"end": 41922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41888,
											"end": 41896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 41888,
											"end": 41923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41888,
											"end": 41923,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 41888,
											"end": 41923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41817,
											"end": 41930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42745,
											"end": 42746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42731,
											"end": 42747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42731,
											"end": 42747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42731,
											"end": 42733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42731,
											"end": 42747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42731,
											"end": 42747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42731,
											"end": 42747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42727,
											"end": 42814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 42727,
											"end": 42814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 42770,
											"end": 42803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42770,
											"end": 42803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42727,
											"end": 42814,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 42727,
											"end": 42814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43032,
											"end": 43053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43056,
											"end": 43090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 43064,
											"end": 43066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43068,
											"end": 43075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43077,
											"end": 43089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 43077,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 43077,
											"end": 43089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43077,
											"end": 43089,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 43077,
											"end": 43089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43056,
											"end": 43063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 43056,
											"end": 43090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43056,
											"end": 43090,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 43056,
											"end": 43090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43032,
											"end": 43090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43032,
											"end": 43090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43121,
											"end": 43125,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43104,
											"end": 43125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43104,
											"end": 43125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43104,
											"end": 43117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43104,
											"end": 43125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43104,
											"end": 43125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43104,
											"end": 43125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43100,
											"end": 43209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 43100,
											"end": 43209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43169,
											"end": 43173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43175,
											"end": 43182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43184,
											"end": 43197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 43148,
											"end": 43198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43100,
											"end": 43209,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 43100,
											"end": 43209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42717,
											"end": 43215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42637,
											"end": 43215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61109,
											"end": 61125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61127,
											"end": 61148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61160,
											"end": 61177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61210,
											"end": 61213,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61189,
											"end": 61206,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61189,
											"end": 61206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61181,
											"end": 61186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 61181,
											"end": 61206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 61181,
											"end": 61206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61181,
											"end": 61206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61181,
											"end": 61206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 61181,
											"end": 61206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61181,
											"end": 61206,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 61181,
											"end": 61206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61180,
											"end": 61213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 61180,
											"end": 61213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61180,
											"end": 61213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61180,
											"end": 61213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 61180,
											"end": 61213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61180,
											"end": 61213,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 61180,
											"end": 61213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61160,
											"end": 61213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61160,
											"end": 61213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61231,
											"end": 61244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61246,
											"end": 61255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61223,
											"end": 61256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61223,
											"end": 61256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61223,
											"end": 61256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61223,
											"end": 61256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61223,
											"end": 61256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61024,
											"end": 61303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60145,
											"end": 60149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60167,
											"end": 60192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 60167,
											"end": 60182,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60167,
											"end": 60190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 60167,
											"end": 60192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60167,
											"end": 60192,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 60167,
											"end": 60192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60160,
											"end": 60192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60160,
											"end": 60192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60100,
											"end": 60199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 43384,
											"end": 43388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43390,
											"end": 43392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43394,
											"end": 43401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 43367,
											"end": 43406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 43367,
											"end": 43406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43281,
											"end": 43413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59006,
											"end": 59021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58991,
											"end": 59003,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 58991,
											"end": 59021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58991,
											"end": 59021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58921,
											"end": 59028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59899,
											"end": 59903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59916,
											"end": 59931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59938,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59939,
											"end": 59947,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59934,
											"end": 59948,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59965,
											"end": 59969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59965,
											"end": 59975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59965,
											"end": 59975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59965,
											"end": 59975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59958,
											"end": 59975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59958,
											"end": 59975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59958,
											"end": 59975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59843,
											"end": 59983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59104,
											"end": 59119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59122,
											"end": 59147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 59122,
											"end": 59137,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59122,
											"end": 59145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 59122,
											"end": 59147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59122,
											"end": 59147,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 59122,
											"end": 59147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59104,
											"end": 59147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59104,
											"end": 59147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59157,
											"end": 59187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 59167,
											"end": 59177,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59157,
											"end": 59166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 59157,
											"end": 59187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59157,
											"end": 59187,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 59157,
											"end": 59187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 59210,
											"end": 59217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 59197,
											"end": 59228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59197,
											"end": 59228,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 59197,
											"end": 59228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59258,
											"end": 59268,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59270,
											"end": 59275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59254,
											"end": 59276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59243,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59244,
											"end": 59251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59239,
											"end": 59252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59239,
											"end": 59276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59315,
											"end": 59320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59286,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59294,
											"end": 59304,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59286,
											"end": 59305,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59306,
											"end": 59313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59286,
											"end": 59320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59329,
											"end": 59356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 59329,
											"end": 59344,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59329,
											"end": 59354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 59329,
											"end": 59356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59329,
											"end": 59356,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 59329,
											"end": 59356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59094,
											"end": 59364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59034,
											"end": 59364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40742,
											"end": 40749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40768,
											"end": 40790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 40782,
											"end": 40789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40768,
											"end": 40781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 40768,
											"end": 40790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40768,
											"end": 40790,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 40768,
											"end": 40790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40761,
											"end": 40790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40761,
											"end": 40790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40679,
											"end": 40797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40477,
											"end": 40484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40517,
											"end": 40518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40500,
											"end": 40519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40500,
											"end": 40519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40500,
											"end": 40505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40500,
											"end": 40519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40500,
											"end": 40519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40500,
											"end": 40519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40496,
											"end": 40583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 40496,
											"end": 40583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40569,
											"end": 40570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40542,
											"end": 40572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40542,
											"end": 40572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40496,
											"end": 40583,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 40496,
											"end": 40583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40608,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40609,
											"end": 40614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40592,
											"end": 40615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40592,
											"end": 40615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40414,
											"end": 40622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59597,
											"end": 59601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59613,
											"end": 59624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59626,
											"end": 59643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 59634,
											"end": 59642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59626,
											"end": 59633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 59626,
											"end": 59643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59626,
											"end": 59643,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 59626,
											"end": 59643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59613,
											"end": 59643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59613,
											"end": 59643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59666,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59667,
											"end": 59670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59660,
											"end": 59671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59672,
											"end": 59680,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 59660,
											"end": 59681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59653,
											"end": 59681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59653,
											"end": 59681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59653,
											"end": 59681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59543,
											"end": 59688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58489,
											"end": 58526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41059,
											"end": 41072,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41091,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 41084,
											"end": 41098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 41084,
											"end": 41098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41084,
											"end": 41098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41012,
											"end": 41105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42297,
											"end": 42349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 42316,
											"end": 42328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 42316,
											"end": 42326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42316,
											"end": 42328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42316,
											"end": 42328,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 42316,
											"end": 42328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42330,
											"end": 42338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42340,
											"end": 42348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42297,
											"end": 42315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 42297,
											"end": 42349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42297,
											"end": 42349,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 42297,
											"end": 42349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42212,
											"end": 42356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60273,
											"end": 60291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60294,
											"end": 60310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 60302,
											"end": 60309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60294,
											"end": 60301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 60294,
											"end": 60310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60294,
											"end": 60310,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 60294,
											"end": 60310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60273,
											"end": 60310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60273,
											"end": 60310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60358,
											"end": 60362,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60328,
											"end": 60362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60334,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60335,
											"end": 60345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60328,
											"end": 60346,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60347,
											"end": 60354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 60328,
											"end": 60355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60328,
											"end": 60362,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 60320,
											"end": 60387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 60320,
											"end": 60387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60398,
											"end": 60411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60414,
											"end": 60424,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60398,
											"end": 60424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60398,
											"end": 60424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60434,
											"end": 60447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60450,
											"end": 60454,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60455,
											"end": 60462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60450,
											"end": 60463,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60450,
											"end": 60469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60450,
											"end": 60469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60434,
											"end": 60469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60434,
											"end": 60469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60487,
											"end": 60506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60487,
											"end": 60506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60487,
											"end": 60497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60487,
											"end": 60506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60487,
											"end": 60506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60487,
											"end": 60506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 60479,
											"end": 60534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 60479,
											"end": 60534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60565,
											"end": 60570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60552,
											"end": 60561,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60552,
											"end": 60570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 60544,
											"end": 60592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 60544,
											"end": 60592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60644,
											"end": 60681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 60654,
											"end": 60664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60666,
											"end": 60671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60680,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60644,
											"end": 60653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 60644,
											"end": 60681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60644,
											"end": 60681,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 60644,
											"end": 60681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60741,
											"end": 60758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60791,
											"end": 60794,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 60770,
											"end": 60787,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60770,
											"end": 60787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60762,
											"end": 60767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60762,
											"end": 60787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 60762,
											"end": 60787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60762,
											"end": 60787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60762,
											"end": 60787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 60762,
											"end": 60787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60762,
											"end": 60787,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 60762,
											"end": 60787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60761,
											"end": 60794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 60761,
											"end": 60794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60761,
											"end": 60794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60761,
											"end": 60794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 60761,
											"end": 60794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60761,
											"end": 60794,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 60761,
											"end": 60794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60741,
											"end": 60794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60741,
											"end": 60794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60835,
											"end": 60848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60827,
											"end": 60858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 60859,
											"end": 60868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60827,
											"end": 60869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60971,
											"end": 60981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 60991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60963,
											"end": 60991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 61000,
											"end": 61009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60992,
											"end": 60997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60992,
											"end": 61009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 60992,
											"end": 61009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60992,
											"end": 61009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60992,
											"end": 61009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 60992,
											"end": 61009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60992,
											"end": 61009,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 60992,
											"end": 61009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60963,
											"end": 61010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60254,
											"end": 61018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60254,
											"end": 61018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60254,
											"end": 61018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60254,
											"end": 61018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60205,
											"end": 61018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59441,
											"end": 59457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 59449,
											"end": 59456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59441,
											"end": 59448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 59441,
											"end": 59457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59441,
											"end": 59457,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 59441,
											"end": 59457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59427,
											"end": 59457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59427,
											"end": 59457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59427,
											"end": 59437,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59427,
											"end": 59457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59427,
											"end": 59457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59427,
											"end": 59457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 59419,
											"end": 59488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 59419,
											"end": 59488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59530,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59498,
											"end": 59504,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59505,
											"end": 59515,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59498,
											"end": 59516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59517,
											"end": 59524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59370,
											"end": 59537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43592,
											"end": 43623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 43605,
											"end": 43609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43611,
											"end": 43613,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43615,
											"end": 43622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43592,
											"end": 43604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 43592,
											"end": 43623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43592,
											"end": 43623,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 43592,
											"end": 43623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43633,
											"end": 43680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 43656,
											"end": 43660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43662,
											"end": 43664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43666,
											"end": 43673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43675,
											"end": 43679,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43633,
											"end": 43655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 43633,
											"end": 43680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43633,
											"end": 43680,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 43633,
											"end": 43680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43479,
											"end": 43687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57339,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57351,
											"end": 57373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 57365,
											"end": 57372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 57351,
											"end": 57373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57373,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 57351,
											"end": 57373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57410,
											"end": 57420,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57421,
											"end": 57428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57410,
											"end": 57429,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 57384,
											"end": 57429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 57384,
											"end": 57429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57384,
											"end": 57429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57439,
											"end": 57457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57460,
											"end": 57470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 57460,
											"end": 57468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 57460,
											"end": 57470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57470,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 57460,
											"end": 57470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57439,
											"end": 57470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57439,
											"end": 57470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57565,
											"end": 57566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57549,
											"end": 57553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57543,
											"end": 57561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57543,
											"end": 57566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57539,
											"end": 57609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 57539,
											"end": 57609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57589,
											"end": 57598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57582,
											"end": 57598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57582,
											"end": 57598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57582,
											"end": 57598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57582,
											"end": 57598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57582,
											"end": 57598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 57582,
											"end": 57598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57539,
											"end": 57609,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 57539,
											"end": 57609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57734,
											"end": 57735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57714,
											"end": 57723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57708,
											"end": 57731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57708,
											"end": 57735,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 57799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 57799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 57704,
											"end": 57799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57772,
											"end": 57776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57778,
											"end": 57787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 57758,
											"end": 57788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57758,
											"end": 57788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57751,
											"end": 57788,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57751,
											"end": 57788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57751,
											"end": 57788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57751,
											"end": 57788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57751,
											"end": 57788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 57751,
											"end": 57788,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 57799,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 57704,
											"end": 57799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57816,
											"end": 57839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 57831,
											"end": 57838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57816,
											"end": 57830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 57816,
											"end": 57839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57816,
											"end": 57839,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 57816,
											"end": 57839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57809,
											"end": 57839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57809,
											"end": 57839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57809,
											"end": 57839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57809,
											"end": 57839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57253,
											"end": 57846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 58457,
											"end": 58483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 58457,
											"end": 58483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58457,
											"end": 58483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42533,
											"end": 42551,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42552,
											"end": 42557,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42533,
											"end": 42558,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42559,
											"end": 42567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42533,
											"end": 42568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42526,
											"end": 42568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42526,
											"end": 42568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42422,
											"end": 42575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59749,
											"end": 59753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59765,
											"end": 59775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59778,
											"end": 59794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 59786,
											"end": 59793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59778,
											"end": 59785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 59778,
											"end": 59794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59778,
											"end": 59794,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 59778,
											"end": 59794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59765,
											"end": 59794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59765,
											"end": 59794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59817,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59818,
											"end": 59820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59811,
											"end": 59821,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59822,
											"end": 59829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 59811,
											"end": 59830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59694,
											"end": 59837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60043,
											"end": 60050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60076,
											"end": 60079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60076,
											"end": 60087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60076,
											"end": 60087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60076,
											"end": 60087,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 60069,
											"end": 60087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60069,
											"end": 60087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59989,
											"end": 60094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40055,
											"end": 40355,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 40055,
											"end": 40355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40157,
											"end": 40161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40207,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40192,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40192,
											"end": 40232,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40192,
											"end": 40232,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40232,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 40192,
											"end": 40296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40263,
											"end": 40296,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40248,
											"end": 40296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40248,
											"end": 40296,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40248,
											"end": 40296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40248,
											"end": 40259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40248,
											"end": 40296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40248,
											"end": 40296,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40248,
											"end": 40296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40248,
											"end": 40296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40296,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 40192,
											"end": 40296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 40192,
											"end": 40348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40312,
											"end": 40348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 40336,
											"end": 40347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40312,
											"end": 40335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 40312,
											"end": 40348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40312,
											"end": 40348,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 40312,
											"end": 40348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40192,
											"end": 40348,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 40192,
											"end": 40348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40173,
											"end": 40348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40173,
											"end": 40348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40055,
											"end": 40355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40055,
											"end": 40355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40055,
											"end": 40355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40055,
											"end": 40355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54632,
											"end": 54873,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 54632,
											"end": 54873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54695,
											"end": 54702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54714,
											"end": 54727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54730,
											"end": 54747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 54739,
											"end": 54746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54730,
											"end": 54738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 54730,
											"end": 54747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54730,
											"end": 54747,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 54730,
											"end": 54747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54714,
											"end": 54747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54714,
											"end": 54747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54778,
											"end": 54779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54761,
											"end": 54780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54761,
											"end": 54780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54761,
											"end": 54766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54761,
											"end": 54780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54761,
											"end": 54780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54761,
											"end": 54780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 54757,
											"end": 54845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54826,
											"end": 54833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 54803,
											"end": 54834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54803,
											"end": 54834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54757,
											"end": 54845,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 54757,
											"end": 54845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54861,
											"end": 54866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54854,
											"end": 54866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54854,
											"end": 54866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54854,
											"end": 54866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54632,
											"end": 54873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54632,
											"end": 54873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54632,
											"end": 54873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54632,
											"end": 54873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44432,
											"end": 44559,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 44432,
											"end": 44559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44502,
											"end": 44509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44528,
											"end": 44543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44544,
											"end": 44551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44528,
											"end": 44552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44521,
											"end": 44552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44521,
											"end": 44552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44432,
											"end": 44559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44432,
											"end": 44559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44432,
											"end": 44559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44432,
											"end": 44559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28165,
											"end": 28261,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 28165,
											"end": 28261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28218,
											"end": 28225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28244,
											"end": 28254,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28237,
											"end": 28254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28237,
											"end": 28254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28165,
											"end": 28261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28165,
											"end": 28261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 53032,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 52912,
											"end": 53032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52992,
											"end": 53025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53001,
											"end": 53003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53005,
											"end": 53012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53014,
											"end": 53018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53020,
											"end": 53024,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52992,
											"end": 53000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 52992,
											"end": 53025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52992,
											"end": 53025,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 52992,
											"end": 53025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 53032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 53032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 53032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 53032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 48127,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 47332,
											"end": 48127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47418,
											"end": 47425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47437,
											"end": 47449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47452,
											"end": 47469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47461,
											"end": 47468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47452,
											"end": 47460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 47452,
											"end": 47469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47452,
											"end": 47469,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 47452,
											"end": 47469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47437,
											"end": 47469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47437,
											"end": 47469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47545,
											"end": 47546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47529,
											"end": 47547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47529,
											"end": 47547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47529,
											"end": 47533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47529,
											"end": 47547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47529,
											"end": 47547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47529,
											"end": 47547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47525,
											"end": 47611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 47525,
											"end": 47611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47563,
											"end": 47600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 47580,
											"end": 47584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47586,
											"end": 47590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47592,
											"end": 47599,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47563,
											"end": 47579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 47563,
											"end": 47600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47563,
											"end": 47600,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 47563,
											"end": 47600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47525,
											"end": 47611,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 47525,
											"end": 47611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47671,
											"end": 47672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47655,
											"end": 47673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47655,
											"end": 47673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47655,
											"end": 47659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47655,
											"end": 47673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47655,
											"end": 47673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47655,
											"end": 47673,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47651,
											"end": 47907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 47651,
											"end": 47907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47771,
											"end": 47819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 47788,
											"end": 47789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47792,
											"end": 47799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47809,
											"end": 47810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47813,
											"end": 47818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47771,
											"end": 47779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 47771,
											"end": 47819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47771,
											"end": 47819,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 47771,
											"end": 47819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47881,
											"end": 47882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47862,
											"end": 47871,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47872,
											"end": 47876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47862,
											"end": 47882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47651,
											"end": 47907,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 47651,
											"end": 47907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47935,
											"end": 47936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47921,
											"end": 47937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47921,
											"end": 47937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47921,
											"end": 47923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47921,
											"end": 47937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47921,
											"end": 47937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47921,
											"end": 47937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47917,
											"end": 48024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 47917,
											"end": 48024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 47999,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47981,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47991,
											"end": 47993,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47981,
											"end": 47999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47917,
											"end": 48024,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 47917,
											"end": 48024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48053,
											"end": 48055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48041,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48042,
											"end": 48049,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48034,
											"end": 48055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48090,
											"end": 48097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48086,
											"end": 48088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48080,
											"end": 48084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48071,
											"end": 48098,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 48116,
											"end": 48120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48109,
											"end": 48120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48109,
											"end": 48120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48109,
											"end": 48120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 48127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 48127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 48127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 48127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 48127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 48127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 882,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 947,
											"end": 954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 973,
											"end": 987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 882,
											"end": 994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49127,
											"end": 49227,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 49127,
											"end": 49227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 49204,
											"end": 49206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49208,
											"end": 49215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 49194,
											"end": 49220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 49194,
											"end": 49220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49127,
											"end": 49227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49127,
											"end": 49227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49127,
											"end": 49227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57965,
											"end": 58132,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 57965,
											"end": 58132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58078,
											"end": 58087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58066,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58067,
											"end": 58074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58056,
											"end": 58075,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 58056,
											"end": 58087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 58117,
											"end": 58124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 58102,
											"end": 58125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58102,
											"end": 58125,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 57965,
											"end": 58132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57965,
											"end": 58132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57965,
											"end": 58132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1000,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54397,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 54085,
											"end": 54397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54212,
											"end": 54213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54192,
											"end": 54214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54192,
											"end": 54214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54192,
											"end": 54200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54192,
											"end": 54214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54192,
											"end": 54214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54192,
											"end": 54214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54188,
											"end": 54279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 54188,
											"end": 54279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54237,
											"end": 54268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54237,
											"end": 54268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54188,
											"end": 54279,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 54188,
											"end": 54279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54326,
											"end": 54334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54306,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54307,
											"end": 54312,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54288,
											"end": 54313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54314,
											"end": 54322,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54288,
											"end": 54334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54371,
											"end": 54379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54364,
											"end": 54369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 54381,
											"end": 54389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 54349,
											"end": 54390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50967,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 50507,
											"end": 50967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50606,
											"end": 50607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50592,
											"end": 50608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50592,
											"end": 50608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50592,
											"end": 50594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50592,
											"end": 50608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50592,
											"end": 50608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50592,
											"end": 50608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50588,
											"end": 50675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 50588,
											"end": 50675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50661,
											"end": 50662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 50631,
											"end": 50664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50631,
											"end": 50664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50588,
											"end": 50675,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 50588,
											"end": 50675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50684,
											"end": 50705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50708,
											"end": 50740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 50716,
											"end": 50718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50720,
											"end": 50727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50737,
											"end": 50738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50708,
											"end": 50715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 50708,
											"end": 50740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50708,
											"end": 50740,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 50708,
											"end": 50740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50684,
											"end": 50740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50684,
											"end": 50740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50779,
											"end": 50780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50754,
											"end": 50781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50754,
											"end": 50781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50754,
											"end": 50767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50754,
											"end": 50781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50754,
											"end": 50781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50754,
											"end": 50781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50750,
											"end": 50961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 50750,
											"end": 50961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50827,
											"end": 50834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 50804,
											"end": 50835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50804,
											"end": 50835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50750,
											"end": 50961,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 50750,
											"end": 50961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50873,
											"end": 50877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50856,
											"end": 50877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50856,
											"end": 50877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50852,
											"end": 50961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 50852,
											"end": 50961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50921,
											"end": 50925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50927,
											"end": 50934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50936,
											"end": 50949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 50900,
											"end": 50950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50900,
											"end": 50950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50852,
											"end": 50961,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 50852,
											"end": 50961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50578,
											"end": 50967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50507,
											"end": 50967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55412,
											"end": 56194,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 55412,
											"end": 56194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55545,
											"end": 55546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55528,
											"end": 55530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55528,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55528,
											"end": 55542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55528,
											"end": 55542,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 55528,
											"end": 55546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55524,
											"end": 56188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55524,
											"end": 56188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 55524,
											"end": 56188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55582,
											"end": 55584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55566,
											"end": 55602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55602,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 55603,
											"end": 55615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 55603,
											"end": 55613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 55603,
											"end": 55615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55603,
											"end": 55615,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 55603,
											"end": 55615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55617,
											"end": 55621,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55623,
											"end": 55630,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55632,
											"end": 55636,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 55566,
											"end": 55637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 55566,
											"end": 55637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 55566,
											"end": 55637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55892,
											"end": 55893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55875,
											"end": 55881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55875,
											"end": 55888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55875,
											"end": 55893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55871,
											"end": 56164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 55871,
											"end": 56164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55946,
											"end": 55948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 55924,
											"end": 55949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55924,
											"end": 55949,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55871,
											"end": 56164,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 55871,
											"end": 56164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56116,
											"end": 56122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56101,
											"end": 56107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56097,
											"end": 56099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56093,
											"end": 56108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56086,
											"end": 56124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 55562,
											"end": 56178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55694,
											"end": 55735,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 55694,
											"end": 55735,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55694,
											"end": 55735,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55684,
											"end": 55735,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55684,
											"end": 55735,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55735,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55680,
											"end": 55810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 55680,
											"end": 55810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55788,
											"end": 55790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 55766,
											"end": 55791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55766,
											"end": 55791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55680,
											"end": 55810,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 55680,
											"end": 55810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55638,
											"end": 55824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55524,
											"end": 56188,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 55524,
											"end": 56188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55412,
											"end": 56194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55412,
											"end": 56194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55412,
											"end": 56194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55412,
											"end": 56194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55412,
											"end": 56194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41668,
											"end": 41760,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41668,
											"end": 41760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41719,
											"end": 41732,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41744,
											"end": 41753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41668,
											"end": 41760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41668,
											"end": 41760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41426,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 41171,
											"end": 41426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41235,
											"end": 41248,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41260,
											"end": 41282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 41274,
											"end": 41281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41260,
											"end": 41273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 41260,
											"end": 41282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41260,
											"end": 41282,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 41260,
											"end": 41282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41260,
											"end": 41282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41293,
											"end": 41314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41317,
											"end": 41327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 41317,
											"end": 41325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41317,
											"end": 41327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41317,
											"end": 41327,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 41317,
											"end": 41327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41293,
											"end": 41327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41293,
											"end": 41327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41368,
											"end": 41369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41350,
											"end": 41357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41369,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41386,
											"end": 41393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41395,
											"end": 41413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 41395,
											"end": 41402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41395,
											"end": 41411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 41395,
											"end": 41413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41395,
											"end": 41413,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 41395,
											"end": 41413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 41372,
											"end": 41414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41372,
											"end": 41414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 41344,
											"end": 41419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32063,
											"end": 32209,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 32063,
											"end": 32209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32139,
											"end": 32143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32177,
											"end": 32202,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32162,
											"end": 32202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32162,
											"end": 32202,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32162,
											"end": 32202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32162,
											"end": 32173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32162,
											"end": 32202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32162,
											"end": 32202,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32162,
											"end": 32202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32162,
											"end": 32202,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32155,
											"end": 32202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32155,
											"end": 32202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32063,
											"end": 32209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32063,
											"end": 32209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32063,
											"end": 32209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32063,
											"end": 32209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44201,
											"end": 44316,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 44201,
											"end": 44316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44267,
											"end": 44274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44293,
											"end": 44300,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44301,
											"end": 44308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44293,
											"end": 44309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44286,
											"end": 44309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44286,
											"end": 44309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44201,
											"end": 44316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44201,
											"end": 44316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44201,
											"end": 44316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44201,
											"end": 44316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53876,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 53214,
											"end": 53876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53374,
											"end": 53383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53374,
											"end": 53405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53374,
											"end": 53405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 53374,
											"end": 53405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53374,
											"end": 53405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53403,
											"end": 53404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53387,
											"end": 53405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53387,
											"end": 53405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53387,
											"end": 53391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53387,
											"end": 53405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53387,
											"end": 53405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53387,
											"end": 53405,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53387,
											"end": 53405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53374,
											"end": 53405,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 53374,
											"end": 53405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53370,
											"end": 53830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53370,
											"end": 53830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 53370,
											"end": 53830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53421,
											"end": 53434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53437,
											"end": 53459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 53451,
											"end": 53458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53437,
											"end": 53450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 53437,
											"end": 53459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53437,
											"end": 53459,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 53437,
											"end": 53459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53421,
											"end": 53459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53421,
											"end": 53459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53603,
											"end": 53604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53587,
											"end": 53605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53587,
											"end": 53605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53591,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53587,
											"end": 53605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53605,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 53587,
											"end": 53622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53618,
											"end": 53622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53609,
											"end": 53622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53622,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 53587,
											"end": 53622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 53587,
											"end": 53656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53627,
											"end": 53656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 53644,
											"end": 53649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53651,
											"end": 53655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53627,
											"end": 53643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 53627,
											"end": 53656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53627,
											"end": 53656,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 53627,
											"end": 53656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53626,
											"end": 53656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53587,
											"end": 53656,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 53587,
											"end": 53656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53583,
											"end": 53725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53583,
											"end": 53725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 53583,
											"end": 53725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53705,
											"end": 53709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 53683,
											"end": 53710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53683,
											"end": 53710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53583,
											"end": 53725,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 53583,
											"end": 53725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53743,
											"end": 53752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53739,
											"end": 53820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53739,
											"end": 53820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 53739,
											"end": 53820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53797,
											"end": 53804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53793,
											"end": 53795,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53786,
											"end": 53791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53777,
											"end": 53805,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 53739,
											"end": 53820,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 53739,
											"end": 53820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53407,
											"end": 53830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53370,
											"end": 53830,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 53370,
											"end": 53830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53867,
											"end": 53869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53856,
											"end": 53863,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53840,
											"end": 53869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53214,
											"end": 53876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45576,
											"end": 45944,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 45576,
											"end": 45944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45688,
											"end": 45726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 45702,
											"end": 45707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45709,
											"end": 45716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45718,
											"end": 45725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45688,
											"end": 45701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 45688,
											"end": 45726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45688,
											"end": 45726,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 45688,
											"end": 45726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45683,
											"end": 45938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 45683,
											"end": 45938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45746,
											"end": 45765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45746,
											"end": 45765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45746,
											"end": 45751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45746,
											"end": 45765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45746,
											"end": 45765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45746,
											"end": 45765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45742,
											"end": 45928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 45742,
											"end": 45928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45815,
											"end": 45822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 45792,
											"end": 45823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45742,
											"end": 45928,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 45742,
											"end": 45928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45896,
											"end": 45903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45905,
											"end": 45912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 45869,
											"end": 45913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45869,
											"end": 45913,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45683,
											"end": 45938,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 45683,
											"end": 45938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45576,
											"end": 45944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45576,
											"end": 45944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45576,
											"end": 45944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45576,
											"end": 45944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49630,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 49448,
											"end": 49630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49542,
											"end": 49560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 49548,
											"end": 49550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49552,
											"end": 49559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49542,
											"end": 49547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 49542,
											"end": 49560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49542,
											"end": 49560,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 49542,
											"end": 49560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49570,
											"end": 49623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 49601,
											"end": 49602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49605,
											"end": 49607,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49609,
											"end": 49616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49618,
											"end": 49622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49570,
											"end": 49592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 49570,
											"end": 49623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49570,
											"end": 49623,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 49570,
											"end": 49623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49448,
											"end": 49630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25025,
											"end": 25723,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 25025,
											"end": 25723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25081,
											"end": 25094,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25130,
											"end": 25144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25167,
											"end": 25168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25147,
											"end": 25164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 25158,
											"end": 25163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25147,
											"end": 25157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 25147,
											"end": 25164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25147,
											"end": 25164,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 25147,
											"end": 25164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25147,
											"end": 25168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25216,
											"end": 25222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 25205,
											"end": 25223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25363,
											"end": 25369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25355,
											"end": 25370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25347,
											"end": 25353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25343,
											"end": 25371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25336,
											"end": 25371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25336,
											"end": 25371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25405,
											"end": 25409,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25568,
											"end": 25578,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 25563,
											"end": 25565,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25556,
											"end": 25561,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25552,
											"end": 25566,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25579,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25534,
											"end": 25580,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 25624,
											"end": 25626,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 25615,
											"end": 25626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25615,
											"end": 25626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25657,
											"end": 25658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25648,
											"end": 25653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25648,
											"end": 25658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 25644,
											"end": 25665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 25398,
											"end": 25680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25700,
											"end": 25706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25706,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25693,
											"end": 25706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25025,
											"end": 25723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25025,
											"end": 25723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25025,
											"end": 25723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25025,
											"end": 25723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44870,
											"end": 45142,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 44870,
											"end": 45142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44973,
											"end": 44977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45027,
											"end": 45028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45008,
											"end": 45029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45008,
											"end": 45029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45029,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45135,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 45008,
											"end": 45135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45055,
											"end": 45062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45046,
											"end": 45062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45051,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45046,
											"end": 45062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45062,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 45046,
											"end": 45098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45066,
											"end": 45098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 45083,
											"end": 45088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45090,
											"end": 45097,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45066,
											"end": 45082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 45066,
											"end": 45098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45066,
											"end": 45098,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 45066,
											"end": 45098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45098,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 45046,
											"end": 45098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 45046,
											"end": 45134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45127,
											"end": 45134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45102,
											"end": 45134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 45115,
											"end": 45122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 45102,
											"end": 45123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45123,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 45102,
											"end": 45123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45102,
											"end": 45134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45102,
											"end": 45134,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45134,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 45046,
											"end": 45134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45008,
											"end": 45135,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 45008,
											"end": 45135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44989,
											"end": 45135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44989,
											"end": 45135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44870,
											"end": 45142,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44870,
											"end": 45142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44870,
											"end": 45142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44870,
											"end": 45142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44870,
											"end": 45142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44870,
											"end": 45142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 48776,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 48449,
											"end": 48776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48530,
											"end": 48531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48516,
											"end": 48532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48516,
											"end": 48532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48516,
											"end": 48518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48516,
											"end": 48532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48516,
											"end": 48532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48516,
											"end": 48532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48512,
											"end": 48599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 48512,
											"end": 48599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 48555,
											"end": 48588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48555,
											"end": 48588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48512,
											"end": 48599,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 48512,
											"end": 48599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48608,
											"end": 48629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48632,
											"end": 48664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 48640,
											"end": 48642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48644,
											"end": 48651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48661,
											"end": 48662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48632,
											"end": 48639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 48632,
											"end": 48664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48632,
											"end": 48664,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 48632,
											"end": 48664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48608,
											"end": 48664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48608,
											"end": 48664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48703,
											"end": 48704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48678,
											"end": 48705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48678,
											"end": 48705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48678,
											"end": 48691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48678,
											"end": 48705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48678,
											"end": 48705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48678,
											"end": 48705,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48674,
											"end": 48770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 48674,
											"end": 48770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48756,
											"end": 48757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 48728,
											"end": 48759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48728,
											"end": 48759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48674,
											"end": 48770,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 48674,
											"end": 48770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48502,
											"end": 48776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 48776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 48776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48449,
											"end": 48776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 22465,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21549,
											"end": 22465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21602,
											"end": 21609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21621,
											"end": 21635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21638,
											"end": 21639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21621,
											"end": 21639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21686,
											"end": 21694,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 21677,
											"end": 21682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21694,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21673,
											"end": 21776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 21673,
											"end": 21776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21723,
											"end": 21731,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 21714,
											"end": 21731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21714,
											"end": 21731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21759,
											"end": 21761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21749,
											"end": 21761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21749,
											"end": 21761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21749,
											"end": 21761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21749,
											"end": 21761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21673,
											"end": 21776,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 21673,
											"end": 21776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21802,
											"end": 21810,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21793,
											"end": 21798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21789,
											"end": 21892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 21789,
											"end": 21892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21839,
											"end": 21847,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 21830,
											"end": 21847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 21847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21875,
											"end": 21877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21865,
											"end": 21877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21865,
											"end": 21877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21865,
											"end": 21877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21865,
											"end": 21877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21789,
											"end": 21892,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 21789,
											"end": 21892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21918,
											"end": 21926,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21909,
											"end": 21914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21909,
											"end": 21926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21905,
											"end": 22008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 21905,
											"end": 22008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21955,
											"end": 21963,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 21946,
											"end": 21963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21946,
											"end": 21963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21991,
											"end": 21993,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21981,
											"end": 21993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21981,
											"end": 21993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21981,
											"end": 21993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21981,
											"end": 21993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21905,
											"end": 22008,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 21905,
											"end": 22008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22034,
											"end": 22041,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 22025,
											"end": 22030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22041,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 22021,
											"end": 22121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22070,
											"end": 22077,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 22061,
											"end": 22077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22105,
											"end": 22106,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22095,
											"end": 22106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22095,
											"end": 22106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22121,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 22021,
											"end": 22121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22147,
											"end": 22154,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 22138,
											"end": 22143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22138,
											"end": 22154,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 22134,
											"end": 22234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22183,
											"end": 22190,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 22174,
											"end": 22190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22218,
											"end": 22219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22208,
											"end": 22219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22208,
											"end": 22219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22208,
											"end": 22219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22208,
											"end": 22219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22134,
											"end": 22234,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 22134,
											"end": 22234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22260,
											"end": 22267,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22251,
											"end": 22256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22267,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22247,
											"end": 22347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 22247,
											"end": 22347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 22287,
											"end": 22303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22287,
											"end": 22303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22331,
											"end": 22332,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22321,
											"end": 22332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22321,
											"end": 22332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22321,
											"end": 22332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22321,
											"end": 22332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22247,
											"end": 22347,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 22247,
											"end": 22347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22373,
											"end": 22380,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 22364,
											"end": 22369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22364,
											"end": 22380,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22360,
											"end": 22426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 22360,
											"end": 22426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22410,
											"end": 22411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22400,
											"end": 22411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22400,
											"end": 22411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22400,
											"end": 22411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22400,
											"end": 22411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22360,
											"end": 22426,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 22360,
											"end": 22426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22452,
											"end": 22458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22445,
											"end": 22458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22445,
											"end": 22458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22445,
											"end": 22458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 22465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 22465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 22465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 22465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5620,
											"end": 5625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 5602,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5855,
											"end": 5861,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 5811,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5960,
											"end": 5962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 5942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 5892,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6104,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6088,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6100,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6105,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 6108,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 6298,
											"end": 6305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6287,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 6253,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 6426,
											"end": 6433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 6381,
											"end": 6434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6601,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6796,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6925,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6808,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7111,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 6931,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7056,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6976,
											"end": 6977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 7057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7076,
											"end": 7080,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7097,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 7200,
											"end": 7227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7337,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7312,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7313,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7338,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 7341,
											"end": 7359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 7465,
											"end": 7485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 7494,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7683,
											"end": 7689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7710,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 7713,
											"end": 7731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 7751,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7829,
											"end": 7833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 7943,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7957,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 7992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7973,
											"end": 7989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7966,
											"end": 7993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 8124,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 8108,
											"end": 8174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8264,
											"end": 8270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 8280,
											"end": 8359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 8417,
											"end": 8423,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 8370,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8089,
											"end": 8430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8552,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8540,
											"end": 8546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8532,
											"end": 8559,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 8563,
											"end": 8642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8780,
											"end": 8783,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8765,
											"end": 8769,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8757,
											"end": 8763,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8696,
											"end": 8784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8696,
											"end": 8784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8512,
											"end": 8790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8902,
											"end": 8911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8893,
											"end": 8900,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 8912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8885,
											"end": 8917,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8920,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9068,
											"end": 9069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9053,
											"end": 9070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9040,
											"end": 9071,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9087,
											"end": 9117,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9120,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 9280,
											"end": 9287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9269,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 9225,
											"end": 9288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 9305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9389,
											"end": 9395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9425,
											"end": 9432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9421,
											"end": 9444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9449,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9452,
											"end": 9531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9572,
											"end": 9603,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9649,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9652,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 9757,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9543,
											"end": 9830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 9895,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10058,
											"end": 10065,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10054,
											"end": 10077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10050,
											"end": 10082,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10085,
											"end": 10164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 10275,
											"end": 10282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10266,
											"end": 10272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10230,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10176,
											"end": 10293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10306,
											"end": 10422,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10306,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 10391,
											"end": 10396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 10376,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10398,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10409,
											"end": 10410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10414,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10306,
											"end": 10422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10306,
											"end": 10422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10516,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10525,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10632,
											"end": 10638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 10691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10677,
											"end": 10686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10675,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10687,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10692,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10695,
											"end": 10774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10815,
											"end": 10816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 10885,
											"end": 10892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10874,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10840,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10786,
											"end": 10903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 10944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 11010,
											"end": 11017,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10999,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 10968,
											"end": 11018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10958,
											"end": 11018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10958,
											"end": 11018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 11028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 11035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11102,
											"end": 11106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11184,
											"end": 11190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11181,
											"end": 11211,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 11214,
											"end": 11232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 11252,
											"end": 11281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11330,
											"end": 11334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11318,
											"end": 11341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11318,
											"end": 11341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11431,
											"end": 11436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 11513,
											"end": 11519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 11472,
											"end": 11520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11456,
											"end": 11521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11447,
											"end": 11521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11447,
											"end": 11521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11537,
											"end": 11542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11582,
											"end": 11586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11575,
											"end": 11580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11571,
											"end": 11587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11620,
											"end": 11623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11611,
											"end": 11617,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11606,
											"end": 11609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11599,
											"end": 11624,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 11627,
											"end": 11706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 11764,
											"end": 11770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11754,
											"end": 11757,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 11717,
											"end": 11771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11354,
											"end": 11777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 11897,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11885,
											"end": 11891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11881,
											"end": 11898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11904,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 11908,
											"end": 11987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12032,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 12124,
											"end": 12127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12116,
											"end": 12122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12109,
											"end": 12113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12101,
											"end": 12107,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12050,
											"end": 12128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12041,
											"end": 12128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12041,
											"end": 12128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11857,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 12134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12251,
											"end": 12257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12259,
											"end": 12265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12311,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12296,
											"end": 12305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12294,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12312,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 12315,
											"end": 12394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 12505,
											"end": 12512,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12494,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 12460,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12513,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12562,
											"end": 12564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 12633,
											"end": 12640,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12613,
											"end": 12622,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 12588,
											"end": 12641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12641,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 12761,
											"end": 12768,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12752,
											"end": 12758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 12750,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12737,
											"end": 12759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 12716,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12706,
											"end": 12769,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12706,
											"end": 12769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12661,
											"end": 12779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 12848,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12818,
											"end": 12850,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12869,
											"end": 12875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12866,
											"end": 12896,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 12899,
											"end": 12978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 13058,
											"end": 13065,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13047,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 13004,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 13066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 13066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12789,
											"end": 13076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 13083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13165,
											"end": 13171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13202,
											"end": 13211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13200,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13189,
											"end": 13212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13217,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 13220,
											"end": 13299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13340,
											"end": 13341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 13410,
											"end": 13417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13401,
											"end": 13407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13386,
											"end": 13408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 13365,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13467,
											"end": 13469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 13538,
											"end": 13545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13518,
											"end": 13527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13514,
											"end": 13536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 13493,
											"end": 13546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13483,
											"end": 13546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13483,
											"end": 13546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13438,
											"end": 13556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13749,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 13569,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13694,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13614,
											"end": 13615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13607,
											"end": 13695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13714,
											"end": 13718,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13704,
											"end": 13719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13738,
											"end": 13742,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13799,
											"end": 13805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13836,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13830,
											"end": 13834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 13838,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13883,
											"end": 13884,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13877,
											"end": 13881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13885,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13904,
											"end": 13922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13960,
											"end": 13964,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 13952,
											"end": 13958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 13965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 13965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 13965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14025,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13988,
											"end": 14026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 14041,
											"end": 14059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13806,
											"end": 14075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13755,
											"end": 14075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14230,
											"end": 14234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14268,
											"end": 14270,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14257,
											"end": 14266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14245,
											"end": 14271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14245,
											"end": 14271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 14349,
											"end": 14350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14338,
											"end": 14347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14325,
											"end": 14331,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 14281,
											"end": 14352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 14430,
											"end": 14432,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14419,
											"end": 14428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14415,
											"end": 14433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 14362,
											"end": 14434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 14512,
											"end": 14514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14501,
											"end": 14510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 14444,
											"end": 14516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14529,
											"end": 14709,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 14529,
											"end": 14709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14654,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14574,
											"end": 14575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14567,
											"end": 14655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14674,
											"end": 14678,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 14671,
											"end": 14672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14664,
											"end": 14679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14698,
											"end": 14702,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14695,
											"end": 14696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14688,
											"end": 14703,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 14796,
											"end": 14797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 14778,
											"end": 14798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14773,
											"end": 14798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14773,
											"end": 14798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 14830,
											"end": 14831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 14812,
											"end": 14832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 14832,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 14832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14867,
											"end": 14868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 14865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14860,
											"end": 14869,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 14907,
											"end": 14918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 14889,
											"end": 14919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14878,
											"end": 14919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14878,
											"end": 14919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15068,
											"end": 15069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15059,
											"end": 15066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15070,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15052,
											"end": 15053,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15049,
											"end": 15071,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15029,
											"end": 15030,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15002,
											"end": 15085,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 15098,
											"end": 15116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14763,
											"end": 15125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 15125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15131,
											"end": 15311,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 15131,
											"end": 15311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15179,
											"end": 15256,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15176,
											"end": 15177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15169,
											"end": 15257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15276,
											"end": 15280,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 15273,
											"end": 15274,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15266,
											"end": 15281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15304,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15297,
											"end": 15298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15290,
											"end": 15305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15357,
											"end": 15358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 15392,
											"end": 15393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 15374,
											"end": 15394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15369,
											"end": 15394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15369,
											"end": 15394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 15426,
											"end": 15427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 15408,
											"end": 15428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 15452,
											"end": 15470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15494,
											"end": 15495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15491,
											"end": 15492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15487,
											"end": 15496,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15482,
											"end": 15496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15482,
											"end": 15496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15317,
											"end": 15502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15557,
											"end": 15561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15580,
											"end": 15583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15600,
											"end": 15601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15637,
											"end": 15641,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15634,
											"end": 15635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15624,
											"end": 15642,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15692,
											"end": 15698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15739,
											"end": 15741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15734,
											"end": 15736,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15727,
											"end": 15732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15723,
											"end": 15737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15719,
											"end": 15742,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15709,
											"end": 15742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15709,
											"end": 15742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15798,
											"end": 15806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15848,
											"end": 15853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15842,
											"end": 15846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15854,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15754,
											"end": 15861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 15942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15987,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 15974,
											"end": 15984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15970,
											"end": 15988,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 16039,
											"end": 16105,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16028,
											"end": 16037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 16009,
											"end": 16106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 16157,
											"end": 16165,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 16127,
											"end": 16166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16115,
											"end": 16166,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16115,
											"end": 16166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16199,
											"end": 16203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16195,
											"end": 16204,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16193,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16184,
											"end": 16205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16205,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16238,
											"end": 16246,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16234,
											"end": 16253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16227,
											"end": 16232,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16224,
											"end": 16254,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16214,
											"end": 16254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16214,
											"end": 16254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 16260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16308,
											"end": 16320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16308,
											"end": 16320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16266,
											"end": 16326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16382,
											"end": 16391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 16460,
											"end": 16465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 16442,
											"end": 16466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 16433,
											"end": 16467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 16415,
											"end": 16468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16402,
											"end": 16468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16402,
											"end": 16468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16523,
											"end": 16526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16544,
											"end": 16549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16480,
											"end": 16555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 16702,
											"end": 16709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 16671,
											"end": 16710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 16805,
											"end": 16821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 16781,
											"end": 16822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16773,
											"end": 16779,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16766,
											"end": 16770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16760,
											"end": 16771,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 16732,
											"end": 16823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16726,
											"end": 16730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16719,
											"end": 16824,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16637,
											"end": 16830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16561,
											"end": 16830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16836,
											"end": 16909,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 16836,
											"end": 16909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16881,
											"end": 16884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16836,
											"end": 16909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16836,
											"end": 16909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 16992,
											"end": 17024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 17091,
											"end": 17097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17083,
											"end": 17089,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17077,
											"end": 17081,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 17033,
											"end": 17098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16968,
											"end": 17104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16915,
											"end": 17104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17187,
											"end": 17190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17180,
											"end": 17185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17177,
											"end": 17191,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 17278,
											"end": 17279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17271,
											"end": 17276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 17241,
											"end": 17280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17214,
											"end": 17215,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17207,
											"end": 17212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17203,
											"end": 17216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17194,
											"end": 17216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17194,
											"end": 17216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17403,
											"end": 17405,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17398,
											"end": 17401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17395,
											"end": 17406,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 17469,
											"end": 17474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 17437,
											"end": 17475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 17521,
											"end": 17550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17507,
											"end": 17551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17704,
											"end": 17706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17692,
											"end": 17702,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17689,
											"end": 17707,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17725,
											"end": 17733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17710,
											"end": 17733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17710,
											"end": 17733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 17822,
											"end": 17825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 17804,
											"end": 17826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17794,
											"end": 17802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17790,
											"end": 17827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17777,
											"end": 17788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 17748,
											"end": 17828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17407,
											"end": 17838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17407,
											"end": 17838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17302,
											"end": 17845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17905,
											"end": 17913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17955,
											"end": 17960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17945,
											"end": 17961,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 17924,
											"end": 17961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17924,
											"end": 17961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17851,
											"end": 17968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18018,
											"end": 18024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 18099,
											"end": 18100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18095,
											"end": 18101,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18084,
											"end": 18085,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18080,
											"end": 18093,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 18051,
											"end": 18102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18047,
											"end": 18103,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18132,
											"end": 18136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18126,
											"end": 18130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18122,
											"end": 18137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18112,
											"end": 18137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18112,
											"end": 18137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17974,
											"end": 18143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18224,
											"end": 18228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 18395,
											"end": 18398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18389,
											"end": 18393,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 18370,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18432,
											"end": 18435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18429,
											"end": 18430,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 18425,
											"end": 18436,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18419,
											"end": 18423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18416,
											"end": 18437,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18408,
											"end": 18437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18408,
											"end": 18437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 18598,
											"end": 18601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 18565,
											"end": 18602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18667,
											"end": 18685,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18659,
											"end": 18665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18656,
											"end": 18686,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 18689,
											"end": 18707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 18765,
											"end": 18769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18759,
											"end": 18770,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 18733,
											"end": 18771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 18878,
											"end": 18884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18870,
											"end": 18876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18864,
											"end": 18868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 18818,
											"end": 18885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18912,
											"end": 18913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18936,
											"end": 18940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18923,
											"end": 18940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18923,
											"end": 18940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18968,
											"end": 18970,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18960,
											"end": 18966,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18957,
											"end": 18971,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18985,
											"end": 18986,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19642,
											"end": 19643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19659,
											"end": 19665,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19708,
											"end": 19717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19703,
											"end": 19706,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19699,
											"end": 19718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19693,
											"end": 19719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19684,
											"end": 19719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19684,
											"end": 19719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 19819,
											"end": 19825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19812,
											"end": 19817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 19759,
											"end": 19826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19753,
											"end": 19757,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19746,
											"end": 19827,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19615,
											"end": 19837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19032,
											"end": 19036,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19028,
											"end": 19037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19016,
											"end": 19038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 19098,
											"end": 19102,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 19066,
											"end": 19103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "tag",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19125,
											"end": 19126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19153,
											"end": 19160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19150,
											"end": 19151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19147,
											"end": 19161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19241,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19227,
											"end": 19230,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19223,
											"end": 19242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19209,
											"end": 19215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19202,
											"end": 19244,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19283,
											"end": 19284,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19275,
											"end": 19281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19261,
											"end": 19285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19261,
											"end": 19285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19330,
											"end": 19332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19319,
											"end": 19328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19315,
											"end": 19333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19302,
											"end": 19333,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19302,
											"end": 19333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19176,
											"end": 19180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19169,
											"end": 19181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19164,
											"end": 19181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19375,
											"end": 19381,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19366,
											"end": 19373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19363,
											"end": 19382,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19433,
											"end": 19442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19428,
											"end": 19431,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19424,
											"end": 19443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19418,
											"end": 19444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 19518,
											"end": 19522,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19510,
											"end": 19516,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19506,
											"end": 19523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19495,
											"end": 19504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 19476,
											"end": 19524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "tag",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19468,
											"end": 19474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19461,
											"end": 19525,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19383,
											"end": 19539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19585,
											"end": 19586,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19581,
											"end": 19582,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19573,
											"end": 19579,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19569,
											"end": 19583,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19565,
											"end": 19587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19559,
											"end": 19563,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19552,
											"end": 19588,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18987,
											"end": 19598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18540,
											"end": 19843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18540,
											"end": 19843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18540,
											"end": 19843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 19843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19849,
											"end": 20019,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 19849,
											"end": 20019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19989,
											"end": 20011,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E206973206E6F742061742073616C65000000000000000000000000"
										},
										{
											"begin": 19985,
											"end": 19986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19977,
											"end": 19983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19973,
											"end": 19987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19966,
											"end": 20012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19849,
											"end": 20019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19849,
											"end": 20019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20167,
											"end": 20170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 20252,
											"end": 20254,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 20247,
											"end": 20250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 20188,
											"end": 20255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20181,
											"end": 20255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 20353,
											"end": 20356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 20264,
											"end": 20357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20382,
											"end": 20384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20377,
											"end": 20380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20373,
											"end": 20385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20366,
											"end": 20385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20366,
											"end": 20385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20563,
											"end": 20567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20601,
											"end": 20603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20590,
											"end": 20599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20586,
											"end": 20604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20578,
											"end": 20604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20578,
											"end": 20604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20650,
											"end": 20659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20644,
											"end": 20648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20640,
											"end": 20660,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20636,
											"end": 20637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20625,
											"end": 20634,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20621,
											"end": 20638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20614,
											"end": 20661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 20804,
											"end": 20808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 20678,
											"end": 20809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20670,
											"end": 20809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20670,
											"end": 20809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20397,
											"end": 20816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20822,
											"end": 20995,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 20822,
											"end": 20995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20962,
											"end": 20987,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F742062757920796F7572206F776E204E4654000000000000000000"
										},
										{
											"begin": 20958,
											"end": 20959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20950,
											"end": 20956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20946,
											"end": 20960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20939,
											"end": 20988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20822,
											"end": 20995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20822,
											"end": 20995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21143,
											"end": 21146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 21228,
											"end": 21230,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 21223,
											"end": 21226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 21164,
											"end": 21231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21157,
											"end": 21231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21157,
											"end": 21231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 21329,
											"end": 21332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 21240,
											"end": 21333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21358,
											"end": 21360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21353,
											"end": 21356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21349,
											"end": 21361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21001,
											"end": 21367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21539,
											"end": 21543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21577,
											"end": 21579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21566,
											"end": 21575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21562,
											"end": 21580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21554,
											"end": 21580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21554,
											"end": 21580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21626,
											"end": 21635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21620,
											"end": 21624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21616,
											"end": 21636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21612,
											"end": 21613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21601,
											"end": 21610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21597,
											"end": 21614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21590,
											"end": 21637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 21780,
											"end": 21784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 21654,
											"end": 21785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21646,
											"end": 21785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21646,
											"end": 21785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21373,
											"end": 21792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21798,
											"end": 21965,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 21798,
											"end": 21965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21938,
											"end": 21957,
											"name": "PUSH",
											"source": 1,
											"value": "537570706C792045786163742066756E64000000000000000000000000000000"
										},
										{
											"begin": 21934,
											"end": 21935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21926,
											"end": 21932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21922,
											"end": 21936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21915,
											"end": 21958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21798,
											"end": 21965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21798,
											"end": 21965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22113,
											"end": 22116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 22198,
											"end": 22200,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 22193,
											"end": 22196,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 22134,
											"end": 22201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22127,
											"end": 22201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22127,
											"end": 22201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 22299,
											"end": 22302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 22210,
											"end": 22303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22328,
											"end": 22330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22323,
											"end": 22326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22319,
											"end": 22331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22312,
											"end": 22331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22312,
											"end": 22331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21971,
											"end": 22337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22509,
											"end": 22513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22547,
											"end": 22549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22536,
											"end": 22545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22532,
											"end": 22550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22524,
											"end": 22550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22524,
											"end": 22550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22596,
											"end": 22605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22590,
											"end": 22594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22586,
											"end": 22606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22582,
											"end": 22583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22571,
											"end": 22580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22567,
											"end": 22584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22560,
											"end": 22607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 22750,
											"end": 22754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 22624,
											"end": 22755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22616,
											"end": 22755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22616,
											"end": 22755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22808,
											"end": 22812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 22846,
											"end": 22847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 22828,
											"end": 22848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22823,
											"end": 22848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22823,
											"end": 22848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 22880,
											"end": 22881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 22862,
											"end": 22882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22857,
											"end": 22882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22857,
											"end": 22882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22906,
											"end": 22907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22903,
											"end": 22904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22908,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22891,
											"end": 22908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22891,
											"end": 22908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22930,
											"end": 22931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22924,
											"end": 22928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22921,
											"end": 22932,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 22935,
											"end": 22953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22768,
											"end": 22962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 23144,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 22968,
											"end": 23144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23108,
											"end": 23136,
											"name": "PUSH",
											"source": 1,
											"value": "596F75722061726520417574686F72697A6520746F2073656C6C000000000000"
										},
										{
											"begin": 23104,
											"end": 23105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23096,
											"end": 23102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23092,
											"end": 23106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23085,
											"end": 23137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 23144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22968,
											"end": 23144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23292,
											"end": 23295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 23377,
											"end": 23379,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 23372,
											"end": 23375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 23313,
											"end": 23380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23306,
											"end": 23380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23306,
											"end": 23380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 23478,
											"end": 23481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 23389,
											"end": 23482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23507,
											"end": 23509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23498,
											"end": 23510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23491,
											"end": 23510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23491,
											"end": 23510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23150,
											"end": 23516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23688,
											"end": 23692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23726,
											"end": 23728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23715,
											"end": 23724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23711,
											"end": 23729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23775,
											"end": 23784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23769,
											"end": 23773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23765,
											"end": 23785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23750,
											"end": 23759,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23746,
											"end": 23763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23739,
											"end": 23786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 23929,
											"end": 23933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 23803,
											"end": 23934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23795,
											"end": 23934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23795,
											"end": 23934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23522,
											"end": 23941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24049,
											"end": 24060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24086,
											"end": 24089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23947,
											"end": 24095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24207,
											"end": 24210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 24268,
											"end": 24273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 24235,
											"end": 24274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 24372,
											"end": 24378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24367,
											"end": 24370,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 24290,
											"end": 24379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24283,
											"end": 24379,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24283,
											"end": 24379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 24446,
											"end": 24452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24441,
											"end": 24444,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24434,
											"end": 24438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24427,
											"end": 24432,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24423,
											"end": 24439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 24388,
											"end": 24453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24478,
											"end": 24484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24473,
											"end": 24476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24469,
											"end": 24485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24462,
											"end": 24485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24462,
											"end": 24485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24211,
											"end": 24491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24101,
											"end": 24491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24677,
											"end": 24680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 24790,
											"end": 24793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24781,
											"end": 24787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24699,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24692,
											"end": 24794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24692,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 24902,
											"end": 24905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24893,
											"end": 24899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 24811,
											"end": 24906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24804,
											"end": 24906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24804,
											"end": 24906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24923,
											"end": 24926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24916,
											"end": 24926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24916,
											"end": 24926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24497,
											"end": 24932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24989,
											"end": 24995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25023,
											"end": 25028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25017,
											"end": 25029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25007,
											"end": 25029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25007,
											"end": 25029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24938,
											"end": 25036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25125,
											"end": 25136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25154,
											"end": 25157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25147,
											"end": 25166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25199,
											"end": 25203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25194,
											"end": 25197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25190,
											"end": 25204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25175,
											"end": 25204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25042,
											"end": 25210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25302,
											"end": 25305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 25362,
											"end": 25367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 25330,
											"end": 25368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 25447,
											"end": 25453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25442,
											"end": 25445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 25384,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25377,
											"end": 25454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25377,
											"end": 25454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 25521,
											"end": 25527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25516,
											"end": 25519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25509,
											"end": 25513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25502,
											"end": 25507,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25498,
											"end": 25514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 25463,
											"end": 25528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 25575,
											"end": 25581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 25553,
											"end": 25582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "tag",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25548,
											"end": 25551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25544,
											"end": 25583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25537,
											"end": 25583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25537,
											"end": 25583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25306,
											"end": 25589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25216,
											"end": 25589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25790,
											"end": 25794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25828,
											"end": 25831,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 25817,
											"end": 25826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25813,
											"end": 25832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25805,
											"end": 25832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25805,
											"end": 25832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 25910,
											"end": 25911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25899,
											"end": 25908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25895,
											"end": 25912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25886,
											"end": 25892,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 25842,
											"end": 25913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "tag",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 25991,
											"end": 25993,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25980,
											"end": 25989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25976,
											"end": 25994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25967,
											"end": 25973,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 25923,
											"end": 25995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 26073,
											"end": 26075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26062,
											"end": 26071,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26058,
											"end": 26076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26049,
											"end": 26055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 26005,
											"end": 26077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "tag",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26124,
											"end": 26133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26118,
											"end": 26122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26114,
											"end": 26134,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26109,
											"end": 26111,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26098,
											"end": 26107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26094,
											"end": 26112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26087,
											"end": 26135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 26223,
											"end": 26227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26214,
											"end": 26220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 26152,
											"end": 26228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26144,
											"end": 26228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26144,
											"end": 26228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25595,
											"end": 26235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26297,
											"end": 26302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26328,
											"end": 26334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26322,
											"end": 26335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26313,
											"end": 26335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26313,
											"end": 26335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 26370,
											"end": 26375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 26344,
											"end": 26376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26241,
											"end": 26382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26457,
											"end": 26463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26506,
											"end": 26508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26494,
											"end": 26503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26485,
											"end": 26492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26481,
											"end": 26504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26477,
											"end": 26509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 26512,
											"end": 26591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "tag",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "tag",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26632,
											"end": 26633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 26712,
											"end": 26719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26703,
											"end": 26709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26692,
											"end": 26701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26688,
											"end": 26710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 26657,
											"end": 26720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26647,
											"end": 26720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26647,
											"end": 26720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26603,
											"end": 26730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26388,
											"end": 26737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"nftmarket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BuyNFT(uint256)": "a37365e0",
							"KnowPrice(uint256)": "5a51a885",
							"SellNft(uint256)": "a90d14e2",
							"SoldNft(uint256)": "7d7f1f3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseTokenURI()": "d547cfb7",
							"getApproved(uint256)": "081812fc",
							"getBalance(address)": "f8b2cb4f",
							"getTotalToken()": "3d0673d4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isSellNft(uint256)": "f2a413b5",
							"mintNFT(string,uint256)": "5afa3a72",
							"name()": "06fdde03",
							"nfts(uint256)": "265aa621",
							"ownerOf(uint256)": "6352211e",
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"royaltyPercentage()": "8a71bb2d",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"BuyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIds\",\"type\":\"uint256\"}],\"name\":\"KnowPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SellNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenids\",\"type\":\"uint256\"}],\"name\":\"SoldNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ads\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"}],\"name\":\"isSellNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"NFTMarketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1880,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1882,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1886,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1890,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1894,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1900,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2875,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2985,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)5_storage"
							},
							{
								"astId": 2987,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "baseTokenURI",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 2990,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "royaltyPercentage",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2992,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "contractOwner",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 3003,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "isSell",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 3009,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "isSold",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 3014,
								"contract": "nftmarket_flattened.sol:NFTMarketplace",
								"label": "nfts",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(NFT)2997_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_struct(NFT)2997_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.NFT)",
								"numberOfBytes": "32",
								"value": "t_struct(NFT)2997_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "nftmarket_flattened.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFT)2997_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.NFT",
								"members": [
									{
										"astId": 2994,
										"contract": "nftmarket_flattened.sol:NFTMarketplace",
										"label": "creator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2996,
										"contract": "nftmarket_flattened.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nftmarket_flattened.sol\":8263:9310  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nftmarket_flattened.sol\":8263:9310  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c9686b32e9a4eca3c17d9078422ab7a891f3799e8ed48cc9848d1e79e0d45b4564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c9686b32e9a4eca3c17d9078422ab7a891f3799e8ed48cc9848d1e79e0d45b4564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH9 0x6B32E9A4ECA3C17D90 PUSH25 0x422AB7A891F3799E8ED48CC9848D1E79E0D45B4564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "8263:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c9686b32e9a4eca3c17d9078422ab7a891f3799e8ed48cc9848d1e79e0d45b4564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH9 0x6B32E9A4ECA3C17D90 PUSH25 0x422AB7A891F3799E8ED48CC9848D1E79E0D45B4564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "8263:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8263,
									"end": 9310,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9686b32e9a4eca3c17d9078422ab7a891f3799e8ed48cc9848d1e79e0d45b4564736f6c63430008140033",
									".code": [
										{
											"begin": 8263,
											"end": 9310,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 9310,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"nftmarket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nftmarket_flattened.sol\":24639:27486  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nftmarket_flattened.sol\":24639:27486  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122074788aa936921debc96a6e0717266ce99102c36704406b47dd02d80cd456779064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122074788aa936921debc96a6e0717266ce99102c36704406b47dd02d80cd456779064736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x788AA936921DEBC96A6E0717266CE99102C3670440 PUSH12 0x47DD02D80CD456779064736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "24639:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122074788aa936921debc96a6e0717266ce99102c36704406b47dd02d80cd456779064736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x788AA936921DEBC96A6E0717266CE99102C3670440 PUSH12 0x47DD02D80CD456779064736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "24639:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24639,
									"end": 27486,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074788aa936921debc96a6e0717266ce99102c36704406b47dd02d80cd456779064736f6c63430008140033",
									".code": [
										{
											"begin": 24639,
											"end": 27486,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24639,
											"end": 27486,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"nftmarket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nftmarket_flattened.sol\":{\"keccak256\":\"0x2797fc88e98431595705f3e09423629992e760eca3a27a70a41e04d09cf2f126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d1d094233111ae1b879cfe55ea97e40d3e268e048294959a6e174910b062b5\",\"dweb:/ipfs/QmXx2nwcDgdNof3MGevVngE1ckCJKu5GFkQQ6yErFoNpRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> nftmarket_flattened.sol:1764:26:\n     |\n1764 |     function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {\n     |                          ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 61060,
					"file": "nftmarket_flattened.sol",
					"start": 61045
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nftmarket_flattened.sol": {
				"ast": {
					"absolutePath": "nftmarket_flattened.sol",
					"exportedSymbols": {
						"Context": [
							1637
						],
						"Counters": [
							73
						],
						"ERC165": [
							1704
						],
						"ERC721": [
							2856
						],
						"ERC721URIStorage": [
							2973
						],
						"IERC1155Errors": [
							209
						],
						"IERC165": [
							1665
						],
						"IERC20Errors": [
							114
						],
						"IERC2981": [
							1682
						],
						"IERC4906": [
							1838
						],
						"IERC721": [
							1818
						],
						"IERC721Errors": [
							162
						],
						"IERC721Metadata": [
							1863
						],
						"IERC721Receiver": [
							1654
						],
						"Math": [
							1366
						],
						"NFTMarketplace": [
							3300
						],
						"SignedMath": [
							313
						],
						"Strings": [
							1616
						]
					},
					"id": 3301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "141:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "167:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Counters",
							"nameLocation": "487:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "849:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "841:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "841:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "509:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "502:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "956:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "981:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "973:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "966:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "891:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "915:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "899:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nameLocations": [
															"899:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "899:7:0"
													},
													"referencedDeclaration": 5,
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "947:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:9:0"
									},
									"scope": 73,
									"src": "882:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1053:70:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1063:54:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1087:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1095:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1087:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1105:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1087:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1087:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "1009:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1035:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1019:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nameLocations": [
															"1019:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1019:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:0"
									},
									"scope": 73,
									"src": "1000:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1182:176:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1200:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1192:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1192:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1216:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1208:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1192:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1240:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1248:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1240:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1251:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1232:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1232:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1291:61:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1315:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1323:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1315:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1332:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1315:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1315:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1138:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1164:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1148:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nameLocations": [
															"1148:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1148:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:0:0"
									},
									"scope": 73,
									"src": "1129:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1413:35:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1431:6:0",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1423:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1440:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1423:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1423:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1373:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1395:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1379:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nameLocations": [
															"1379:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1379:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:0:0"
									},
									"scope": 73,
									"src": "1364:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3301,
							"src": "479:971:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 74,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "1597:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 75,
								"nodeType": "StructuredDocumentation",
								"src": "1623:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IERC20Errors",
							"nameLocation": "1773:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1792:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 84,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "2112:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2145:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2137:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2161:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2153:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "2178:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2170:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:49:0"
									},
									"src": "2106:80:0"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2192:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 89,
									"name": "ERC20InvalidSender",
									"nameLocation": "2355:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2382:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2374:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:16:0"
									},
									"src": "2349:41:0"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2396:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 94,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "2566:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2595:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2587:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:18:0"
									},
									"src": "2560:45:0"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2611:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 103,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "2967:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3002:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2994:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "3019:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3011:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "3038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:52:0"
									},
									"src": "2961:85:0"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3052:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 108,
									"name": "ERC20InvalidApprover",
									"nameLocation": "3237:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "3266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3257:18:0"
									},
									"src": "3231:45:0"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3282:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 113,
									"name": "ERC20InvalidSpender",
									"nameLocation": "3488:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:17:0"
									},
									"src": "3482:43:0"
								}
							],
							"scope": 3301,
							"src": "1763:1764:0",
							"usedErrors": [
								84,
								89,
								94,
								103,
								108,
								113
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "3529:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "IERC721Errors",
							"nameLocation": "3681:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3701:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 120,
									"name": "ERC721InvalidOwner",
									"nameLocation": "3931:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3958:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3950:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:15:0"
									},
									"src": "3925:40:0"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3971:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 125,
									"name": "ERC721NonexistentToken",
									"nameLocation": "4114:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4145:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "4137:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4136:17:0"
									},
									"src": "4108:46:0"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "4160:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 134,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "4460:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4489:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4481:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4505:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4522:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4514:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4480:48:0"
									},
									"src": "4454:75:0"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "4535:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 139,
									"name": "ERC721InvalidSender",
									"nameLocation": "4698:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4726:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4718:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:16:0"
									},
									"src": "4692:42:0"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4740:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 144,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "4910:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4932:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4931:18:0"
									},
									"src": "4904:46:0"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "4956:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 151,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "5214:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5249:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5241:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5240:35:0"
									},
									"src": "5208:68:0"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "5282:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 156,
									"name": "ERC721InvalidApprover",
									"nameLocation": "5467:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5497:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5489:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5488:18:0"
									},
									"src": "5461:46:0"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "5513:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 161,
									"name": "ERC721InvalidOperator",
									"nameLocation": "5721:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5751:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5743:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5742:18:0"
									},
									"src": "5715:46:0"
								}
							],
							"scope": 3301,
							"src": "3671:2092:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "5765:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC1155Errors",
							"nameLocation": "5919:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "5940:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 174,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "6312:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6347:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6339:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "6363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6380:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6372:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6338:66:0"
									},
									"src": "6306:99:0"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "6411:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 179,
									"name": "ERC1155InvalidSender",
									"nameLocation": "6574:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "6595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:16:0"
									},
									"src": "6568:43:0"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "6617:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 184,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "6787:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6818:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6810:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:18:0"
									},
									"src": "6781:47:0"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6834:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 191,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "7101:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7138:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "7130:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "7148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7129:33:0"
									},
									"src": "7095:68:0"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "7169:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 196,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "7354:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "7385:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "7377:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:18:0"
									},
									"src": "7348:47:0"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "7401:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 201,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "7609:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7640:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "7632:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7631:18:0"
									},
									"src": "7603:47:0"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "7656:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 208,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "7947:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "7981:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7973:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "8000:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7992:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7972:41:0"
									},
									"src": "7941:73:0"
								}
							],
							"scope": 3301,
							"src": "5909:2107:0",
							"usedErrors": [
								174,
								179,
								184,
								191,
								196,
								201,
								208
							],
							"usedEvents": []
						},
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "8156:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "8182:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313
							],
							"name": "SignedMath",
							"nameLocation": "8271:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "8423:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 221,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "8440:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 222,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8444:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "8440:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 225,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "8452:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8440:13:0",
													"trueExpression": {
														"id": 224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "8448:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 220,
												"id": 227,
												"nodeType": "Return",
												"src": "8433:20:0"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "8288:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "8368:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8372:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 213,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8372:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8382:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 215,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8382:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8371:20:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8415:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 218,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8415:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8414:8:0"
									},
									"scope": 313,
									"src": "8359:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "8602:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 239,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "8619:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 240,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "8623:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "8619:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 243,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "8631:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8619:13:0",
													"trueExpression": {
														"id": 242,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "8627:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 238,
												"id": 245,
												"nodeType": "Return",
												"src": "8612:20:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "8466:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "8547:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8558:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8551:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 231,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8568:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8561:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 233,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8561:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8550:20:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8594:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 236,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8594:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8593:8:0"
									},
									"scope": 313,
									"src": "8538:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "8844:162:0",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "8913:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 290,
														"src": "8906:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 257,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8906:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 259,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "8918:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 260,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "8922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8918:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 262,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 263,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "8929:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 264,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "8933:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "8929:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 266,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8928:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8939:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8928:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 269,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8927:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8917:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8906:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "8958:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 277,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 258,
																						"src": "8978:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8970:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 275,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "8970:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8970:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8984:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "8970:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8963:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 273,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8963:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8963:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 282,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "8992:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 283,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "8996:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "8992:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 285,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8963:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 287,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8962:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8958:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 256,
												"id": 289,
												"nodeType": "Return",
												"src": "8951:48:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "8645:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "8785:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8800:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "8793:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 249,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8810:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "8803:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 251,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8803:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8792:20:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "8836:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 254,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8836:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8835:8:0"
									},
									"scope": 313,
									"src": "8776:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "9150:158:0",
										"statements": [
											{
												"id": 310,
												"nodeType": "UncheckedBlock",
												"src": "9160:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 301,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "9275:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9280:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "9275:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "9288:2:0",
																		"subExpression": {
																			"id": 305,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "9289:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "9275:15:0",
																	"trueExpression": {
																		"id": 304,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "9284:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 299,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9267:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9267:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 298,
														"id": 309,
														"nodeType": "Return",
														"src": "9260:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "9012:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "9104:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "9115:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9108:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 293,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9107:10:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9141:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9140:9:0"
									},
									"scope": 313,
									"src": "9095:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3301,
							"src": "8263:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "9438:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "9464:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1366,
							"linearizedBaseContracts": [
								1366
							],
							"name": "Math",
							"nameLocation": "9546:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "9557:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 318,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "9618:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9638:2:0"
									},
									"src": "9612:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 323,
									"members": [
										{
											"id": 319,
											"name": "Floor",
											"nameLocation": "9671:5:0",
											"nodeType": "EnumValue",
											"src": "9671:5:0"
										},
										{
											"id": 320,
											"name": "Ceil",
											"nameLocation": "9714:4:0",
											"nodeType": "EnumValue",
											"src": "9714:4:0"
										},
										{
											"id": 321,
											"name": "Trunc",
											"nameLocation": "9756:5:0",
											"nodeType": "EnumValue",
											"src": "9756:5:0"
										},
										{
											"id": 322,
											"name": "Expand",
											"nameLocation": "9786:6:0",
											"nodeType": "EnumValue",
											"src": "9786:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "9652:8:0",
									"nodeType": "EnumDefinition",
									"src": "9647:169:0"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "9996:140:0",
										"statements": [
											{
												"id": 353,
												"nodeType": "UncheckedBlock",
												"src": "10006:124:0",
												"statements": [
													{
														"assignments": [
															336
														],
														"declarations": [
															{
																"constant": false,
																"id": 336,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "10038:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 353,
																"src": "10030:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 335,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10030:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 340,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "10042:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 338,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "10046:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10042:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10030:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "10065:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "10069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "10061:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10087:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10079:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 334,
															"id": 347,
															"nodeType": "Return",
															"src": "10072:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10111:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 350,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "10117:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 351,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10110:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 334,
														"id": 352,
														"nodeType": "Return",
														"src": "10103:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "9822:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "9929:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9944:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9936:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9955:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9947:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9935:22:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9987:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9980:15:0"
									},
									"scope": 1366,
									"src": "9920:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "10319:113:0",
										"statements": [
											{
												"id": 381,
												"nodeType": "UncheckedBlock",
												"src": "10329:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "10357:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "10361:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 374,
														"nodeType": "IfStatement",
														"src": "10353:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10372:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10379:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10371:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 366,
															"id": 373,
															"nodeType": "Return",
															"src": "10364:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "10409:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 377,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "10413:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10409:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 379,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10402:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 366,
														"id": 380,
														"nodeType": "Return",
														"src": "10395:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "10142:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "10252:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10259:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10278:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10270:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10258:22:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10304:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10304:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10303:15:0"
									},
									"scope": 1366,
									"src": "10243:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "10618:417:0",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "10628:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10891:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10886:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 402,
														"nodeType": "IfStatement",
														"src": "10882:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10902:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10908:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10901:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 401,
															"nodeType": "Return",
															"src": "10894:16:0"
														}
													},
													{
														"assignments": [
															404
														],
														"declarations": [
															{
																"constant": false,
																"id": 404,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "10932:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "10924:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10924:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 408,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10936:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "10940:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10936:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10924:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "10959:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "10963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10959:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "10968:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "10955:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10979:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10986:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10978:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 417,
															"nodeType": "Return",
															"src": "10971:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11010:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 420,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "11016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 421,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11009:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 394,
														"id": 422,
														"nodeType": "Return",
														"src": "11002:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "10438:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "10551:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10577:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10569:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10557:22:0"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10603:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10603:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10602:15:0"
									},
									"scope": 1366,
									"src": "10542:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "11222:114:0",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "11232:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "11260:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 444,
														"nodeType": "IfStatement",
														"src": "11256:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11276:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11283:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11275:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 436,
															"id": 443,
															"nodeType": "Return",
															"src": "11268:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11307:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "11313:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "11317:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11313:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 449,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11306:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 436,
														"id": 450,
														"nodeType": "Return",
														"src": "11299:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "11041:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "11155:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11170:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11162:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11161:22:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11207:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11213:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11206:15:0"
									},
									"scope": 1366,
									"src": "11146:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "11533:114:0",
										"statements": [
											{
												"id": 479,
												"nodeType": "UncheckedBlock",
												"src": "11543:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 465,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "11571:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11576:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11571:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 472,
														"nodeType": "IfStatement",
														"src": "11567:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11587:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11594:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11586:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 464,
															"id": 471,
															"nodeType": "Return",
															"src": "11579:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 474,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "11624:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 475,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "11628:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11624:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11617:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 464,
														"id": 478,
														"nodeType": "Return",
														"src": "11610:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "11342:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "11466:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11481:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11473:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11472:22:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11518:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11518:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11524:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11517:15:0"
									},
									"scope": 1366,
									"src": "11457:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "11784:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 491,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "11801:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 492,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "11805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 495,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "11813:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11801:13:0",
													"trueExpression": {
														"id": 494,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "11809:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 490,
												"id": 497,
												"nodeType": "Return",
												"src": "11794:20:0"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "11653:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "11726:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11738:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "11730:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11749:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "11741:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11729:22:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "11775:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11774:9:0"
									},
									"scope": 1366,
									"src": "11717:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "11959:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 509,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "11976:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 510,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "11980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11976:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "11988:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11976:13:0",
													"trueExpression": {
														"id": 512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "11984:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 515,
												"nodeType": "Return",
												"src": "11969:20:0"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "11827:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "11901:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11913:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11905:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11924:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11916:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11904:22:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11949:9:0"
									},
									"scope": 1366,
									"src": "11892:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "12180:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 527,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "12235:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 528,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "12239:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12235:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 530,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 531,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "12245:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 532,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "12249:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12245:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12244:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12254:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "12244:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12234:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 538,
												"nodeType": "Return",
												"src": "12227:28:0"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "12002:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "12118:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12134:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "12126:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12145:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "12137:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12125:22:0"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "12171:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12170:9:0"
									},
									"scope": 1366,
									"src": "12109:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12554:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "12568:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12573:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "12564:127:0",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "12576:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 553,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "12675:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 554,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "12679:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12675:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 549,
															"id": 556,
															"nodeType": "Return",
															"src": "12668:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 559,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "12779:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12784:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12779:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 563,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "12793:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12797:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12793:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 566,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12792:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 567,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "12802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12792:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12806:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "12792:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12779:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 572,
												"nodeType": "Return",
												"src": "12772:35:0"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "12268:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "12492:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12508:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12500:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12519:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12511:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12499:22:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12545:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12544:9:0"
									},
									"scope": 1366,
									"src": "12483:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "13236:4018:0",
										"statements": [
											{
												"id": 698,
												"nodeType": "UncheckedBlock",
												"src": "13246:4002:0",
												"statements": [
													{
														"assignments": [
															587
														],
														"declarations": [
															{
																"constant": false,
																"id": 587,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "13575:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "13567:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 586,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13567:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 591,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 588,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "13583:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 589,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "13587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13567:21:0"
													},
													{
														"assignments": [
															593
														],
														"declarations": [
															{
																"constant": false,
																"id": 593,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "13655:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "13647:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 592,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13647:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 594,
														"nodeType": "VariableDeclarationStatement",
														"src": "13647:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "13727:122:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13745:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13762:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13765:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13772:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "13768:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13768:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "13755:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13755:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "13749:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13792:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "13809:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "13813:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13805:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13805:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "13824:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "13828:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13821:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13821:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13801:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13801:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "13792:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "13813:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "13828:5:0",
																"valueSize": 1
															},
															{
																"declaration": 593,
																"isOffset": false,
																"isSlot": false,
																"src": "13792:5:0",
																"valueSize": 1
															},
															{
																"declaration": 577,
																"isOffset": false,
																"isSlot": false,
																"src": "13762:1:0",
																"valueSize": 1
															},
															{
																"declaration": 579,
																"isOffset": false,
																"isSlot": false,
																"src": "13765:1:0",
																"valueSize": 1
															}
														],
														"id": 595,
														"nodeType": "InlineAssembly",
														"src": "13718:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13930:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13930:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 604,
														"nodeType": "IfStatement",
														"src": "13926:368:0",
														"trueBody": {
															"id": 603,
															"nodeType": "Block",
															"src": "13942:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 599,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "14260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 600,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "14268:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14260:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 585,
																	"id": 602,
																	"nodeType": "Return",
																	"src": "14253:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 605,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "14400:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 606,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "14415:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14400:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 612,
														"nodeType": "IfStatement",
														"src": "14396:88:0",
														"trueBody": {
															"id": 611,
															"nodeType": "Block",
															"src": "14422:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 608,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "14447:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14447:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 610,
																	"nodeType": "RevertStatement",
																	"src": "14440:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															614
														],
														"declarations": [
															{
																"constant": false,
																"id": 614,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "14747:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "14739:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 613,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14739:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 615,
														"nodeType": "VariableDeclarationStatement",
														"src": "14739:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "14779:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "14848:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "14868:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14871:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "14874:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "14861:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14861:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "14848:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14968:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "14981:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "14991:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "15002:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "14988:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14988:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14977:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14977:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "14968:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15026:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "15039:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "15046:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15035:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15035:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "15026:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 581,
																"isOffset": false,
																"isSlot": false,
																"src": "14874:11:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15002:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15026:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15039:5:0",
																"valueSize": 1
															},
															{
																"declaration": 593,
																"isOffset": false,
																"isSlot": false,
																"src": "14968:5:0",
																"valueSize": 1
															},
															{
																"declaration": 593,
																"isOffset": false,
																"isSlot": false,
																"src": "14981:5:0",
																"valueSize": 1
															},
															{
																"declaration": 614,
																"isOffset": false,
																"isSlot": false,
																"src": "14848:9:0",
																"valueSize": 1
															},
															{
																"declaration": 614,
																"isOffset": false,
																"isSlot": false,
																"src": "14991:9:0",
																"valueSize": 1
															},
															{
																"declaration": 614,
																"isOffset": false,
																"isSlot": false,
																"src": "15046:9:0",
																"valueSize": 1
															},
															{
																"declaration": 577,
																"isOffset": false,
																"isSlot": false,
																"src": "14868:1:0",
																"valueSize": 1
															},
															{
																"declaration": 579,
																"isOffset": false,
																"isSlot": false,
																"src": "14871:1:0",
																"valueSize": 1
															}
														],
														"id": 616,
														"nodeType": "InlineAssembly",
														"src": "14770:300:0"
													},
													{
														"assignments": [
															618
														],
														"declarations": [
															{
																"constant": false,
																"id": 618,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "15282:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "15274:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 617,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15274:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 625,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 619,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "15289:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15304:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 621,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "15308:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15304:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 623,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15303:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15289:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15274:46:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "15343:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "15408:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "15427:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "15440:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "15423:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15423:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "15408:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15512:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "15525:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "15532:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "15521:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15521:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "15512:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15652:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15672:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "15675:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "15668:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15668:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "15682:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15664:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15664:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15689:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15660:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15660:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "15652:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 581,
																"isOffset": false,
																"isSlot": false,
																"src": "15408:11:0",
																"valueSize": 1
															},
															{
																"declaration": 581,
																"isOffset": false,
																"isSlot": false,
																"src": "15427:11:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15512:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15525:5:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15440:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15532:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15652:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15675:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15682:4:0",
																"valueSize": 1
															}
														],
														"id": 626,
														"nodeType": "InlineAssembly",
														"src": "15334:371:0"
													},
													{
														"expression": {
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 627,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "15771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 628,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "15780:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 629,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "15788:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15780:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15771:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 632,
														"nodeType": "ExpressionStatement",
														"src": "15771:21:0"
													},
													{
														"assignments": [
															634
														],
														"declarations": [
															{
																"constant": false,
																"id": 634,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "16118:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "16110:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 633,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16110:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 641,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16129:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 636,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "16133:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16129:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 638,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16128:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16148:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "16128:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16110:39:0"
													},
													{
														"expression": {
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 642,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16366:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 644,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16381:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 645,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16395:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16381:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16377:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16366:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 649,
														"nodeType": "ExpressionStatement",
														"src": "16366:36:0"
													},
													{
														"expression": {
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 650,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16435:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 652,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16450:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 653,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16464:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16450:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16446:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16435:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 657,
														"nodeType": "ExpressionStatement",
														"src": "16435:36:0"
													},
													{
														"expression": {
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 658,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 660,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16520:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 661,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16534:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16520:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16516:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16505:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 665,
														"nodeType": "ExpressionStatement",
														"src": "16505:36:0"
													},
													{
														"expression": {
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 666,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16575:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 668,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16590:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 669,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16604:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16590:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16586:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16575:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 673,
														"nodeType": "ExpressionStatement",
														"src": "16575:36:0"
													},
													{
														"expression": {
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 674,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16645:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16656:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16660:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 677,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16674:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16660:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16656:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16645:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 681,
														"nodeType": "ExpressionStatement",
														"src": "16645:36:0"
													},
													{
														"expression": {
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 682,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16727:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 684,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16731:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 685,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16745:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16731:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16727:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 689,
														"nodeType": "ExpressionStatement",
														"src": "16716:36:0"
													},
													{
														"expression": {
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 690,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "17186:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 691,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "17195:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 692,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "17203:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17195:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17186:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "17186:24:0"
													},
													{
														"expression": {
															"id": 696,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "17231:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 585,
														"id": 697,
														"nodeType": "Return",
														"src": "17224:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12820:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "13147:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "13162:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13154:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "13173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "13184:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13176:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13153:43:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "13228:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13220:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13219:16:0"
									},
									"scope": 1366,
									"src": "13138:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "17496:192:0",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "17514:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "17506:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"id": 718,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "17530:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 719,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "17533:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 720,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "17536:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															700,
															743
														],
														"referencedDeclaration": 700,
														"src": "17523:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17523:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17506:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 724,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "17579:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$323",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$323",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 723,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "17562:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17562:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 727,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "17599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 728,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "17602:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 729,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "17605:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 726,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "17592:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17592:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17620:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17592:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17562:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "IfStatement",
												"src": "17558:101:0",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "17623:36:0",
													"statements": [
														{
															"expression": {
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 734,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17637:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17647:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17637:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 737,
															"nodeType": "ExpressionStatement",
															"src": "17637:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 740,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 716,
													"src": "17675:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 741,
												"nodeType": "Return",
												"src": "17668:13:0"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "17260:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "17395:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "17410:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17402:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "17421:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17413:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "17432:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17424:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "17454:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17445:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "Rounding",
														"nameLocations": [
															"17445:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "17445:8:0"
													},
													"referencedDeclaration": 323,
													"src": "17445:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17401:62:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17486:9:0"
									},
									"scope": 1366,
									"src": "17386:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "17979:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "17993:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17998:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17993:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "17989:45:0",
												"trueBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "18001:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18022:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 750,
															"id": 755,
															"nodeType": "Return",
															"src": "18015:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18721:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "18713:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18713:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 762,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "18741:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 761,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1022,
																			1057
																		],
																		"referencedDeclaration": 1022,
																		"src": "18736:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18736:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18747:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18736:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 766,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18735:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18730:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18713:36:0"
											},
											{
												"id": 853,
												"nodeType": "UncheckedBlock",
												"src": "19150:408:0",
												"statements": [
													{
														"expression": {
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 769,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19174:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 770,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19184:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 771,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19193:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 772,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19197:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19193:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19184:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 775,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19183:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19208:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19183:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19174:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 779,
														"nodeType": "ExpressionStatement",
														"src": "19174:35:0"
													},
													{
														"expression": {
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 780,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19223:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 781,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19233:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 782,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19242:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 783,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19246:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19242:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19233:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 786,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19232:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19257:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19232:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19223:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 790,
														"nodeType": "ExpressionStatement",
														"src": "19223:35:0"
													},
													{
														"expression": {
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 791,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19272:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 792,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19282:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 793,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19291:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 794,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19295:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19291:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19282:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19281:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19306:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19281:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19272:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 801,
														"nodeType": "ExpressionStatement",
														"src": "19272:35:0"
													},
													{
														"expression": {
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 802,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19321:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 803,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19331:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 804,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19340:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 805,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19344:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19340:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19331:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 808,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19330:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19355:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19330:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19321:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 812,
														"nodeType": "ExpressionStatement",
														"src": "19321:35:0"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 813,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19370:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 814,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19380:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 815,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19389:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 816,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19393:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19389:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19380:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 819,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19379:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19404:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19379:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19370:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "19370:35:0"
													},
													{
														"expression": {
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19419:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 825,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19429:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 826,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19438:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 827,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19442:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19438:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19429:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19428:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19453:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19428:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19419:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 834,
														"nodeType": "ExpressionStatement",
														"src": "19419:35:0"
													},
													{
														"expression": {
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 835,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19468:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 836,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19478:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 837,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19487:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 838,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19491:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19487:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19478:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 841,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19477:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19477:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19468:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 845,
														"nodeType": "ExpressionStatement",
														"src": "19468:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 847,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "19528:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 848,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "19536:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 849,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "19540:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19536:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 846,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "19524:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19524:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 750,
														"id": 852,
														"nodeType": "Return",
														"src": "19517:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "17694:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "17931:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17944:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "17936:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17935:11:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "17970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17969:9:0"
									},
									"scope": 1366,
									"src": "17922:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "19740:164:0",
										"statements": [
											{
												"id": 888,
												"nodeType": "UncheckedBlock",
												"src": "19750:148:0",
												"statements": [
													{
														"assignments": [
															867
														],
														"declarations": [
															{
																"constant": false,
																"id": 867,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19782:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 888,
																"src": "19774:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 866,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19774:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 871,
														"initialValue": {
															"arguments": [
																{
																	"id": 869,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "19796:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 868,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	855,
																	890
																],
																"referencedDeclaration": 855,
																"src": "19791:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19791:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19774:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 872,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "19819:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 874,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 861,
																						"src": "19846:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 873,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "19829:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19829:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 878,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 876,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 867,
																						"src": "19859:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 877,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 867,
																						"src": "19868:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19859:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 879,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 858,
																					"src": "19877:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19859:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19829:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "19829:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19881:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19828:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19819:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 865,
														"id": 887,
														"nodeType": "Return",
														"src": "19812:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "19570:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "19673:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19686:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "19678:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19698:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "19689:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 859,
														"name": "Rounding",
														"nameLocations": [
															"19689:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "19689:8:0"
													},
													"referencedDeclaration": 323,
													"src": "19689:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19677:30:0"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "19731:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19730:9:0"
									},
									"scope": 1366,
									"src": "19664:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "20095:922:0",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20113:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "20105:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 901,
												"initialValue": {
													"hexValue": "30",
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20122:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20105:18:0"
											},
											{
												"id": 1018,
												"nodeType": "UncheckedBlock",
												"src": "20133:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20161:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20170:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "20161:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20176:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20161:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 916,
														"nodeType": "IfStatement",
														"src": "20157:99:0",
														"trueBody": {
															"id": 915,
															"nodeType": "Block",
															"src": "20179:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20197:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20207:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "20197:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 910,
																	"nodeType": "ExpressionStatement",
																	"src": "20197:13:0"
																},
																{
																	"expression": {
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 911,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20228:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20238:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "20228:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 914,
																	"nodeType": "ExpressionStatement",
																	"src": "20228:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20273:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20282:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "20273:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20287:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20273:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 931,
														"nodeType": "IfStatement",
														"src": "20269:96:0",
														"trueBody": {
															"id": 930,
															"nodeType": "Block",
															"src": "20290:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 922,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20308:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20318:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20308:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 925,
																	"nodeType": "ExpressionStatement",
																	"src": "20308:12:0"
																},
																{
																	"expression": {
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 926,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20338:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20348:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20338:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 929,
																	"nodeType": "ExpressionStatement",
																	"src": "20338:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20382:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20391:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "20382:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20396:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20382:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 946,
														"nodeType": "IfStatement",
														"src": "20378:96:0",
														"trueBody": {
															"id": 945,
															"nodeType": "Block",
															"src": "20399:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20417:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20427:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20417:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 940,
																	"nodeType": "ExpressionStatement",
																	"src": "20417:12:0"
																},
																{
																	"expression": {
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 941,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20447:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20457:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20447:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 944,
																	"nodeType": "ExpressionStatement",
																	"src": "20447:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20491:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20500:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "20491:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20505:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20491:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 961,
														"nodeType": "IfStatement",
														"src": "20487:96:0",
														"trueBody": {
															"id": 960,
															"nodeType": "Block",
															"src": "20508:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 952,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20526:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20536:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20526:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 955,
																	"nodeType": "ExpressionStatement",
																	"src": "20526:12:0"
																},
																{
																	"expression": {
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 956,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20556:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20566:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20556:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 959,
																	"nodeType": "ExpressionStatement",
																	"src": "20556:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20600:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20609:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "20600:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20613:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20600:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 976,
														"nodeType": "IfStatement",
														"src": "20596:93:0",
														"trueBody": {
															"id": 975,
															"nodeType": "Block",
															"src": "20616:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 967,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20634:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20644:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20634:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 970,
																	"nodeType": "ExpressionStatement",
																	"src": "20634:11:0"
																},
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20663:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20673:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20663:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "20663:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20706:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20715:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "20706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20706:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 991,
														"nodeType": "IfStatement",
														"src": "20702:93:0",
														"trueBody": {
															"id": 990,
															"nodeType": "Block",
															"src": "20722:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20750:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20740:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 985,
																	"nodeType": "ExpressionStatement",
																	"src": "20740:11:0"
																},
																{
																	"expression": {
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 986,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20769:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20779:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20769:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 989,
																	"nodeType": "ExpressionStatement",
																	"src": "20769:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20812:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20821:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "20812:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20825:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20812:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1006,
														"nodeType": "IfStatement",
														"src": "20808:93:0",
														"trueBody": {
															"id": 1005,
															"nodeType": "Block",
															"src": "20828:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20846:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20856:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20846:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "20846:11:0"
																},
																{
																	"expression": {
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20875:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20875:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1004,
																	"nodeType": "ExpressionStatement",
																	"src": "20875:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20918:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20918:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20931:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20918:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1017,
														"nodeType": "IfStatement",
														"src": "20914:64:0",
														"trueBody": {
															"id": 1016,
															"nodeType": "Block",
															"src": "20934:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1012,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20952:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20962:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20952:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1015,
																	"nodeType": "ExpressionStatement",
																	"src": "20952:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1019,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "21004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 897,
												"id": 1020,
												"nodeType": "Return",
												"src": "20997:13:0"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "19910:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "20043:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20056:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20048:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20047:15:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20086:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20085:9:0"
									},
									"scope": 1366,
									"src": "20034:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "21250:168:0",
										"statements": [
											{
												"id": 1055,
												"nodeType": "UncheckedBlock",
												"src": "21260:152:0",
												"statements": [
													{
														"assignments": [
															1034
														],
														"declarations": [
															{
																"constant": false,
																"id": 1034,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21292:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1055,
																"src": "21284:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1033,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1038,
														"initialValue": {
															"arguments": [
																{
																	"id": 1036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "21306:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1035,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1022,
																	1057
																],
																"referencedDeclaration": 1022,
																"src": "21301:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21301:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21284:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "21333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1041,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1028,
																						"src": "21360:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1040,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "21343:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21343:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1045,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1043,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21373:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1044,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1034,
																						"src": "21378:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21373:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1046,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "21387:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21373:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21343:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21399:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21343:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21395:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21342:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21333:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1032,
														"id": 1054,
														"nodeType": "Return",
														"src": "21326:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "21023:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "21179:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21192:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "21184:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21208:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "21199:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1027,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1026,
														"name": "Rounding",
														"nameLocations": [
															"21199:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "21199:8:0"
													},
													"referencedDeclaration": 323,
													"src": "21199:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21183:34:0"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "21241:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21240:9:0"
									},
									"scope": 1366,
									"src": "21170:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "21611:854:0",
										"statements": [
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21629:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1185,
														"src": "21621:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"hexValue": "30",
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21638:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21621:18:0"
											},
											{
												"id": 1182,
												"nodeType": "UncheckedBlock",
												"src": "21649:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "21677:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21686:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21692:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21686:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "21677:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1085,
														"nodeType": "IfStatement",
														"src": "21673:103:0",
														"trueBody": {
															"id": 1084,
															"nodeType": "Block",
															"src": "21696:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "21714:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21723:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21729:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "21723:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "21714:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1079,
																	"nodeType": "ExpressionStatement",
																	"src": "21714:17:0"
																},
																{
																	"expression": {
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1080,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "21749:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21759:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21749:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1083,
																	"nodeType": "ExpressionStatement",
																	"src": "21749:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "21793:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21802:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21808:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "21802:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "21793:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1102,
														"nodeType": "IfStatement",
														"src": "21789:103:0",
														"trueBody": {
															"id": 1101,
															"nodeType": "Block",
															"src": "21812:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1091,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "21830:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21839:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21845:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "21839:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "21830:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1096,
																	"nodeType": "ExpressionStatement",
																	"src": "21830:17:0"
																},
																{
																	"expression": {
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1097,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "21865:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21875:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21865:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1100,
																	"nodeType": "ExpressionStatement",
																	"src": "21865:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1103,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "21909:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21918:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21924:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "21918:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "21909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1119,
														"nodeType": "IfStatement",
														"src": "21905:103:0",
														"trueBody": {
															"id": 1118,
															"nodeType": "Block",
															"src": "21928:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1108,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "21946:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21955:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21961:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "21955:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "21946:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1113,
																	"nodeType": "ExpressionStatement",
																	"src": "21946:17:0"
																},
																{
																	"expression": {
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1114,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "21981:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21991:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21981:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1117,
																	"nodeType": "ExpressionStatement",
																	"src": "21981:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "22025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22034:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22034:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "22025:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1136,
														"nodeType": "IfStatement",
														"src": "22021:100:0",
														"trueBody": {
															"id": 1135,
															"nodeType": "Block",
															"src": "22043:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1125,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "22061:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22070:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22076:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "22070:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "22061:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1130,
																	"nodeType": "ExpressionStatement",
																	"src": "22061:16:0"
																},
																{
																	"expression": {
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1131,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22095:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22105:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22095:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1134,
																	"nodeType": "ExpressionStatement",
																	"src": "22095:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1137,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "22138:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22147:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22153:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "22147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "22138:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1153,
														"nodeType": "IfStatement",
														"src": "22134:100:0",
														"trueBody": {
															"id": 1152,
															"nodeType": "Block",
															"src": "22156:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1142,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "22174:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22183:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22189:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "22183:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "22174:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1147,
																	"nodeType": "ExpressionStatement",
																	"src": "22174:16:0"
																},
																{
																	"expression": {
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1148,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22208:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22218:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22208:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1151,
																	"nodeType": "ExpressionStatement",
																	"src": "22208:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "22251:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22260:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22266:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "22260:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "22251:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1170,
														"nodeType": "IfStatement",
														"src": "22247:100:0",
														"trueBody": {
															"id": 1169,
															"nodeType": "Block",
															"src": "22269:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1159,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "22287:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22296:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22302:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "22296:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "22287:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1164,
																	"nodeType": "ExpressionStatement",
																	"src": "22287:16:0"
																},
																{
																	"expression": {
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1165,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22321:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22321:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "22321:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1171,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "22364:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22373:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22379:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "22364:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1181,
														"nodeType": "IfStatement",
														"src": "22360:66:0",
														"trueBody": {
															"id": 1180,
															"nodeType": "Block",
															"src": "22382:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1176,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22400:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22410:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22400:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1179,
																	"nodeType": "ExpressionStatement",
																	"src": "22400:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1183,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1066,
													"src": "22452:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1184,
												"nodeType": "Return",
												"src": "22445:13:0"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "21424:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "21558:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21572:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "21564:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21563:15:0"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "21602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21601:9:0"
									},
									"scope": 1366,
									"src": "21549:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "22700:170:0",
										"statements": [
											{
												"id": 1219,
												"nodeType": "UncheckedBlock",
												"src": "22710:154:0",
												"statements": [
													{
														"assignments": [
															1198
														],
														"declarations": [
															{
																"constant": false,
																"id": 1198,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22742:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1219,
																"src": "22734:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1197,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22734:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1202,
														"initialValue": {
															"arguments": [
																{
																	"id": 1200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "22757:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1199,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1186,
																	1221
																],
																"referencedDeclaration": 1186,
																"src": "22751:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22751:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22734:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "22784:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1205,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "22811:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1204,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "22794:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22794:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1207,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22824:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1208,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1198,
																						"src": "22830:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22824:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1210,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "22839:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22824:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22794:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22851:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22794:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22847:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22793:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22784:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1196,
														"id": 1218,
														"nodeType": "Return",
														"src": "22777:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "22471:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "22628:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22642:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "22634:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22658:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "22649:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1190,
														"name": "Rounding",
														"nameLocations": [
															"22649:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "22649:8:0"
													},
													"referencedDeclaration": 323,
													"src": "22649:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22633:34:0"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "22691:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22690:9:0"
									},
									"scope": 1366,
									"src": "22619:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "23190:600:0",
										"statements": [
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23208:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "23200:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"hexValue": "30",
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23217:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23200:18:0"
											},
											{
												"id": 1304,
												"nodeType": "UncheckedBlock",
												"src": "23228:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23256:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23265:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "23256:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23271:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23256:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1247,
														"nodeType": "IfStatement",
														"src": "23252:98:0",
														"trueBody": {
															"id": 1246,
															"nodeType": "Block",
															"src": "23274:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1238,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23292:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23302:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "23292:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1241,
																	"nodeType": "ExpressionStatement",
																	"src": "23292:13:0"
																},
																{
																	"expression": {
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23333:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23323:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1245,
																	"nodeType": "ExpressionStatement",
																	"src": "23323:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23367:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23376:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "23367:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23367:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1262,
														"nodeType": "IfStatement",
														"src": "23363:95:0",
														"trueBody": {
															"id": 1261,
															"nodeType": "Block",
															"src": "23384:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23402:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23412:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "23402:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1256,
																	"nodeType": "ExpressionStatement",
																	"src": "23402:12:0"
																},
																{
																	"expression": {
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23432:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23442:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23432:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1260,
																	"nodeType": "ExpressionStatement",
																	"src": "23432:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23475:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23484:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "23475:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23489:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23475:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1277,
														"nodeType": "IfStatement",
														"src": "23471:95:0",
														"trueBody": {
															"id": 1276,
															"nodeType": "Block",
															"src": "23492:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1268,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23510:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23520:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "23510:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1271,
																	"nodeType": "ExpressionStatement",
																	"src": "23510:12:0"
																},
																{
																	"expression": {
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1272,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23540:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23550:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23540:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1275,
																	"nodeType": "ExpressionStatement",
																	"src": "23540:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23583:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23592:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "23583:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23597:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23583:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1292,
														"nodeType": "IfStatement",
														"src": "23579:95:0",
														"trueBody": {
															"id": 1291,
															"nodeType": "Block",
															"src": "23600:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23618:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23628:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23618:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1286,
																	"nodeType": "ExpressionStatement",
																	"src": "23618:12:0"
																},
																{
																	"expression": {
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23648:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23658:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23648:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1290,
																	"nodeType": "ExpressionStatement",
																	"src": "23648:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23700:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23691:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23704:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23691:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1303,
														"nodeType": "IfStatement",
														"src": "23687:64:0",
														"trueBody": {
															"id": 1302,
															"nodeType": "Block",
															"src": "23707:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1298,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23725:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23735:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23725:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "23725:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1305,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1230,
													"src": "23777:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1306,
												"nodeType": "Return",
												"src": "23770:13:0"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "22876:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "23136:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23151:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23143:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23142:15:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23181:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23180:9:0"
									},
									"scope": 1366,
									"src": "23127:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "24027:177:0",
										"statements": [
											{
												"id": 1344,
												"nodeType": "UncheckedBlock",
												"src": "24037:161:0",
												"statements": [
													{
														"assignments": [
															1320
														],
														"declarations": [
															{
																"constant": false,
																"id": 1320,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "24069:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1344,
																"src": "24061:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1319,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1324,
														"initialValue": {
															"arguments": [
																{
																	"id": 1322,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "24085:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1321,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1308,
																	1346
																],
																"referencedDeclaration": 1308,
																"src": "24078:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24078:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "24061:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "24112:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1327,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1314,
																						"src": "24139:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1326,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "24122:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24122:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1334,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1329,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24152:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1332,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1330,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1320,
																									"src": "24158:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1331,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24168:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "24158:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1333,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "24157:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24152:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1335,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1311,
																					"src": "24173:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24152:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "24122:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24185:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "24122:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24181:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24121:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "24112:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1318,
														"id": 1343,
														"nodeType": "Return",
														"src": "24105:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "23796:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "23954:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23969:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "23961:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23985:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "23976:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "Rounding",
														"nameLocations": [
															"23976:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "23976:8:0"
													},
													"referencedDeclaration": 323,
													"src": "23976:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23960:34:0"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "24018:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24017:9:0"
									},
									"scope": 1366,
									"src": "23945:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "24402:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1357,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "24425:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$323",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$323",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24419:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1355,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "24419:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24419:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24437:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "24419:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24442:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "24419:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1363,
												"nodeType": "Return",
												"src": "24412:31:0"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "24210:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "24337:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24363:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "24354:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1348,
														"name": "Rounding",
														"nameLocations": [
															"24354:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "24354:8:0"
													},
													"referencedDeclaration": 323,
													"src": "24354:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24353:19:0"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "24396:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24395:6:0"
									},
									"scope": 1366,
									"src": "24328:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3301,
							"src": "9538:14914:0",
							"usedErrors": [
								318
							],
							"usedEvents": []
						},
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "24576:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1368,
								"nodeType": "StructuredDocumentation",
								"src": "24604:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1616,
							"linearizedBaseContracts": [
								1616
							],
							"name": "Strings",
							"nameLocation": "24647:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1371,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "24686:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1616,
									"src": "24661:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1369,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "24661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24699:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1374,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "24746:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1616,
									"src": "24723:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1372,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "24723:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24763:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "24772:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1381,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "24864:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24901:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24893:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "24916:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24908:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24892:31:0"
									},
									"src": "24858:66:0"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "25096:627:0",
										"statements": [
											{
												"id": 1427,
												"nodeType": "UncheckedBlock",
												"src": "25106:611:0",
												"statements": [
													{
														"assignments": [
															1390
														],
														"declarations": [
															{
																"constant": false,
																"id": 1390,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "25138:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1427,
																"src": "25130:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1389,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25130:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1393,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "25158:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1391,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "25147:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1366_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25152:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1186,
																	"src": "25147:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25147:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25167:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "25147:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25130:38:0"
													},
													{
														"assignments": [
															1399
														],
														"declarations": [
															{
																"constant": false,
																"id": 1399,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "25196:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1427,
																"src": "25182:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1398,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25182:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1404,
														"initialValue": {
															"arguments": [
																{
																	"id": 1402,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "25216:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "25205:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25209:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25205:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25182:41:0"
													},
													{
														"assignments": [
															1406
														],
														"declarations": [
															{
																"constant": false,
																"id": 1406,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "25245:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1427,
																"src": "25237:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25237:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1407,
														"nodeType": "VariableDeclarationStatement",
														"src": "25237:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "25318:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "25336:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "25347:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25359:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "25363:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25355:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25355:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25343:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25343:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "25336:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1399,
																"isOffset": false,
																"isSlot": false,
																"src": "25347:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1390,
																"isOffset": false,
																"isSlot": false,
																"src": "25363:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1406,
																"isOffset": false,
																"isSlot": false,
																"src": "25336:3:0",
																"valueSize": 1
															}
														],
														"id": 1408,
														"nodeType": "InlineAssembly",
														"src": "25309:76:0"
													},
													{
														"body": {
															"id": 1423,
															"nodeType": "Block",
															"src": "25411:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "25429:5:0",
																		"subExpression": {
																			"id": 1410,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1406,
																			"src": "25429:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1412,
																	"nodeType": "ExpressionStatement",
																	"src": "25429:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "25512:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "25542:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "25556:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "25563:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "25552:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "25552:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "25568:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "25547:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25547:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "25534:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25534:46:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "25534:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1371,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "25568:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1406,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "25542:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1384,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "25556:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1413,
																	"nodeType": "InlineAssembly",
																	"src": "25503:95:0"
																},
																{
																	"expression": {
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1414,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "25615:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25624:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "25615:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1417,
																	"nodeType": "ExpressionStatement",
																	"src": "25615:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1418,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "25648:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25648:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1422,
																	"nodeType": "IfStatement",
																	"src": "25644:21:0",
																	"trueBody": {
																		"id": 1421,
																		"nodeType": "Break",
																		"src": "25660:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25405:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1424,
														"nodeType": "WhileStatement",
														"src": "25398:282:0"
													},
													{
														"expression": {
															"id": 1425,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "25700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1388,
														"id": 1426,
														"nodeType": "Return",
														"src": "25693:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "24930:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "25034:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25051:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "25043:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25042:15:0"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "25081:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25081:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25080:15:0"
									},
									"scope": 1616,
									"src": "25025:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "25899:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1440,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "25930:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25938:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "25930:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25948:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "25930:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25942:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1449,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "25976:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1447,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "25961:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$313_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "25972:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "25961:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25961:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1446,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "25952:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25952:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25916:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1437,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "25916:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25923:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "25916:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25916:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1453,
												"nodeType": "Return",
												"src": "25909:75:0"
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "25729:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "25832:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25854:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "25847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1431,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25846:14:0"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "25884:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25883:15:0"
									},
									"scope": 1616,
									"src": "25823:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "26170:100:0",
										"statements": [
											{
												"id": 1473,
												"nodeType": "UncheckedBlock",
												"src": "26180:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "26223:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1467,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1458,
																				"src": "26242:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1465,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1366,
																				"src": "26230:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1366_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26235:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1308,
																			"src": "26230:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26230:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26251:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "26230:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1463,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1475,
																	1558,
																	1578
																],
																"referencedDeclaration": 1558,
																"src": "26211:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26211:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1462,
														"id": 1472,
														"nodeType": "Return",
														"src": "26204:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "25997:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "26105:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26125:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "26117:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26116:15:0"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "26155:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26155:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26154:15:0"
									},
									"scope": 1616,
									"src": "26096:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "26483:435:0",
										"statements": [
											{
												"assignments": [
													1486
												],
												"declarations": [
													{
														"constant": false,
														"id": 1486,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "26501:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "26493:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1488,
												"initialValue": {
													"id": 1487,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1478,
													"src": "26514:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26493:26:0"
											},
											{
												"assignments": [
													1490
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "26542:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "26529:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26561:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1494,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "26565:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26561:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26574:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "26561:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "26551:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26555:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26551:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26529:47:0"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1500,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "26586:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1502,
														"indexExpression": {
															"hexValue": "30",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26593:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26586:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26598:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "26586:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "26586:15:0"
											},
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1506,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "26611:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1508,
														"indexExpression": {
															"hexValue": "31",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26611:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26623:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "26611:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "26611:15:0"
											},
											{
												"body": {
													"id": 1540,
													"nodeType": "Block",
													"src": "26681:95:0",
													"statements": [
														{
															"expression": {
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1526,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "26695:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1528,
																	"indexExpression": {
																		"id": 1527,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "26702:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "26695:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1529,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "26707:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1533,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1530,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1486,
																			"src": "26718:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26731:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "26718:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26707:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "26695:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1535,
															"nodeType": "ExpressionStatement",
															"src": "26695:40:0"
														},
														{
															"expression": {
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1536,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "26749:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26749:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "26749:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1520,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "26669:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26673:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26669:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1541,
												"initializationExpression": {
													"assignments": [
														1513
													],
													"declarations": [
														{
															"constant": false,
															"id": 1513,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "26649:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1541,
															"src": "26641:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1512,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "26641:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1519,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26653:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1515,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "26657:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26653:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26666:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "26653:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "26641:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "26676:3:0",
														"subExpression": {
															"id": 1523,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "26678:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1525,
													"nodeType": "ExpressionStatement",
													"src": "26676:3:0"
												},
												"nodeType": "ForStatement",
												"src": "26636:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1542,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "26789:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26803:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26789:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1551,
												"nodeType": "IfStatement",
												"src": "26785:96:0",
												"trueBody": {
													"id": 1550,
													"nodeType": "Block",
													"src": "26806:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1546,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "26856:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1547,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "26863:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1545,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "26827:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26827:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1549,
															"nodeType": "RevertStatement",
															"src": "26820:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "26904:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "26897:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1552,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "26897:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26897:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1484,
												"id": 1556,
												"nodeType": "Return",
												"src": "26890:21:0"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "26276:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "26402:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26422:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "26414:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "26437:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "26429:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26413:31:0"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "26468:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26467:15:0"
									},
									"scope": 1616,
									"src": "26393:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "27150:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1571,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "27195:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27187:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1569,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "27187:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27187:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27179:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1567,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27179:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27179:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1574,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "27203:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1566,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1475,
															1558,
															1578
														],
														"referencedDeclaration": 1558,
														"src": "27167:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27167:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1565,
												"id": 1576,
												"nodeType": "Return",
												"src": "27160:58:0"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "26924:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "27086:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "27106:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "27098:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27097:14:0"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "27135:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27134:15:0"
									},
									"scope": 1616,
									"src": "27077:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "27380:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "27403:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27397:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1588,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27397:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27397:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27406:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "27397:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1595,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "27422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1593,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27416:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27416:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27425:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "27416:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27397:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1602,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1581,
																			"src": "27451:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27445:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1600,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "27445:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27445:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1599,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "27435:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27435:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1608,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "27474:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1606,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "27468:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27468:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1605,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "27458:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27458:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "27435:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27397:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1613,
												"nodeType": "Return",
												"src": "27390:87:0"
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "27231:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "27311:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27331:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "27317:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27348:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "27334:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27334:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27316:34:0"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "27374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27373:6:0"
									},
									"scope": 1616,
									"src": "27302:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3301,
							"src": "24639:2847:0",
							"usedErrors": [
								1381
							],
							"usedEvents": []
						},
						{
							"id": 1617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "27610:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1618,
								"nodeType": "StructuredDocumentation",
								"src": "27636:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1637,
							"linearizedBaseContracts": [
								1637
							],
							"name": "Context",
							"nameLocation": "28151:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "28227:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1623,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28244:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "28248:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "28244:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1622,
												"id": 1625,
												"nodeType": "Return",
												"src": "28237:17:0"
											}
										]
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "28174:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28184:2:0"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "28218:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28217:9:0"
									},
									"scope": 1637,
									"src": "28165:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "28334:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1632,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28351:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "28355:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "28351:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1631,
												"id": 1634,
												"nodeType": "Return",
												"src": "28344:15:0"
											}
										]
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "28276:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28284:2:0"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "28318:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28318:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28317:16:0"
									},
									"scope": 1637,
									"src": "28267:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3301,
							"src": "28133:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "28522:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1639,
								"nodeType": "StructuredDocumentation",
								"src": "28548:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1654,
							"linearizedBaseContracts": [
								1654
							],
							"name": "IERC721Receiver",
							"nameLocation": "28711:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "28733:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "29247:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "29281:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "29273:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29307:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "29299:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29329:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "29321:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "29361:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "29346:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29346:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29263:108:0"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "29390:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29389:8:0"
									},
									"scope": 1654,
									"src": "29238:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3301,
							"src": "28701:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1655,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "29552:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1656,
								"nodeType": "StructuredDocumentation",
								"src": "29578:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1665,
							"linearizedBaseContracts": [
								1665
							],
							"name": "IERC165",
							"nameLocation": "29868:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "29882:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "30236:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "30261:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "30254:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30254:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30253:20:0"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "30297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30296:6:0"
									},
									"scope": 1665,
									"src": "30227:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3301,
							"src": "29858:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "30441:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1668,
										"name": "IERC165",
										"nameLocations": [
											"30750:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "30750:7:0"
									},
									"id": 1669,
									"nodeType": "InheritanceSpecifier",
									"src": "30750:7:0"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1667,
								"nodeType": "StructuredDocumentation",
								"src": "30468:259:0",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."
							},
							"fullyImplemented": false,
							"id": 1682,
							"linearizedBaseContracts": [
								1682,
								1665
							],
							"name": "IERC2981",
							"nameLocation": "30738:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "30764:231:0",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
									},
									"functionSelector": "2a55205a",
									"id": 1681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "31009:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31038:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "31030:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "31063:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "31055:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31020:58:0"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "31110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "31102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "31128:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "31120:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31101:41:0"
									},
									"scope": 1682,
									"src": "31000:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3301,
							"src": "30728:417:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1683,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "31279:24:0"
						},
						{
							"id": 1684,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "31454:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1686,
										"name": "IERC165",
										"nameLocations": [
											"31988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "31988:7:0"
									},
									"id": 1687,
									"nodeType": "InheritanceSpecifier",
									"src": "31988:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1685,
								"nodeType": "StructuredDocumentation",
								"src": "31481:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1704,
							"linearizedBaseContracts": [
								1704,
								1665
							],
							"name": "ERC165",
							"nameLocation": "31978:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1664
									],
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "32145:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1695,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "32162:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1697,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "32182:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1665_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1665_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1696,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "32177:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32177:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1665",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "32191:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "32177:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "32162:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1701,
												"nodeType": "Return",
												"src": "32155:47:0"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "32002:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "32072:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "32097:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "32090:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "32090:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32089:20:0"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "32139:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32139:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32138:6:0"
									},
									"scope": 1704,
									"src": "32063:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3301,
							"src": "31960:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32349:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1707,
										"name": "IERC165",
										"nameLocations": [
											"32465:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "32465:7:0"
									},
									"id": 1708,
									"nodeType": "InheritanceSpecifier",
									"src": "32465:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1706,
								"nodeType": "StructuredDocumentation",
								"src": "32376:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1818,
							"linearizedBaseContracts": [
								1818,
								1665
							],
							"name": "IERC721",
							"nameLocation": "32454:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "32479:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1717,
									"name": "Transfer",
									"nameLocation": "32578:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32603:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "32587:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32625:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "32609:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "32629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32586:67:0"
									},
									"src": "32572:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "32660:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1726,
									"name": "Approval",
									"nameLocation": "32765:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32790:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "32774:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "32813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "32797:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32839:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "32823:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32773:74:0"
									},
									"src": "32759:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "32854:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1735,
									"name": "ApprovalForAll",
									"nameLocation": "32982:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33013:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "32997:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33036:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "33020:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33051:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "33046:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32996:64:0"
									},
									"src": "32976:85:0"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "33067:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "33157:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33175:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "33167:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33166:15:0"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "33213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "33205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33204:17:0"
									},
									"scope": 1818,
									"src": "33148:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "33228:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "33373:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "33381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33380:17:0"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33429:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "33421:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33420:15:0"
									},
									"scope": 1818,
									"src": "33364:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "33442:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "34021:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "34038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34060:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "34052:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34072:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "34064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34096:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "34081:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1759,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34081:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34037:64:0"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34110:0:0"
									},
									"scope": 1818,
									"src": "34012:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "34117:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "34836:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34861:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "34853:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34875:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "34867:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34887:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "34879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34852:43:0"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34904:0:0"
									},
									"scope": 1818,
									"src": "34827:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "34911:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "35657:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "35670:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35692:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "35684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "35696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35669:43:0"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35721:0:0"
									},
									"scope": 1818,
									"src": "35648:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "35728:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "36194:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36210:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "36202:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36222:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "36214:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36201:29:0"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36239:0:0"
									},
									"scope": 1818,
									"src": "36185:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "36246:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "36575:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36601:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "36593:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "36616:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "36611:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36611:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36592:33:0"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36634:0:0"
									},
									"scope": 1818,
									"src": "36566:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "36641:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "36794:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36814:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "36806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36805:17:0"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36854:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "36846:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36845:18:0"
									},
									"scope": 1818,
									"src": "36785:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "36870:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "37022:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "37039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37062:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "37054:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37038:33:0"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "37095:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37094:6:0"
									},
									"scope": 1818,
									"src": "37013:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3301,
							"src": "32444:4659:0",
							"usedErrors": [],
							"usedEvents": [
								1717,
								1726,
								1735
							]
						},
						{
							"id": 1819,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "37237:24:0"
						},
						{
							"id": 1820,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "37398:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1822,
										"name": "IERC165",
										"nameLocations": [
											"37493:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1665,
										"src": "37493:7:0"
									},
									"id": 1823,
									"nodeType": "InheritanceSpecifier",
									"src": "37493:7:0"
								},
								{
									"baseName": {
										"id": 1824,
										"name": "IERC721",
										"nameLocations": [
											"37502:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1818,
										"src": "37502:7:0"
									},
									"id": 1825,
									"nodeType": "InheritanceSpecifier",
									"src": "37502:7:0"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1821,
								"nodeType": "StructuredDocumentation",
								"src": "37426:45:0",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 1838,
							"linearizedBaseContracts": [
								1838,
								1818,
								1665
							],
							"name": "IERC4906",
							"nameLocation": "37481:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "37516:201:0",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 1830,
									"name": "MetadataUpdate",
									"nameLocation": "37728:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "37751:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "37743:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37742:18:0"
									},
									"src": "37722:39:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "37767:212:0",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 1837,
									"name": "BatchMetadataUpdate",
									"nameLocation": "37990:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "38018:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "38010:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "38040:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "38032:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38009:42:0"
									},
									"src": "37984:68:0"
								}
							],
							"scope": 3301,
							"src": "37471:583:0",
							"usedErrors": [],
							"usedEvents": [
								1717,
								1726,
								1735,
								1830,
								1837
							]
						},
						{
							"id": 1839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "38230:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1841,
										"name": "IERC721",
										"nameLocations": [
											"38420:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1818,
										"src": "38420:7:0"
									},
									"id": 1842,
									"nodeType": "InheritanceSpecifier",
									"src": "38420:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1840,
								"nodeType": "StructuredDocumentation",
								"src": "38257:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1863,
							"linearizedBaseContracts": [
								1863,
								1818,
								1665
							],
							"name": "IERC721Metadata",
							"nameLocation": "38401:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "38434:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "38506:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38510:2:0"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "38536:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38535:15:0"
									},
									"scope": 1863,
									"src": "38497:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "38557:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "38631:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38637:2:0"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "38663:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38663:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38662:15:0"
									},
									"scope": 1863,
									"src": "38622:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "38684:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "38788:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38805:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "38797:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38796:17:0"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "38837:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38837:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38836:15:0"
									},
									"scope": 1863,
									"src": "38779:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3301,
							"src": "38391:463:0",
							"usedErrors": [],
							"usedEvents": [
								1717,
								1726,
								1735
							]
						},
						{
							"id": 1864,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "38990:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1866,
										"name": "Context",
										"nameLocations": [
											"39298:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1637,
										"src": "39298:7:0"
									},
									"id": 1867,
									"nodeType": "InheritanceSpecifier",
									"src": "39298:7:0"
								},
								{
									"baseName": {
										"id": 1868,
										"name": "ERC165",
										"nameLocations": [
											"39307:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1704,
										"src": "39307:6:0"
									},
									"id": 1869,
									"nodeType": "InheritanceSpecifier",
									"src": "39307:6:0"
								},
								{
									"baseName": {
										"id": 1870,
										"name": "IERC721",
										"nameLocations": [
											"39315:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1818,
										"src": "39315:7:0"
									},
									"id": 1871,
									"nodeType": "InheritanceSpecifier",
									"src": "39315:7:0"
								},
								{
									"baseName": {
										"id": 1872,
										"name": "IERC721Metadata",
										"nameLocations": [
											"39324:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1863,
										"src": "39324:15:0"
									},
									"id": 1873,
									"nodeType": "InheritanceSpecifier",
									"src": "39324:15:0"
								},
								{
									"baseName": {
										"id": 1874,
										"name": "IERC721Errors",
										"nameLocations": [
											"39341:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "39341:13:0"
									},
									"id": 1875,
									"nodeType": "InheritanceSpecifier",
									"src": "39341:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1865,
								"nodeType": "StructuredDocumentation",
								"src": "39023:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2856,
							"linearizedBaseContracts": [
								2856,
								162,
								1863,
								1818,
								1704,
								1665,
								1637
							],
							"name": "ERC721",
							"nameLocation": "39288:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1878,
									"libraryName": {
										"id": 1876,
										"name": "Strings",
										"nameLocations": [
											"39367:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1616,
										"src": "39367:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "39361:26:0",
									"typeName": {
										"id": 1877,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "39379:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1880,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "39426:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2856,
									"src": "39411:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1879,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39411:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1882,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "39473:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2856,
									"src": "39458:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1881,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39458:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1886,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "39531:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2856,
									"src": "39487:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1885,
										"keyName": "tokenId",
										"keyNameLocation": "39503:7:0",
										"keyType": {
											"id": 1883,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39495:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39487:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1884,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39514:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1890,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "39587:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2856,
									"src": "39545:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1889,
										"keyName": "owner",
										"keyNameLocation": "39561:5:0",
										"keyType": {
											"id": 1887,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39553:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39545:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1888,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39570:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1894,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "39647:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2856,
									"src": "39603:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1893,
										"keyName": "tokenId",
										"keyNameLocation": "39619:7:0",
										"keyType": {
											"id": 1891,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39611:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39603:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1892,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39630:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1900,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "39737:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2856,
									"src": "39669:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1899,
										"keyName": "owner",
										"keyNameLocation": "39685:5:0",
										"keyType": {
											"id": 1895,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39677:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39669:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1898,
											"keyName": "operator",
											"keyNameLocation": "39710:8:0",
											"keyType": {
												"id": 1896,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "39702:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "39694:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1897,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "39722:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "39931:57:0",
										"statements": [
											{
												"expression": {
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1908,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "39941:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1909,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "39949:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39941:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "39941:13:0"
											},
											{
												"expression": {
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1912,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "39964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1913,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "39974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39964:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "39964:17:0"
											}
										]
									},
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "39762:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1917,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "39901:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "39887:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1902,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39887:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "39922:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "39908:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1904,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39886:44:0"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39931:0:0"
									},
									"scope": 2856,
									"src": "39875:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1664,
										1703
									],
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "40163:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1928,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "40192:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1930,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "40212:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1818_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1818_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1929,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "40207:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40207:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1818",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40221:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "40207:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40192:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1934,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "40248:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1936,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "40268:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1863_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1863_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1935,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "40263:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40263:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1863",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40285:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "40263:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40248:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "40192:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1943,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "40336:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1941,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "40312:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2856_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40318:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1703,
															"src": "40312:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40312:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "40192:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1946,
												"nodeType": "Return",
												"src": "40173:175:0"
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "39994:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "40064:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1924,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1922,
												"name": "ERC165",
												"nameLocations": [
													"40131:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1704,
												"src": "40131:6:0"
											},
											{
												"id": 1923,
												"name": "IERC165",
												"nameLocations": [
													"40139:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1665,
												"src": "40139:7:0"
											}
										],
										"src": "40122:25:0"
									},
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "40089:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "40082:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1919,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "40082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40081:20:0"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "40157:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40156:6:0"
									},
									"scope": 2856,
									"src": "40055:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1743
									],
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "40486:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1956,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "40500:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40517:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1957,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40509:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40509:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40500:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1970,
												"nodeType": "IfStatement",
												"src": "40496:87:0",
												"trueBody": {
													"id": 1969,
													"nodeType": "Block",
													"src": "40521:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1965,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40569:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40561:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1963,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40561:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40561:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1962,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "40542:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40542:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1968,
															"nodeType": "RevertStatement",
															"src": "40535:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1971,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "40599:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1973,
													"indexExpression": {
														"id": 1972,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "40609:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40599:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1974,
												"nodeType": "Return",
												"src": "40592:23:0"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "40361:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "40423:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "40441:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "40433:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40432:15:0"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "40477:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40476:9:0"
									},
									"scope": 2856,
									"src": "40414:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1751
									],
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "40751:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1985,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "40782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1984,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "40768:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40768:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1987,
												"nodeType": "Return",
												"src": "40761:29:0"
											}
										]
									},
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "40628:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "40688:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "40696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40695:17:0"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "40742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40741:9:0"
									},
									"scope": 2856,
									"src": "40679:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1848
									],
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "40919:29:0",
										"statements": [
											{
												"expression": {
													"id": 1995,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1880,
													"src": "40936:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1994,
												"id": 1996,
												"nodeType": "Return",
												"src": "40929:12:0"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "40803:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "40868:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40872:2:0"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "40904:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1992,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40904:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40903:15:0"
									},
									"scope": 2856,
									"src": "40859:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "41074:31:0",
										"statements": [
											{
												"expression": {
													"id": 2004,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1882,
													"src": "41091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2005,
												"nodeType": "Return",
												"src": "41084:14:0"
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "40954:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "41021:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41027:2:0"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "41059:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41059:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41058:15:0"
									},
									"scope": 2856,
									"src": "41012:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "41250:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "41274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2015,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "41260:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41260:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2018,
												"nodeType": "ExpressionStatement",
												"src": "41260:22:0"
											},
											{
												"assignments": [
													2020
												],
												"declarations": [
													{
														"constant": false,
														"id": 2020,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "41307:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2042,
														"src": "41293:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2019,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "41293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2023,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2021,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "41317:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41317:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41293:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2026,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "41350:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41344:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2024,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "41344:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41344:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41359:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "41344:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41368:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "41344:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41417:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41344:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 2034,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "41386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2035,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "41395:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "41403:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "41395:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41395:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41372:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 2031,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "41372:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41379:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "41372:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41372:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2014,
												"id": 2041,
												"nodeType": "Return",
												"src": "41337:82:0"
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "41111:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "41180:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "41189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41188:17:0"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "41235:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2012,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41234:15:0"
									},
									"scope": 2856,
									"src": "41171:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "41734:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41751:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2048,
												"id": 2050,
												"nodeType": "Return",
												"src": "41744:9:0"
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "41432:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "41677:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41685:2:0"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "41719:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2046,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41719:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41718:15:0"
									},
									"scope": 2856,
									"src": "41668:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1791
									],
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "41878:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2061,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "41897:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "41901:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2063,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "41910:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41910:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2060,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2659,
															2725
														],
														"referencedDeclaration": 2659,
														"src": "41888:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41888:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2066,
												"nodeType": "ExpressionStatement",
												"src": "41888:35:0"
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "41766:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "41826:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41842:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "41834:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "41846:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41833:29:0"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41878:0:0"
									},
									"scope": 2856,
									"src": "41817:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1807
									],
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "42067:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2077,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "42091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2076,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "42077:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42077:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "42077:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2081,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "42130:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2080,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "42117:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42117:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2075,
												"id": 2083,
												"nodeType": "Return",
												"src": "42110:28:0"
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "41936:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "42000:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "42012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42011:17:0"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "42058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42057:9:0"
									},
									"scope": 2856,
									"src": "41991:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1799
									],
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "42287:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2094,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "42316:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42316:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2096,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "42330:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2097,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "42340:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2093,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "42297:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42297:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "42297:52:0"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "42151:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "42221:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42247:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "42239:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "42262:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "42257:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42238:33:0"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42287:0:0"
									},
									"scope": 2856,
									"src": "42212:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1817
									],
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "42516:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2111,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "42533:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2113,
														"indexExpression": {
															"id": 2112,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "42552:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "42533:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2115,
													"indexExpression": {
														"id": 2114,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "42559:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "42533:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2110,
												"id": 2116,
												"nodeType": "Return",
												"src": "42526:42:0"
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "42362:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "42431:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42456:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "42448:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42471:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "42463:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42447:33:0"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "42510:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42510:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42509:6:0"
									},
									"scope": 2856,
									"src": "42422:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1783
									],
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "42717:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2128,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2123,
														"src": "42731:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42745:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42737:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2129,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42737:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42737:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42731:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2142,
												"nodeType": "IfStatement",
												"src": "42727:87:0",
												"trueBody": {
													"id": 2141,
													"nodeType": "Block",
													"src": "42749:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42800:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "42792:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2135,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "42792:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42792:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2134,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "42770:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42770:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2140,
															"nodeType": "RevertStatement",
															"src": "42763:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2144
												],
												"declarations": [
													{
														"constant": false,
														"id": 2144,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "43040:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2163,
														"src": "43032:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2143,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43032:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2151,
												"initialValue": {
													"arguments": [
														{
															"id": 2146,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2123,
															"src": "43064:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2147,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "43068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2148,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "43077:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43077:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2145,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "43056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43056:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43032:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2152,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "43104:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2153,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "43121:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43104:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2162,
												"nodeType": "IfStatement",
												"src": "43100:109:0",
												"trueBody": {
													"id": 2161,
													"nodeType": "Block",
													"src": "43127:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2156,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "43169:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2157,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2125,
																		"src": "43175:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2158,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "43184:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2155,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "43148:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43148:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2160,
															"nodeType": "RevertStatement",
															"src": "43141:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "42581:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "42646:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42667:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "42659:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42681:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "42673:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42693:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "42685:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42658:43:0"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42717:0:0"
									},
									"scope": 2856,
									"src": "42637:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1773
									],
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "43357:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "43384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2176,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "43390:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "43394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43403:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2174,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2182,
															2208
														],
														"referencedDeclaration": 2208,
														"src": "43367:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43367:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "43367:39:0"
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "43221:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43290:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "43307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43329:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "43321:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "43333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43306:43:0"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43357:0:0"
									},
									"scope": 2856,
									"src": "43281:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1763
									],
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "43582:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2195,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "43605:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2196,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "43611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2197,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "43615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2194,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2164,
														"src": "43592:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43592:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "43592:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2201,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "43656:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2202,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "43662:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2203,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "43666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2204,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "43675:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2200,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "43633:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43633:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2206,
												"nodeType": "ExpressionStatement",
												"src": "43633:47:0"
											}
										]
									},
									"documentation": {
										"id": 2183,
										"nodeType": "StructuredDocumentation",
										"src": "43419:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43488:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43513:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "43505:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43527:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "43519:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43539:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "43531:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43561:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "43548:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43548:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43504:62:0"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43582:0:0"
									},
									"scope": 2856,
									"src": "43479:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "44276:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2216,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "44293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2218,
													"indexExpression": {
														"id": 2217,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "44301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44293:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2215,
												"id": 2219,
												"nodeType": "Return",
												"src": "44286:23:0"
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "43693:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "44210:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44227:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "44219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44218:17:0"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "44267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44266:9:0"
									},
									"scope": 2856,
									"src": "44201:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "44511:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2229,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "44528:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2231,
													"indexExpression": {
														"id": 2230,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "44544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44528:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2228,
												"id": 2232,
												"nodeType": "Return",
												"src": "44521:31:0"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "44322:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "44441:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44462:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "44454:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44453:17:0"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "44502:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44501:9:0"
									},
									"scope": 2856,
									"src": "44432:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2269,
										"nodeType": "Block",
										"src": "44979:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2246,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "45008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45027:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45019:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45019:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "45008:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2252,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2237,
																			"src": "45046:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2253,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "45055:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "45046:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2256,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2237,
																				"src": "45083:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2257,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2239,
																				"src": "45090:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2255,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "45066:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45066:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "45046:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2261,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2241,
																				"src": "45115:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2260,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "45102:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45102:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2263,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2239,
																		"src": "45127:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "45102:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "45046:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2266,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "45045:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "45008:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2268,
												"nodeType": "Return",
												"src": "44989:146:0"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "44565:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "44879:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44901:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "44893:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44916:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "44908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44933:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "44925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44892:49:0"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "44973:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44972:6:0"
									},
									"scope": 2856,
									"src": "44870:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "45673:271:0",
										"statements": [
											{
												"condition": {
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "45687:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2281,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2273,
																"src": "45702:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2282,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "45709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2283,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "45718:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2280,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "45688:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45688:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2305,
												"nodeType": "IfStatement",
												"src": "45683:255:0",
												"trueBody": {
													"id": 2304,
													"nodeType": "Block",
													"src": "45728:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2286,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "45746:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "45763:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "45755:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2287,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "45755:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45755:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "45746:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2302,
																"nodeType": "Block",
																"src": "45844:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2298,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2275,
																					"src": "45896:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2299,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2277,
																					"src": "45905:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2297,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "45869:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45869:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2301,
																		"nodeType": "RevertStatement",
																		"src": "45862:51:0"
																	}
																]
															},
															"id": 2303,
															"nodeType": "IfStatement",
															"src": "45742:186:0",
															"trueBody": {
																"id": 2296,
																"nodeType": "Block",
																"src": "45767:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2293,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2277,
																					"src": "45815:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2292,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "45792:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45792:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2295,
																		"nodeType": "RevertStatement",
																		"src": "45785:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "45148:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "45585:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "45610:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "45602:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45625:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "45617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "45634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45601:49:0"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45673:0:0"
									},
									"scope": 2856,
									"src": "45576:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "46661:78:0",
										"statements": [
											{
												"id": 2321,
												"nodeType": "UncheckedBlock",
												"src": "46671:62:0",
												"statements": [
													{
														"expression": {
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2315,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "46695:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2317,
																"indexExpression": {
																	"id": 2316,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "46705:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "46695:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "46717:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "46695:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2320,
														"nodeType": "ExpressionStatement",
														"src": "46695:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2308,
										"nodeType": "StructuredDocumentation",
										"src": "45950:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "46595:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "46620:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "46612:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "46637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "46629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2311,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "46629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46611:32:0"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46661:0:0"
									},
									"scope": 2856,
									"src": "46586:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "47427:700:0",
										"statements": [
											{
												"assignments": [
													2336
												],
												"declarations": [
													{
														"constant": false,
														"id": 2336,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "47445:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2412,
														"src": "47437:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2335,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47437:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2340,
												"initialValue": {
													"arguments": [
														{
															"id": 2338,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "47461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2337,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "47452:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47452:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47437:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2341,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "47529:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47537:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47537:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47537:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47529:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2354,
												"nodeType": "IfStatement",
												"src": "47525:86:0",
												"trueBody": {
													"id": 2353,
													"nodeType": "Block",
													"src": "47549:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2348,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2336,
																		"src": "47580:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2349,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2330,
																		"src": "47586:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2350,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2328,
																		"src": "47592:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2347,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2307,
																	"src": "47563:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47563:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2352,
															"nodeType": "ExpressionStatement",
															"src": "47563:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2355,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2336,
														"src": "47655:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47663:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47663:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47655:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "47651:256:0",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "47675:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47788:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47780:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2362,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47780:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47780:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2366,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2328,
																		"src": "47792:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47809:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47801:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2367,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47801:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47801:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47813:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2361,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2659,
																		2725
																	],
																	"referencedDeclaration": 2725,
																	"src": "47771:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47771:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2373,
															"nodeType": "ExpressionStatement",
															"src": "47771:48:0"
														},
														{
															"id": 2380,
															"nodeType": "UncheckedBlock",
															"src": "47834:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2374,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1890,
																				"src": "47862:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2376,
																			"indexExpression": {
																				"id": 2375,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2336,
																				"src": "47872:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47862:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47881:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47862:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "47862:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2383,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "47921:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47935:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47927:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2384,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47927:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47927:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47921:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2397,
												"nodeType": "IfStatement",
												"src": "47917:107:0",
												"trueBody": {
													"id": 2396,
													"nodeType": "Block",
													"src": "47939:85:0",
													"statements": [
														{
															"id": 2395,
															"nodeType": "UncheckedBlock",
															"src": "47953:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2389,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1890,
																				"src": "47981:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2391,
																			"indexExpression": {
																				"id": 2390,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2326,
																				"src": "47991:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47981:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47998:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47981:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "47981:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2398,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "48034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2400,
														"indexExpression": {
															"id": 2399,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "48042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "48034:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2401,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "48053:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48034:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2403,
												"nodeType": "ExpressionStatement",
												"src": "48034:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2405,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "48080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "48086:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "48090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2404,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "48071:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48071:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2409,
												"nodeType": "EmitStatement",
												"src": "48066:32:0"
											},
											{
												"expression": {
													"id": 2410,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2336,
													"src": "48116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2334,
												"id": 2411,
												"nodeType": "Return",
												"src": "48109:11:0"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "46745:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "47341:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47357:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "47349:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "47361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "47386:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "47378:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47348:43:0"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "47418:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47417:9:0"
									},
									"scope": 2856,
									"src": "47332:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "48502:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2421,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "48516:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2422,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48522:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48522:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48516:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2435,
												"nodeType": "IfStatement",
												"src": "48512:87:0",
												"trueBody": {
													"id": 2434,
													"nodeType": "Block",
													"src": "48534:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48585:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48577:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2428,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48577:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48577:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2427,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "48555:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48555:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2433,
															"nodeType": "RevertStatement",
															"src": "48548:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2437
												],
												"declarations": [
													{
														"constant": false,
														"id": 2437,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "48616:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2462,
														"src": "48608:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "48608:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2446,
												"initialValue": {
													"arguments": [
														{
															"id": 2439,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "48640:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2440,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "48644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48653:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48653:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48653:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2438,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "48632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48632:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48608:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2447,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "48678:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48703:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2448,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48695:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48695:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48678:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2461,
												"nodeType": "IfStatement",
												"src": "48674:96:0",
												"trueBody": {
													"id": 2460,
													"nodeType": "Block",
													"src": "48707:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48756:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48748:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2454,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48748:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48748:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2453,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "48728:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48728:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2459,
															"nodeType": "RevertStatement",
															"src": "48721:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "48133:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "48458:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48472:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "48464:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48484:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "48476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48463:29:0"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48502:0:0"
									},
									"scope": 2856,
									"src": "48449:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "49184:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2472,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "49204:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2473,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2468,
															"src": "49208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49217:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2471,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2478,
															2504
														],
														"referencedDeclaration": 2504,
														"src": "49194:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49194:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2476,
												"nodeType": "ExpressionStatement",
												"src": "49194:26:0"
											}
										]
									},
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "48782:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "49136:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49154:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "49146:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "49158:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49145:29:0"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49184:0:0"
									},
									"scope": 2856,
									"src": "49127:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "49532:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "49548:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2483,
															"src": "49552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2488,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2463,
														"src": "49542:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49542:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "49542:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49601:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49593:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49593:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49593:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "49605:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2483,
															"src": "49609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2500,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "49618:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2493,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "49570:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49570:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "49570:53:0"
											}
										]
									},
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "49233:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "49457:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "49467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49487:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "49479:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49509:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "49496:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49496:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49466:48:0"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49532:0:0"
									},
									"scope": 2856,
									"src": "49448:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "49997:186:0",
										"statements": [
											{
												"assignments": [
													2511
												],
												"declarations": [
													{
														"constant": false,
														"id": 2511,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "50015:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "50007:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2510,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "50007:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2523,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50047:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50039:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2513,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50039:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50039:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2517,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2507,
															"src": "50051:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50068:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50060:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50060:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50060:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2512,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "50031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50031:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50007:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2524,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "50085:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50110:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50102:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50102:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50085:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2535,
												"nodeType": "IfStatement",
												"src": "50081:96:0",
												"trueBody": {
													"id": 2534,
													"nodeType": "Block",
													"src": "50114:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2531,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "50158:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2530,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "50135:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50135:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2533,
															"nodeType": "RevertStatement",
															"src": "50128:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "49636:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "49965:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "49971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49970:17:0"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49997:0:0"
									},
									"scope": 2856,
									"src": "49956:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2596,
										"nodeType": "Block",
										"src": "50578:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2547,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "50592:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2548,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50598:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50598:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50592:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2561,
												"nodeType": "IfStatement",
												"src": "50588:87:0",
												"trueBody": {
													"id": 2560,
													"nodeType": "Block",
													"src": "50610:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "50661:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "50653:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2554,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "50653:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50653:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2553,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "50631:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50631:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2559,
															"nodeType": "RevertStatement",
															"src": "50624:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2563
												],
												"declarations": [
													{
														"constant": false,
														"id": 2563,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "50692:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2596,
														"src": "50684:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2562,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "50684:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2572,
												"initialValue": {
													"arguments": [
														{
															"id": 2565,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2542,
															"src": "50716:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2566,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "50720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50737:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50729:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2567,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50729:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50729:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2564,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "50708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50708:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50684:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2573,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2563,
														"src": "50754:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50771:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2574,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50771:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50771:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50754:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2584,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "50856:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "50873:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "50856:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2594,
													"nodeType": "IfStatement",
													"src": "50852:109:0",
													"trueBody": {
														"id": 2593,
														"nodeType": "Block",
														"src": "50879:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2588,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2540,
																			"src": "50921:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2589,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2544,
																			"src": "50927:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2590,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "50936:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2587,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "50900:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "50900:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2592,
																"nodeType": "RevertStatement",
																"src": "50893:57:0"
															}
														]
													}
												},
												"id": 2595,
												"nodeType": "IfStatement",
												"src": "50750:211:0",
												"trueBody": {
													"id": 2583,
													"nodeType": "Block",
													"src": "50783:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2580,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "50827:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2579,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "50804:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50804:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2582,
															"nodeType": "RevertStatement",
															"src": "50797:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "50189:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "50516:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "50526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50548:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "50540:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50560:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "50552:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50525:43:0"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50578:0:0"
									},
									"scope": 2856,
									"src": "50507:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2614,
										"nodeType": "Block",
										"src": "51975:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2608,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2600,
															"src": "51999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2609,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "52005:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "52009:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52018:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2607,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2615,
															2641
														],
														"referencedDeclaration": 2641,
														"src": "51985:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51985:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2613,
												"nodeType": "ExpressionStatement",
												"src": "51985:36:0"
											}
										]
									},
									"documentation": {
										"id": 2598,
										"nodeType": "StructuredDocumentation",
										"src": "50973:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "51909:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51931:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "51923:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51945:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "51937:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "51949:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51922:43:0"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51975:0:0"
									},
									"scope": 2856,
									"src": "51900:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2640,
										"nodeType": "Block",
										"src": "52367:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2628,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "52387:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2629,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "52393:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2630,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2622,
															"src": "52397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2627,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2597,
														"src": "52377:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52377:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2632,
												"nodeType": "ExpressionStatement",
												"src": "52377:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2634,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "52438:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2635,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "52444:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2636,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2622,
															"src": "52448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2637,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2624,
															"src": "52457:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2633,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "52415:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52415:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2639,
												"nodeType": "ExpressionStatement",
												"src": "52415:47:0"
											}
										]
									},
									"documentation": {
										"id": 2616,
										"nodeType": "StructuredDocumentation",
										"src": "52034:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "52274:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52296:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "52288:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52310:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "52302:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "52314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52344:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "52331:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2623,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52331:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52287:62:0"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52367:0:0"
									},
									"scope": 2856,
									"src": "52265:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "52982:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2652,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2644,
															"src": "53001:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "53005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2654,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2648,
															"src": "53014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2651,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2659,
															2725
														],
														"referencedDeclaration": 2725,
														"src": "52992:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52992:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2657,
												"nodeType": "ExpressionStatement",
												"src": "52992:33:0"
											}
										]
									},
									"documentation": {
										"id": 2642,
										"nodeType": "StructuredDocumentation",
										"src": "52475:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "52921:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52938:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "52930:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52950:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "52942:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "52967:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "52959:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52929:43:0"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52982:0:0"
									},
									"scope": 2856,
									"src": "52912:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2724,
										"nodeType": "Block",
										"src": "53308:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2671,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2668,
														"src": "53374:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2672,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "53387:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53403:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53395:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53395:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53395:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "53387:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "53374:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2717,
												"nodeType": "IfStatement",
												"src": "53370:460:0",
												"trueBody": {
													"id": 2716,
													"nodeType": "Block",
													"src": "53407:423:0",
													"statements": [
														{
															"assignments": [
																2680
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2680,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "53429:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2716,
																	"src": "53421:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2679,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "53421:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2684,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2682,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2664,
																		"src": "53451:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2681,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2791,
																	"src": "53437:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53437:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53421:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2685,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2666,
																			"src": "53587:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2688,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "53603:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "53595:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "53595:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53595:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "53587:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2691,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2680,
																			"src": "53609:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2692,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2666,
																			"src": "53618:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "53609:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "53587:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "53626:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2696,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2680,
																				"src": "53644:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2697,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2666,
																				"src": "53651:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2695,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "53627:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53627:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "53587:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2706,
															"nodeType": "IfStatement",
															"src": "53583:142:0",
															"trueBody": {
																"id": 2705,
																"nodeType": "Block",
																"src": "53658:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2702,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2666,
																					"src": "53705:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2701,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "53683:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53683:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2704,
																		"nodeType": "RevertStatement",
																		"src": "53676:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2707,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2668,
																"src": "53743:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2715,
															"nodeType": "IfStatement",
															"src": "53739:81:0",
															"trueBody": {
																"id": 2714,
																"nodeType": "Block",
																"src": "53754:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2709,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2680,
																					"src": "53786:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2710,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2662,
																					"src": "53793:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2711,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2664,
																					"src": "53797:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2708,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "53777:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53777:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2713,
																		"nodeType": "EmitStatement",
																		"src": "53772:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2718,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "53840:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2720,
														"indexExpression": {
															"id": 2719,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "53856:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53840:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2721,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2662,
														"src": "53867:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53840:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2723,
												"nodeType": "ExpressionStatement",
												"src": "53840:29:0"
											}
										]
									},
									"documentation": {
										"id": 2660,
										"nodeType": "StructuredDocumentation",
										"src": "53038:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "53223:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53240:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "53232:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53252:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "53244:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "53269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "53261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "53280:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "53275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53231:59:0"
									},
									"returnParameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53308:0:0"
									},
									"scope": 2856,
									"src": "53214:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2761,
										"nodeType": "Block",
										"src": "54178:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2735,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2730,
														"src": "54192:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54212:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2736,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54204:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54204:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54192:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2746,
												"nodeType": "IfStatement",
												"src": "54188:91:0",
												"trueBody": {
													"id": 2745,
													"nodeType": "Block",
													"src": "54216:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2742,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2730,
																		"src": "54259:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2741,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "54237:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54237:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2744,
															"nodeType": "RevertStatement",
															"src": "54230:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2747,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1900,
																"src": "54288:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2750,
															"indexExpression": {
																"id": 2748,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2728,
																"src": "54307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54288:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2751,
														"indexExpression": {
															"id": 2749,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2730,
															"src": "54314:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54288:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2752,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2732,
														"src": "54326:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54288:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2754,
												"nodeType": "ExpressionStatement",
												"src": "54288:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2756,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2728,
															"src": "54364:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2757,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2730,
															"src": "54371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2758,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2732,
															"src": "54381:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2755,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "54349:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54349:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2760,
												"nodeType": "EmitStatement",
												"src": "54344:46:0"
											}
										]
									},
									"documentation": {
										"id": 2726,
										"nodeType": "StructuredDocumentation",
										"src": "53882:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "54094:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54121:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "54113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "54136:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "54128:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "54151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "54146:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54146:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54112:48:0"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54178:0:0"
									},
									"scope": 2856,
									"src": "54085:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "54704:169:0",
										"statements": [
											{
												"assignments": [
													2771
												],
												"declarations": [
													{
														"constant": false,
														"id": 2771,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "54722:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2790,
														"src": "54714:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2770,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "54714:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2775,
												"initialValue": {
													"arguments": [
														{
															"id": 2773,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "54739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2772,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "54730:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54730:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54714:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2776,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "54761:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54778:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2777,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54770:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54770:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54761:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2787,
												"nodeType": "IfStatement",
												"src": "54757:88:0",
												"trueBody": {
													"id": 2786,
													"nodeType": "Block",
													"src": "54782:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2783,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2765,
																		"src": "54826:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2782,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "54803:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54803:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2785,
															"nodeType": "RevertStatement",
															"src": "54796:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2788,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2771,
													"src": "54861:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2769,
												"id": 2789,
												"nodeType": "Return",
												"src": "54854:12:0"
											}
										]
									},
									"documentation": {
										"id": 2763,
										"nodeType": "StructuredDocumentation",
										"src": "54403:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "54641:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "54655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54654:17:0"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "54695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54694:9:0"
									},
									"scope": 2856,
									"src": "54632:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2854,
										"nodeType": "Block",
										"src": "55514:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2803,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2796,
																"src": "55528:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55531:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "55528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55536:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55528:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55528:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2853,
												"nodeType": "IfStatement",
												"src": "55524:664:0",
												"trueBody": {
													"id": 2852,
													"nodeType": "Block",
													"src": "55548:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2832,
																		"nodeType": "Block",
																		"src": "55662:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2825,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2821,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2819,
																						"src": "55684:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2822,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1654,
																								"src": "55694:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1654_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2823,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "55710:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1653,
																							"src": "55694:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2824,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "55727:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "55694:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "55684:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2831,
																				"nodeType": "IfStatement",
																				"src": "55680:130:0",
																				"trueBody": {
																					"id": 2830,
																					"nodeType": "Block",
																					"src": "55737:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2827,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2796,
																										"src": "55788:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2826,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 144,
																									"src": "55766:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2828,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55766:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2829,
																							"nodeType": "RevertStatement",
																							"src": "55759:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2833,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2820,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2819,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "55654:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2833,
																				"src": "55647:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2818,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "55647:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55646:15:0"
																	},
																	"src": "55638:186:0"
																},
																{
																	"block": {
																		"id": 2849,
																		"nodeType": "Block",
																		"src": "55853:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2840,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2837,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2835,
																							"src": "55875:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2838,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "55882:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "55875:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2839,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55892:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "55875:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2847,
																					"nodeType": "Block",
																					"src": "55974:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "56060:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "56097:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "56101:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "56093:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "56093:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "56116:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "56110:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "56110:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "56086:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "56086:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "56086:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2835,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56101:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2835,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56116:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2846,
																							"nodeType": "InlineAssembly",
																							"src": "56051:95:0"
																						}
																					]
																				},
																				"id": 2848,
																				"nodeType": "IfStatement",
																				"src": "55871:293:0",
																				"trueBody": {
																					"id": 2845,
																					"nodeType": "Block",
																					"src": "55895:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2842,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2796,
																										"src": "55946:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2841,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 144,
																									"src": "55924:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2843,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55924:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2844,
																							"nodeType": "RevertStatement",
																							"src": "55917:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2850,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2836,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2835,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "55845:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2850,
																				"src": "55832:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2834,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "55832:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55831:21:0"
																	},
																	"src": "55825:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2812,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "55603:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55603:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2814,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2794,
																		"src": "55617:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2815,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2798,
																		"src": "55623:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2816,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "55632:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2809,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2796,
																				"src": "55582:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2808,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "55566:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1654_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55566:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1654",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55586:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1653,
																	"src": "55566:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55566:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2851,
															"nodeType": "TryStatement",
															"src": "55562:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2792,
										"nodeType": "StructuredDocumentation",
										"src": "54879:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "55421:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "55452:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "55444:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55466:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "55458:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55478:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "55470:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55500:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "55487:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55443:62:0"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55514:0:0"
									},
									"scope": 2856,
									"src": "55412:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3301,
							"src": "39270:16926:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": [
								1717,
								1726,
								1735
							]
						},
						{
							"id": 2857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "56374:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2859,
										"name": "IERC4906",
										"nameLocations": [
											"56512:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1838,
										"src": "56512:8:0"
									},
									"id": 2860,
									"nodeType": "InheritanceSpecifier",
									"src": "56512:8:0"
								},
								{
									"baseName": {
										"id": 2861,
										"name": "ERC721",
										"nameLocations": [
											"56522:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2856,
										"src": "56522:6:0"
									},
									"id": 2862,
									"nodeType": "InheritanceSpecifier",
									"src": "56522:6:0"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2858,
								"nodeType": "StructuredDocumentation",
								"src": "56404:69:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 2973,
							"linearizedBaseContracts": [
								2973,
								2856,
								162,
								1863,
								1838,
								1818,
								1704,
								1665,
								1637
							],
							"name": "ERC721URIStorage",
							"nameLocation": "56492:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2865,
									"libraryName": {
										"id": 2863,
										"name": "Strings",
										"nameLocations": [
											"56541:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1616,
										"src": "56541:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "56535:26:0",
									"typeName": {
										"id": 2864,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "56553:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2871,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "56773:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 2973,
									"src": "56749:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2866,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "56749:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 2869,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "56803:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 2868,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "56796:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 2867,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "56796:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 2870,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "56796:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2875,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "56903:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2973,
									"src": "56860:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2874,
										"keyName": "tokenId",
										"keyNameLocation": "56876:7:0",
										"keyType": {
											"id": 2872,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56868:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "56860:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2873,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "56887:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1664,
										1948
									],
									"body": {
										"id": 2895,
										"nodeType": "Block",
										"src": "57088:99:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2886,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "57105:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2887,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2871,
															"src": "57120:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "57105:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2891,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2878,
																"src": "57168:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2889,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "57144:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2973_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57150:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1948,
															"src": "57144:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57144:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "57105:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2885,
												"id": 2894,
												"nodeType": "Return",
												"src": "57098:82:0"
											}
										]
									},
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "56920:55:0",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 2896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "56989:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2882,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2880,
												"name": "ERC721",
												"nameLocations": [
													"57056:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2856,
												"src": "57056:6:0"
											},
											{
												"id": 2881,
												"name": "IERC165",
												"nameLocations": [
													"57064:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1665,
												"src": "57064:7:0"
											}
										],
										"src": "57047:25:0"
									},
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "57014:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "57007:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2877,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "57007:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57006:20:0"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "57082:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2883,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "57082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57081:6:0"
									},
									"scope": 2973,
									"src": "56980:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2043
									],
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "57341:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2906,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2899,
															"src": "57365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2905,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "57351:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57351:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2908,
												"nodeType": "ExpressionStatement",
												"src": "57351:22:0"
											},
											{
												"assignments": [
													2910
												],
												"declarations": [
													{
														"constant": false,
														"id": 2910,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "57398:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "57384:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2909,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "57384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2914,
												"initialValue": {
													"baseExpression": {
														"id": 2911,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "57410:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2913,
													"indexExpression": {
														"id": 2912,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "57421:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "57410:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57384:45:0"
											},
											{
												"assignments": [
													2916
												],
												"declarations": [
													{
														"constant": false,
														"id": 2916,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "57453:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2952,
														"src": "57439:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2915,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "57439:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2919,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2917,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "57460:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57460:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57439:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2922,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2916,
																	"src": "57549:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57543:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2920,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "57543:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57543:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57555:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "57543:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57543:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2930,
												"nodeType": "IfStatement",
												"src": "57539:70:0",
												"trueBody": {
													"id": 2929,
													"nodeType": "Block",
													"src": "57568:41:0",
													"statements": [
														{
															"expression": {
																"id": 2927,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2910,
																"src": "57589:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2904,
															"id": 2928,
															"nodeType": "Return",
															"src": "57582:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2933,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2910,
																	"src": "57714:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57708:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2931,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "57708:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57708:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57725:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "57708:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57734:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57708:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2946,
												"nodeType": "IfStatement",
												"src": "57704:95:0",
												"trueBody": {
													"id": 2945,
													"nodeType": "Block",
													"src": "57737:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2941,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2916,
																		"src": "57772:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 2942,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2910,
																		"src": "57778:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "57758:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 2938,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "57758:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57765:6:0",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "57758:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 2943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57758:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2904,
															"id": 2944,
															"nodeType": "Return",
															"src": "57751:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2949,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2899,
															"src": "57831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2947,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "57816:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2973_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 2948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57822:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2043,
														"src": "57816:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57816:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2904,
												"id": 2951,
												"nodeType": "Return",
												"src": "57809:30:0"
											}
										]
									},
									"documentation": {
										"id": 2897,
										"nodeType": "StructuredDocumentation",
										"src": "57193:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "57262:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2901,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57308:8:0"
									},
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "57279:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "57271:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57270:17:0"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "57326:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2902,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "57326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57325:15:0"
									},
									"scope": 2973,
									"src": "57253:593:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2971,
										"nodeType": "Block",
										"src": "58046:86:0",
										"statements": [
											{
												"expression": {
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2961,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "58056:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2963,
														"indexExpression": {
															"id": 2962,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "58067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58056:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2964,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2958,
														"src": "58078:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "58056:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2966,
												"nodeType": "ExpressionStatement",
												"src": "58056:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "58117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2967,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "58102:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58102:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2970,
												"nodeType": "EmitStatement",
												"src": "58097:28:0"
											}
										]
									},
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "57852:108:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 2972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "57974:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "57995:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "57987:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "58018:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "58004:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "58004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57986:42:0"
									},
									"returnParameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58046:0:0"
									},
									"scope": 2973,
									"src": "57965:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3301,
							"src": "56474:1660:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": [
								1717,
								1726,
								1735,
								1830,
								1837
							]
						},
						{
							"id": 2974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "58161:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2975,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"58334:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2973,
										"src": "58334:16:0"
									},
									"id": 2976,
									"nodeType": "InheritanceSpecifier",
									"src": "58334:16:0"
								},
								{
									"baseName": {
										"id": 2977,
										"name": "IERC2981",
										"nameLocations": [
											"58354:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1682,
										"src": "58354:8:0"
									},
									"id": 2978,
									"nodeType": "InheritanceSpecifier",
									"src": "58354:8:0"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3300,
							"linearizedBaseContracts": [
								3300,
								1682,
								2973,
								2856,
								162,
								1863,
								1838,
								1818,
								1704,
								1665,
								1637
							],
							"name": "NFTMarketplace",
							"nameLocation": "58315:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2982,
									"libraryName": {
										"id": 2979,
										"name": "Counters",
										"nameLocations": [
											"58375:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "58375:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "58369:36:0",
									"typeName": {
										"id": 2981,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2980,
											"name": "Counters.Counter",
											"nameLocations": [
												"58388:8:0",
												"58397:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "58388:16:0"
										},
										"referencedDeclaration": 5,
										"src": "58388:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2985,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "58435:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3300,
									"src": "58410:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2984,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2983,
											"name": "Counters.Counter",
											"nameLocations": [
												"58410:8:0",
												"58419:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "58410:16:0"
										},
										"referencedDeclaration": 5,
										"src": "58410:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d547cfb7",
									"id": 2987,
									"mutability": "mutable",
									"name": "baseTokenURI",
									"nameLocation": "58471:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3300,
									"src": "58457:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2986,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "58457:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a71bb2d",
									"id": 2990,
									"mutability": "mutable",
									"name": "royaltyPercentage",
									"nameLocation": "58504:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3300,
									"src": "58489:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2988,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "58489:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2989,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "58524:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2992,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "58582:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3300,
									"src": "58574:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2991,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "58574:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "NFTMarketplace.NFT",
									"id": 2997,
									"members": [
										{
											"constant": false,
											"id": 2994,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "58630:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 2997,
											"src": "58622:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2993,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "58622:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2996,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "58655:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2997,
											"src": "58647:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "58647:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "58608:3:0",
									"nodeType": "StructDefinition",
									"scope": 3300,
									"src": "58601:66:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3003,
									"mutability": "mutable",
									"name": "isSell",
									"nameLocation": "58717:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3300,
									"src": "58673:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 3002,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2998,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "58682:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "58673:43:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3001,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2999,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "58702:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "58693:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3000,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "58710:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3009,
									"mutability": "mutable",
									"name": "isSold",
									"nameLocation": "58773:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3300,
									"src": "58729:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 3008,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3004,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "58738:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "58729:43:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3007,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3005,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "58758:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "58749:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3006,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "58766:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "265aa621",
									"id": 3014,
									"mutability": "mutable",
									"name": "nfts",
									"nameLocation": "58816:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 3300,
									"src": "58785:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2997_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.NFT)"
									},
									"typeName": {
										"id": 3013,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3010,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "58793:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "58785:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2997_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.NFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3012,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3011,
												"name": "NFT",
												"nameLocations": [
													"58804:3:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2997,
												"src": "58804:3:0"
											},
											"referencedDeclaration": 2997,
											"src": "58804:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFT_$2997_storage_ptr",
												"typeString": "struct NFTMarketplace.NFT"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3026,
										"nodeType": "Block",
										"src": "58873:41:0",
										"statements": [
											{
												"expression": {
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3021,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2992,
														"src": "58882:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3022,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "58897:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58901:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "58897:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "58882:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3025,
												"nodeType": "ExpressionStatement",
												"src": "58882:25:0"
											}
										]
									},
									"id": 3027,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79204e6674",
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "58849:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_27a8e25fff6ecb31d12b1e3b3dc4dfc39c3251aabb27a066876477b26913ddd9",
														"typeString": "literal_string \"My Nft\""
													},
													"value": "My Nft"
												},
												{
													"hexValue": "4d4e4654",
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "58859:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
														"typeString": "literal_string \"MNFT\""
													},
													"value": "MNFT"
												}
											],
											"id": 3019,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3016,
												"name": "ERC721",
												"nameLocations": [
													"58842:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2856,
												"src": "58842:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58842:24:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58838:3:0"
									},
									"returnParameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58873:0:0"
									},
									"scope": 3300,
									"src": "58827:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3036,
										"nodeType": "Block",
										"src": "58981:47:0",
										"statements": [
											{
												"expression": {
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3032,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2987,
														"src": "58991:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3033,
														"name": "newBaseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3029,
														"src": "59006:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "58991:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3035,
												"nodeType": "ExpressionStatement",
												"src": "58991:30:0"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 3037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseURI",
									"nameLocation": "58930:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "newBaseTokenURI",
												"nameLocation": "58955:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "58941:29:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "58941:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58940:31:0"
									},
									"returnParameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58981:0:0"
									},
									"scope": 3300,
									"src": "58921:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3085,
										"nodeType": "Block",
										"src": "59094:270:0",
										"statements": [
											{
												"assignments": [
													3045
												],
												"declarations": [
													{
														"constant": false,
														"id": 3045,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "59112:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3085,
														"src": "59104:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "59104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3049,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3046,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "59122:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3047,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59138:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "59122:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59122:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59104:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3051,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "59167:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59171:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "59167:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3053,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "59179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3050,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2478,
															2504
														],
														"referencedDeclaration": 2478,
														"src": "59157:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59157:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3055,
												"nodeType": "ExpressionStatement",
												"src": "59157:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3057,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "59210:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3058,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3039,
															"src": "59219:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3056,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2972,
														"src": "59197:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59197:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3060,
												"nodeType": "ExpressionStatement",
												"src": "59197:31:0"
											},
											{
												"expression": {
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3061,
															"name": "nfts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3014,
															"src": "59239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2997_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)"
															}
														},
														"id": 3063,
														"indexExpression": {
															"id": 3062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "59244:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59239:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2997_storage",
															"typeString": "struct NFTMarketplace.NFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3065,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "59258:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59262:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "59258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3067,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3041,
																"src": "59270:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3064,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "59254:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFT_$2997_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.NFT storage pointer)"
															}
														},
														"id": 3068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59254:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2997_memory_ptr",
															"typeString": "struct NFTMarketplace.NFT memory"
														}
													},
													"src": "59239:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2997_storage",
														"typeString": "struct NFTMarketplace.NFT storage ref"
													}
												},
												"id": 3070,
												"nodeType": "ExpressionStatement",
												"src": "59239:37:0"
											},
											{
												"expression": {
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3071,
																"name": "isSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3009,
																"src": "59286:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 3075,
															"indexExpression": {
																"expression": {
																	"id": 3072,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "59294:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59298:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "59294:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "59286:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3076,
														"indexExpression": {
															"id": 3074,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "59306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59286:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "59286:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3079,
												"nodeType": "ExpressionStatement",
												"src": "59286:34:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3080,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "59329:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3082,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59345:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "59329:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59329:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3084,
												"nodeType": "ExpressionStatement",
												"src": "59329:27:0"
											}
										]
									},
									"functionSelector": "5afa3a72",
									"id": 3086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "59043:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "59065:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3086,
												"src": "59051:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3038,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "59080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3086,
												"src": "59075:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "59075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59050:36:0"
									},
									"returnParameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59094:0:0"
									},
									"scope": 3300,
									"src": "59034:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "59409:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3092,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "59427:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59431:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "59427:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3095,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3088,
																		"src": "59449:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3094,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1989,
																	"src": "59441:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 3096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59441:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "59427:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75722061726520417574686f72697a6520746f2073656c6c",
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59459:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
																"typeString": "literal_string \"Your are Authorize to sell\""
															},
															"value": "Your are Authorize to sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
																"typeString": "literal_string \"Your are Authorize to sell\""
															}
														],
														"id": 3091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59419:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3100,
												"nodeType": "ExpressionStatement",
												"src": "59419:69:0"
											},
											{
												"expression": {
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3101,
																"name": "isSell",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3003,
																"src": "59498:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 3105,
															"indexExpression": {
																"expression": {
																	"id": 3102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "59505:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "59509:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "59505:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "59498:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3106,
														"indexExpression": {
															"id": 3104,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3088,
															"src": "59517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59498:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59526:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "59498:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3109,
												"nodeType": "ExpressionStatement",
												"src": "59498:32:0"
											}
										]
									},
									"functionSelector": "a90d14e2",
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SellNft",
									"nameLocation": "59379:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3088,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "59387:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3087,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "59387:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59386:14:0"
									},
									"returnParameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59409:0:0"
									},
									"scope": 3300,
									"src": "59370:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3130,
										"nodeType": "Block",
										"src": "59603:85:0",
										"statements": [
											{
												"assignments": [
													3119
												],
												"declarations": [
													{
														"constant": false,
														"id": 3119,
														"mutability": "mutable",
														"name": "ads",
														"nameLocation": "59621:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 3130,
														"src": "59613:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3118,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59613:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3123,
												"initialValue": {
													"arguments": [
														{
															"id": 3121,
															"name": "tokenids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "59634:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3120,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "59626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59626:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59613:30:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3124,
															"name": "isSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3009,
															"src": "59660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 3126,
														"indexExpression": {
															"id": 3125,
															"name": "ads",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3119,
															"src": "59667:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "59660:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 3128,
													"indexExpression": {
														"id": 3127,
														"name": "tokenids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3113,
														"src": "59672:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59660:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3117,
												"id": 3129,
												"nodeType": "Return",
												"src": "59653:28:0"
											}
										]
									},
									"functionSelector": "7d7f1f3e",
									"id": 3131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SoldNft",
									"nameLocation": "59552:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "tokenids",
												"nameLocation": "59566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "59561:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "59561:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59560:15:0"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "59597:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "59597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59596:6:0"
									},
									"scope": 3300,
									"src": "59543:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3150,
										"nodeType": "Block",
										"src": "59755:82:0",
										"statements": [
											{
												"assignments": [
													3139
												],
												"declarations": [
													{
														"constant": false,
														"id": 3139,
														"mutability": "mutable",
														"name": "ad",
														"nameLocation": "59773:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 3150,
														"src": "59765:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3138,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59765:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3143,
												"initialValue": {
													"arguments": [
														{
															"id": 3141,
															"name": "tokenid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3133,
															"src": "59786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3140,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "59778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59778:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59765:29:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3144,
															"name": "isSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3003,
															"src": "59811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 3146,
														"indexExpression": {
															"id": 3145,
															"name": "ad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "59818:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "59811:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 3148,
													"indexExpression": {
														"id": 3147,
														"name": "tokenid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "59822:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59811:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3137,
												"id": 3149,
												"nodeType": "Return",
												"src": "59804:26:0"
											}
										]
									},
									"functionSelector": "f2a413b5",
									"id": 3151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSellNft",
									"nameLocation": "59703:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "tokenid",
												"nameLocation": "59719:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "59714:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "59714:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59713:14:0"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3151,
												"src": "59749:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "59749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59748:6:0"
									},
									"scope": 3300,
									"src": "59694:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3168,
										"nodeType": "Block",
										"src": "59905:78:0",
										"statements": [
											{
												"assignments": [
													3160
												],
												"declarations": [
													{
														"constant": false,
														"id": 3160,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "59927:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3168,
														"src": "59916:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2997_memory_ptr",
															"typeString": "struct NFTMarketplace.NFT"
														},
														"typeName": {
															"id": 3159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3158,
																"name": "NFT",
																"nameLocations": [
																	"59916:3:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2997,
																"src": "59916:3:0"
															},
															"referencedDeclaration": 2997,
															"src": "59916:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2997_storage_ptr",
																"typeString": "struct NFTMarketplace.NFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3164,
												"initialValue": {
													"baseExpression": {
														"id": 3161,
														"name": "nfts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3014,
														"src": "59934:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2997_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)"
														}
													},
													"id": 3163,
													"indexExpression": {
														"id": 3162,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "59939:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59934:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2997_storage",
														"typeString": "struct NFTMarketplace.NFT storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59916:32:0"
											},
											{
												"expression": {
													"expression": {
														"id": 3165,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3160,
														"src": "59965:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2997_memory_ptr",
															"typeString": "struct NFTMarketplace.NFT memory"
														}
													},
													"id": 3166,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59970:5:0",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2996,
													"src": "59965:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3157,
												"id": 3167,
												"nodeType": "Return",
												"src": "59958:17:0"
											}
										]
									},
									"functionSelector": "5a51a885",
									"id": 3169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "KnowPrice",
									"nameLocation": "59852:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "59868:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "59863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "59863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59861:16:0"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "59899:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "59899:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59898:6:0"
									},
									"scope": 3300,
									"src": "59843:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3179,
										"nodeType": "Block",
										"src": "60052:42:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3176,
														"name": "ads",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3171,
														"src": "60076:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "60080:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "60076:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3175,
												"id": 3178,
												"nodeType": "Return",
												"src": "60069:18:0"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 3180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "59998:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3171,
												"mutability": "mutable",
												"name": "ads",
												"nameLocation": "60017:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "60009:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60008:13:0"
									},
									"returnParameters": {
										"id": 3175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "60043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60042:9:0"
									},
									"scope": 3300,
									"src": "59989:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3189,
										"nodeType": "Block",
										"src": "60150:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3185,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2985,
															"src": "60167:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60183:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "60167:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60167:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3184,
												"id": 3188,
												"nodeType": "Return",
												"src": "60160:32:0"
											}
										]
									},
									"functionSelector": "3d0673d4",
									"id": 3190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalToken",
									"nameLocation": "60109:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60122:2:0"
									},
									"returnParameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3190,
												"src": "60145:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "60145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60144:6:0"
									},
									"scope": 3300,
									"src": "60100:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3272,
										"nodeType": "Block",
										"src": "60254:764:0",
										"statements": [
											{
												"assignments": [
													3196
												],
												"declarations": [
													{
														"constant": false,
														"id": 3196,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "60281:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3272,
														"src": "60273:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "60273:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3200,
												"initialValue": {
													"arguments": [
														{
															"id": 3198,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3192,
															"src": "60302:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3197,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "60294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60294:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60273:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3202,
																		"name": "isSell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3003,
																		"src": "60328:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(uint256 => bool))"
																		}
																	},
																	"id": 3204,
																	"indexExpression": {
																		"id": 3203,
																		"name": "tokenOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3196,
																		"src": "60335:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "60328:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 3206,
																"indexExpression": {
																	"id": 3205,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3192,
																	"src": "60347:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "60328:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 3207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60358:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "60328:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206973206e6f742061742073616c65",
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60364:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
																"typeString": "literal_string \"Token is not at sale\""
															},
															"value": "Token is not at sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
																"typeString": "literal_string \"Token is not at sale\""
															}
														],
														"id": 3201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60320:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60320:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3211,
												"nodeType": "ExpressionStatement",
												"src": "60320:67:0"
											},
											{
												"assignments": [
													3213
												],
												"declarations": [
													{
														"constant": false,
														"id": 3213,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "60406:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3272,
														"src": "60398:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "60398:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3216,
												"initialValue": {
													"expression": {
														"id": 3214,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "60414:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "60418:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "60414:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60398:26:0"
											},
											{
												"assignments": [
													3218
												],
												"declarations": [
													{
														"constant": false,
														"id": 3218,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "60442:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3272,
														"src": "60434:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3223,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3219,
															"name": "nfts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3014,
															"src": "60450:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2997_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)"
															}
														},
														"id": 3221,
														"indexExpression": {
															"id": 3220,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3192,
															"src": "60455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "60450:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2997_storage",
															"typeString": "struct NFTMarketplace.NFT storage ref"
														}
													},
													"id": 3222,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "60464:5:0",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2996,
													"src": "60450:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60434:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3225,
																"name": "tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3196,
																"src": "60487:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3226,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3213,
																"src": "60501:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "60487:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742062757920796f7572206f776e204e4654",
															"id": 3228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60508:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
																"typeString": "literal_string \"Cannot buy your own NFT\""
															},
															"value": "Cannot buy your own NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
																"typeString": "literal_string \"Cannot buy your own NFT\""
															}
														],
														"id": 3224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60479:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3230,
												"nodeType": "ExpressionStatement",
												"src": "60479:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3232,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "60552:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60556:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "60552:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3234,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3218,
																"src": "60565:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "60552:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537570706c792045786163742066756e64",
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60572:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
																"typeString": "literal_string \"Supply Exact fund\""
															},
															"value": "Supply Exact fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
																"typeString": "literal_string \"Supply Exact fund\""
															}
														],
														"id": 3231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60544:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3238,
												"nodeType": "ExpressionStatement",
												"src": "60544:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3240,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3196,
															"src": "60654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3241,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3213,
															"src": "60666:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3192,
															"src": "60673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3239,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2597,
														"src": "60644:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60644:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3244,
												"nodeType": "ExpressionStatement",
												"src": "60644:37:0"
											},
											{
												"assignments": [
													3246
												],
												"declarations": [
													{
														"constant": false,
														"id": 3246,
														"mutability": "mutable",
														"name": "royalties",
														"nameLocation": "60749:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3272,
														"src": "60741:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3253,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3247,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3218,
																	"src": "60762:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3248,
																	"name": "royaltyPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2990,
																	"src": "60770:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "60762:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3250,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "60761:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "60761:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60741:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3259,
															"name": "royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "60859:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3256,
																	"name": "contractOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2992,
																	"src": "60835:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60827:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3254,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60827:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60827:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60850:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "60827:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60827:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3261,
												"nodeType": "ExpressionStatement",
												"src": "60827:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3267,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3218,
																"src": "60992:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3268,
																"name": "royalties",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3246,
																"src": "61000:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "60992:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3264,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "60971:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60963:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60963:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60963:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60983:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "60963:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60963:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3271,
												"nodeType": "ExpressionStatement",
												"src": "60963:47:0"
											}
										]
									},
									"functionSelector": "a37365e0",
									"id": 3273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BuyNFT",
									"nameLocation": "60214:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "60229:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "60221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60220:17:0"
									},
									"returnParameters": {
										"id": 3194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60254:0:0"
									},
									"scope": 3300,
									"src": "60205:813:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1681
									],
									"body": {
										"id": 3298,
										"nodeType": "Block",
										"src": "61150:153:0",
										"statements": [
											{
												"assignments": [
													3286
												],
												"declarations": [
													{
														"constant": false,
														"id": 3286,
														"mutability": "mutable",
														"name": "royalties",
														"nameLocation": "61168:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3298,
														"src": "61160:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "61160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3293,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3277,
																	"src": "61181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3288,
																	"name": "royaltyPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2990,
																	"src": "61189:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "61181:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3290,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "61180:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "61210:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "61180:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61160:53:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3294,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2992,
															"src": "61231:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3295,
															"name": "royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3286,
															"src": "61246:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3296,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "61230:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 3284,
												"id": 3297,
												"nodeType": "Return",
												"src": "61223:33:0"
											}
										]
									},
									"functionSelector": "2a55205a",
									"id": 3299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "61033:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3279,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "61091:8:0"
									},
									"parameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3275,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "61053:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "61045:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "61070:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "61062:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61044:32:0"
									},
									"returnParameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "61117:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "61109:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "61135:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "61127:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61108:41:0"
									},
									"scope": 3300,
									"src": "61024:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3301,
							"src": "58306:2999:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": [
								1717,
								1726,
								1735,
								1830,
								1837
							]
						}
					],
					"src": "141:61165:0"
				},
				"id": 0
			}
		}
	}
}