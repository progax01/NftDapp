{
	"id": "e99c068c66584e119164080cf4345469",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"nftmarket.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\n \r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n \r\nimport \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\n//https://orange-absolute-barracuda-733.mypinata.cloud/ipfs/Qma34JYoFDhwy4B3nMqodPUhhXzTt2xgeQ6FRXRwhdqTee/1.json\r\n\r\ncontract NFTMarketplace is  ERC721URIStorage,   IERC2981 {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIdCounter;\r\n\r\n    string public baseTokenURI;\r\n    uint256 public royaltyPercentage = 10; // 100 represents 1%, you can adjust this\r\n    address contractOwner;\r\n    struct NFT {\r\n        address creator;\r\n        uint256 price;\r\n    }\r\n\r\n    mapping (address => mapping( uint => bool)) isSell;\r\n    mapping (address => mapping( uint => bool)) isSold;\r\n    mapping(uint256 => NFT) public nfts;\r\n\r\n    constructor( ) ERC721(\"My Nft\", \"MNFT\")  \r\n    {\r\n       contractOwner= msg.sender;\r\n    }\r\n\r\n\r\n    function setBaseURI(string memory newBaseTokenURI) public   {\r\n        baseTokenURI = newBaseTokenURI;\r\n    }\r\n\r\n    function mintNFT(string memory tokenURI, uint price) public {\r\n        uint256 tokenId = _tokenIdCounter.current();\r\n        _safeMint(msg.sender, tokenId);\r\n        _setTokenURI(tokenId, tokenURI);\r\n         nfts[tokenId]= NFT(msg.sender, price);\r\n        isSold [msg.sender][tokenId]=false;\r\n       _tokenIdCounter.increment();\r\n\r\n    }\r\n\r\n    function SellNft(uint tokenId) public  {\r\n        require(msg.sender == ownerOf(tokenId), \"Your are Authorize to sell\");\r\n        isSell[msg.sender][tokenId]=true;\r\n    }\r\n\r\n    function SoldNft (uint tokenids) public view returns (bool) {\r\n        address ads= ownerOf(tokenids);\r\n        return isSold[ads][tokenids];\r\n    }\r\n\r\n    function isSellNft (uint tokenid) public view returns (bool) {\r\n        address ad = ownerOf(tokenid);\r\n        return isSell[ad][tokenid];\r\n    }\r\n\r\n    function KnowPrice( uint tokenIds) public view returns (uint) {\r\n\r\n        NFT memory info = nfts[tokenIds];\r\n        return info.price;\r\n\r\n    }\r\n\r\n    function getBalance(address ads) public view returns (uint256) {\r\n        \r\n      return ads.balance;\r\n    }\r\n\r\n    function getTotalToken() public view returns(uint){\r\n        return _tokenIdCounter.current();\r\n    }\r\n\r\n    function BuyNFT(uint256 tokenId) public payable  {\r\n        \r\n        address tokenOwner = ownerOf(tokenId);\r\n        require(isSell[tokenOwner][tokenId]== true, \"Token is not at sale\");\r\n\r\n        address buyer = msg.sender;\r\n        uint256 price = nfts[tokenId].price;\r\n        require(tokenOwner != buyer, \"Cannot buy your own NFT\");\r\n        require(msg.value == price, \"Supply Exact fund\");\r\n\r\n        // Transfer the NFT to the buyer\r\n        _transfer(tokenOwner, buyer, tokenId);\r\n\r\n        // Pay royalties to the contract creator\r\n        uint256 royalties = (price * royaltyPercentage) / 100; // Calculate royalties\r\n        payable(contractOwner).transfer(royalties); // Pay the royalties to the creator\r\n\r\n        // Pay the seller the remaining amount\r\n        payable(tokenOwner).transfer(price - royalties);\r\n\r\n    }\r\n\r\n    function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {\r\n        uint256 royalties = (value * royaltyPercentage) / 100;\r\n        return (contractOwner, royalties); // Marketplace owner receives royalties\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 223,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 227,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 231,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 241,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 223,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 227,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 231,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 241,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1360,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH5 0xDF1EC036CE MOD 0xAC DUP16 PUSH28 0xD383388364BE43DA3A629CF6D7505CFD65B8800E2864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c964df1ec036ce06ac8f7bd383388364be43da3a629cf6d7505cfd65b8800e2864736f6c63430008150033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"nftmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"nftmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"nftmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"nftmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nftmarket.sol": {
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "BuyNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIds",
									"type": "uint256"
								}
							],
							"name": "KnowPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SellNft",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenids",
									"type": "uint256"
								}
							],
							"name": "SoldNft",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ads",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenid",
									"type": "uint256"
								}
							],
							"name": "isSellNft",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "mintNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nfts",
							"outputs": [
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newBaseTokenURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nftmarket.sol\":435:3527  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\n  mstore(0x40, 0x80)\n    /* \"nftmarket.sol\":658:660  10 */\n  0x0a\n    /* \"nftmarket.sol\":623:660  uint256 public royaltyPercentage = 10 */\n  0x09\n  sstore\n    /* \"nftmarket.sol\":972:1062  constructor( ) ERC721(\"My Nft\", \"MNFT\")  ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79204e66740000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"nftmarket.sol\":1044:1054  msg.sender */\n  caller\n    /* \"nftmarket.sol\":1029:1042  contractOwner */\n  0x0a\n  0x00\n    /* \"nftmarket.sol\":1029:1054  contractOwner= msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nftmarket.sol\":435:3527  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"nftmarket.sol\":435:3527  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nftmarket.sol\":435:3527  contract NFTMarketplace is  ERC721URIStorage,   IERC2981 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa90d14e2\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd547cfb7\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd547cfb7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2a413b5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0xa90d14e2\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7d7f1f3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8a71bb2d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa37365e0\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x2a55205a\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x55f804b3\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5a51a885\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5afa3a72\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x2a55205a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3d0673d4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x265aa621\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"nftmarket.sol\":928:963  mapping(uint256 => NFT) public nfts */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":3242:3524  function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":2292:2393  function getTotalToken() public view returns(uint){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"nftmarket.sol\":1072:1181  function setBaseURI(string memory newBaseTokenURI) public   {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"nftmarket.sol\":2023:2168  function KnowPrice( uint tokenIds) public view returns (uint) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":1189:1527  function mintNFT(string memory tokenURI, uint price) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":1713:1861  function SoldNft (uint tokenids) public view returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":623:660  uint256 public royaltyPercentage = 10 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n    tag_123:\n      stop\n        /* \"nftmarket.sol\":2401:3234  function BuyNFT(uint256 tokenId) public payable  {... */\n    tag_20:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"nftmarket.sol\":1535:1705  function SellNft(uint tokenId) public  {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":590:616  string public baseTokenURI */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":1869:2015  function isSellNft (uint tokenid) public view returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nftmarket.sol\":2176:2284  function getBalance(address ads) public view returns (uint256) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":928:963  mapping(uint256 => NFT) public nfts */\n    tag_65:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"nftmarket.sol\":3242:3524  function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {... */\n    tag_72:\n        /* \"nftmarket.sol\":3327:3343  address receiver */\n      0x00\n        /* \"nftmarket.sol\":3345:3366  uint256 royaltyAmount */\n      dup1\n        /* \"nftmarket.sol\":3379:3396  uint256 royalties */\n      0x00\n        /* \"nftmarket.sol\":3429:3432  100 */\n      0x64\n        /* \"nftmarket.sol\":3408:3425  royaltyPercentage */\n      sload(0x09)\n        /* \"nftmarket.sol\":3400:3405  value */\n      dup6\n        /* \"nftmarket.sol\":3400:3425  value * royaltyPercentage */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"nftmarket.sol\":3399:3432  (value * royaltyPercentage) / 100 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"nftmarket.sol\":3379:3432  uint256 royalties = (value * royaltyPercentage) / 100 */\n      swap1\n      pop\n        /* \"nftmarket.sol\":3451:3464  contractOwner */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket.sol\":3466:3475  royalties */\n      dup2\n        /* \"nftmarket.sol\":3443:3476  return (contractOwner, royalties) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"nftmarket.sol\":3242:3524  function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":2292:2393  function getTotalToken() public view returns(uint){... */\n    tag_76:\n        /* \"nftmarket.sol\":2337:2341  uint */\n      0x00\n        /* \"nftmarket.sol\":2360:2385  _tokenIdCounter.current() */\n      tag_200\n        /* \"nftmarket.sol\":2360:2375  _tokenIdCounter */\n      0x07\n        /* \"nftmarket.sol\":2360:2383  _tokenIdCounter.current */\n      tag_201\n        /* \"nftmarket.sol\":2360:2385  _tokenIdCounter.current() */\n      jump\t// in\n    tag_200:\n        /* \"nftmarket.sol\":2353:2385  return _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"nftmarket.sol\":2292:2393  function getTotalToken() public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":1072:1181  function setBaseURI(string memory newBaseTokenURI) public   {... */\n    tag_87:\n        /* \"nftmarket.sol\":1158:1173  newBaseTokenURI */\n      dup1\n        /* \"nftmarket.sol\":1143:1155  baseTokenURI */\n      0x08\n        /* \"nftmarket.sol\":1143:1173  baseTokenURI = newBaseTokenURI */\n      swap1\n      dup2\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      pop\n        /* \"nftmarket.sol\":1072:1181  function setBaseURI(string memory newBaseTokenURI) public   {... */\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":2023:2168  function KnowPrice( uint tokenIds) public view returns (uint) {... */\n    tag_91:\n        /* \"nftmarket.sol\":2079:2083  uint */\n      0x00\n        /* \"nftmarket.sol\":2098:2113  NFT memory info */\n      dup1\n        /* \"nftmarket.sol\":2116:2120  nfts */\n      0x0d\n        /* \"nftmarket.sol\":2116:2130  nfts[tokenIds] */\n      0x00\n        /* \"nftmarket.sol\":2121:2129  tokenIds */\n      dup5\n        /* \"nftmarket.sol\":2116:2130  nfts[tokenIds] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":2098:2130  NFT memory info = nfts[tokenIds] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"nftmarket.sol\":2148:2152  info */\n      dup1\n        /* \"nftmarket.sol\":2148:2158  info.price */\n      0x20\n      add\n      mload\n        /* \"nftmarket.sol\":2141:2158  return info.price */\n      swap2\n      pop\n      pop\n        /* \"nftmarket.sol\":2023:2168  function KnowPrice( uint tokenIds) public view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":1189:1527  function mintNFT(string memory tokenURI, uint price) public {... */\n    tag_97:\n        /* \"nftmarket.sol\":1260:1275  uint256 tokenId */\n      0x00\n        /* \"nftmarket.sol\":1278:1303  _tokenIdCounter.current() */\n      tag_209\n        /* \"nftmarket.sol\":1278:1293  _tokenIdCounter */\n      0x07\n        /* \"nftmarket.sol\":1278:1301  _tokenIdCounter.current */\n      tag_201\n        /* \"nftmarket.sol\":1278:1303  _tokenIdCounter.current() */\n      jump\t// in\n    tag_209:\n        /* \"nftmarket.sol\":1260:1303  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"nftmarket.sol\":1314:1344  _safeMint(msg.sender, tokenId) */\n      tag_210\n        /* \"nftmarket.sol\":1324:1334  msg.sender */\n      caller\n        /* \"nftmarket.sol\":1336:1343  tokenId */\n      dup3\n        /* \"nftmarket.sol\":1314:1323  _safeMint */\n      tag_211\n        /* \"nftmarket.sol\":1314:1344  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"nftmarket.sol\":1355:1386  _setTokenURI(tokenId, tokenURI) */\n      tag_212\n        /* \"nftmarket.sol\":1368:1375  tokenId */\n      dup2\n        /* \"nftmarket.sol\":1377:1385  tokenURI */\n      dup5\n        /* \"nftmarket.sol\":1355:1367  _setTokenURI */\n      tag_213\n        /* \"nftmarket.sol\":1355:1386  _setTokenURI(tokenId, tokenURI) */\n      jump\t// in\n    tag_212:\n        /* \"nftmarket.sol\":1413:1435  NFT(msg.sender, price) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"nftmarket.sol\":1417:1427  msg.sender */\n      caller\n        /* \"nftmarket.sol\":1413:1435  NFT(msg.sender, price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nftmarket.sol\":1429:1434  price */\n      dup4\n        /* \"nftmarket.sol\":1413:1435  NFT(msg.sender, price) */\n      dup2\n      mstore\n      pop\n        /* \"nftmarket.sol\":1398:1402  nfts */\n      0x0d\n        /* \"nftmarket.sol\":1398:1411  nfts[tokenId] */\n      0x00\n        /* \"nftmarket.sol\":1403:1410  tokenId */\n      dup4\n        /* \"nftmarket.sol\":1398:1411  nfts[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":1398:1435  nfts[tokenId]= NFT(msg.sender, price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"nftmarket.sol\":1475:1480  false */\n      0x00\n        /* \"nftmarket.sol\":1446:1452  isSold */\n      0x0c\n        /* \"nftmarket.sol\":1446:1465  isSold [msg.sender] */\n      0x00\n        /* \"nftmarket.sol\":1454:1464  msg.sender */\n      caller\n        /* \"nftmarket.sol\":1446:1465  isSold [msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":1446:1474  isSold [msg.sender][tokenId] */\n      0x00\n        /* \"nftmarket.sol\":1466:1473  tokenId */\n      dup4\n        /* \"nftmarket.sol\":1446:1474  isSold [msg.sender][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket.sol\":1446:1480  isSold [msg.sender][tokenId]=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nftmarket.sol\":1490:1517  _tokenIdCounter.increment() */\n      tag_214\n        /* \"nftmarket.sol\":1490:1505  _tokenIdCounter */\n      0x07\n        /* \"nftmarket.sol\":1490:1515  _tokenIdCounter.increment */\n      tag_215\n        /* \"nftmarket.sol\":1490:1517  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_214:\n        /* \"nftmarket.sol\":1249:1527  {... */\n      pop\n        /* \"nftmarket.sol\":1189:1527  function mintNFT(string memory tokenURI, uint price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":1713:1861  function SoldNft (uint tokenids) public view returns (bool) {... */\n    tag_112:\n        /* \"nftmarket.sol\":1767:1771  bool */\n      0x00\n        /* \"nftmarket.sol\":1784:1795  address ads */\n      dup1\n        /* \"nftmarket.sol\":1797:1814  ownerOf(tokenids) */\n      tag_222\n        /* \"nftmarket.sol\":1805:1813  tokenids */\n      dup4\n        /* \"nftmarket.sol\":1797:1804  ownerOf */\n      tag_101\n        /* \"nftmarket.sol\":1797:1814  ownerOf(tokenids) */\n      jump\t// in\n    tag_222:\n        /* \"nftmarket.sol\":1784:1814  address ads= ownerOf(tokenids) */\n      swap1\n      pop\n        /* \"nftmarket.sol\":1832:1838  isSold */\n      0x0c\n        /* \"nftmarket.sol\":1832:1843  isSold[ads] */\n      0x00\n        /* \"nftmarket.sol\":1839:1842  ads */\n      dup3\n        /* \"nftmarket.sol\":1832:1843  isSold[ads] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":1832:1853  isSold[ads][tokenids] */\n      0x00\n        /* \"nftmarket.sol\":1844:1852  tokenids */\n      dup5\n        /* \"nftmarket.sol\":1832:1853  isSold[ads][tokenids] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nftmarket.sol\":1825:1853  return isSold[ads][tokenids] */\n      swap2\n      pop\n      pop\n        /* \"nftmarket.sol\":1713:1861  function SoldNft (uint tokenids) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":623:660  uint256 public royaltyPercentage = 10 */\n    tag_116:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_224\n      swap1\n      tag_170\n      jump\t// in\n    tag_224:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_225\n      swap1\n      tag_170\n      jump\t// in\n    tag_225:\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_227\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_226)\n    tag_227:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_228:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_228\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":2401:3234  function BuyNFT(uint256 tokenId) public payable  {... */\n    tag_129:\n        /* \"nftmarket.sol\":2471:2489  address tokenOwner */\n      0x00\n        /* \"nftmarket.sol\":2492:2508  ownerOf(tokenId) */\n      tag_234\n        /* \"nftmarket.sol\":2500:2507  tokenId */\n      dup3\n        /* \"nftmarket.sol\":2492:2499  ownerOf */\n      tag_101\n        /* \"nftmarket.sol\":2492:2508  ownerOf(tokenId) */\n      jump\t// in\n    tag_234:\n        /* \"nftmarket.sol\":2471:2508  address tokenOwner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"nftmarket.sol\":2557:2561  true */\n      0x01\n        /* \"nftmarket.sol\":2527:2561  isSell[tokenOwner][tokenId]== true */\n      iszero\n      iszero\n        /* \"nftmarket.sol\":2527:2533  isSell */\n      0x0b\n        /* \"nftmarket.sol\":2527:2545  isSell[tokenOwner] */\n      0x00\n        /* \"nftmarket.sol\":2534:2544  tokenOwner */\n      dup4\n        /* \"nftmarket.sol\":2527:2545  isSell[tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":2527:2554  isSell[tokenOwner][tokenId] */\n      0x00\n        /* \"nftmarket.sol\":2546:2553  tokenId */\n      dup5\n        /* \"nftmarket.sol\":2527:2554  isSell[tokenOwner][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nftmarket.sol\":2527:2561  isSell[tokenOwner][tokenId]== true */\n      iszero\n      iszero\n      eq\n        /* \"nftmarket.sol\":2519:2586  require(isSell[tokenOwner][tokenId]== true, \"Token is not at sale\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"nftmarket.sol\":2599:2612  address buyer */\n      0x00\n        /* \"nftmarket.sol\":2615:2625  msg.sender */\n      caller\n        /* \"nftmarket.sol\":2599:2625  address buyer = msg.sender */\n      swap1\n      pop\n        /* \"nftmarket.sol\":2636:2649  uint256 price */\n      0x00\n        /* \"nftmarket.sol\":2652:2656  nfts */\n      0x0d\n        /* \"nftmarket.sol\":2652:2665  nfts[tokenId] */\n      0x00\n        /* \"nftmarket.sol\":2657:2664  tokenId */\n      dup6\n        /* \"nftmarket.sol\":2652:2665  nfts[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":2652:2671  nfts[tokenId].price */\n      0x01\n      add\n      sload\n        /* \"nftmarket.sol\":2636:2671  uint256 price = nfts[tokenId].price */\n      swap1\n      pop\n        /* \"nftmarket.sol\":2704:2709  buyer */\n      dup2\n        /* \"nftmarket.sol\":2690:2709  tokenOwner != buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket.sol\":2690:2700  tokenOwner */\n      dup4\n        /* \"nftmarket.sol\":2690:2709  tokenOwner != buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"nftmarket.sol\":2682:2737  require(tokenOwner != buyer, \"Cannot buy your own NFT\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"nftmarket.sol\":2769:2774  price */\n      dup1\n        /* \"nftmarket.sol\":2756:2765  msg.value */\n      callvalue\n        /* \"nftmarket.sol\":2756:2774  msg.value == price */\n      eq\n        /* \"nftmarket.sol\":2748:2796  require(msg.value == price, \"Supply Exact fund\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"nftmarket.sol\":2851:2888  _transfer(tokenOwner, buyer, tokenId) */\n      tag_244\n        /* \"nftmarket.sol\":2861:2871  tokenOwner */\n      dup4\n        /* \"nftmarket.sol\":2873:2878  buyer */\n      dup4\n        /* \"nftmarket.sol\":2880:2887  tokenId */\n      dup7\n        /* \"nftmarket.sol\":2851:2860  _transfer */\n      tag_245\n        /* \"nftmarket.sol\":2851:2888  _transfer(tokenOwner, buyer, tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"nftmarket.sol\":2951:2968  uint256 royalties */\n      0x00\n        /* \"nftmarket.sol\":3001:3004  100 */\n      0x64\n        /* \"nftmarket.sol\":2980:2997  royaltyPercentage */\n      sload(0x09)\n        /* \"nftmarket.sol\":2972:2977  price */\n      dup4\n        /* \"nftmarket.sol\":2972:2997  price * royaltyPercentage */\n      tag_246\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_246:\n        /* \"nftmarket.sol\":2971:3004  (price * royaltyPercentage) / 100 */\n      tag_247\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_247:\n        /* \"nftmarket.sol\":2951:3004  uint256 royalties = (price * royaltyPercentage) / 100 */\n      swap1\n      pop\n        /* \"nftmarket.sol\":3046:3059  contractOwner */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket.sol\":3038:3069  payable(contractOwner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket.sol\":3038:3080  payable(contractOwner).transfer(royalties) */\n      0x08fc\n        /* \"nftmarket.sol\":3070:3079  royalties */\n      dup3\n        /* \"nftmarket.sol\":3038:3080  payable(contractOwner).transfer(royalties) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n        /* \"nftmarket.sol\":3185:3195  tokenOwner */\n      dup4\n        /* \"nftmarket.sol\":3177:3205  payable(tokenOwner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket.sol\":3177:3224  payable(tokenOwner).transfer(price - royalties) */\n      0x08fc\n        /* \"nftmarket.sol\":3214:3223  royalties */\n      dup3\n        /* \"nftmarket.sol\":3206:3211  price */\n      dup5\n        /* \"nftmarket.sol\":3206:3223  price - royalties */\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"nftmarket.sol\":3177:3224  payable(tokenOwner).transfer(price - royalties) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n        /* \"nftmarket.sol\":2450:3234  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"nftmarket.sol\":2401:3234  function BuyNFT(uint256 tokenId) public payable  {... */\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":1535:1705  function SellNft(uint tokenId) public  {... */\n    tag_133:\n        /* \"nftmarket.sol\":1607:1623  ownerOf(tokenId) */\n      tag_255\n        /* \"nftmarket.sol\":1615:1622  tokenId */\n      dup2\n        /* \"nftmarket.sol\":1607:1614  ownerOf */\n      tag_101\n        /* \"nftmarket.sol\":1607:1623  ownerOf(tokenId) */\n      jump\t// in\n    tag_255:\n        /* \"nftmarket.sol\":1593:1623  msg.sender == ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nftmarket.sol\":1593:1603  msg.sender */\n      caller\n        /* \"nftmarket.sol\":1593:1623  msg.sender == ownerOf(tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nftmarket.sol\":1585:1654  require(msg.sender == ownerOf(tokenId), \"Your are Authorize to sell\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"nftmarket.sol\":1693:1697  true */\n      0x01\n        /* \"nftmarket.sol\":1665:1671  isSell */\n      0x0b\n        /* \"nftmarket.sol\":1665:1683  isSell[msg.sender] */\n      0x00\n        /* \"nftmarket.sol\":1672:1682  msg.sender */\n      caller\n        /* \"nftmarket.sol\":1665:1683  isSell[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":1665:1692  isSell[msg.sender][tokenId] */\n      0x00\n        /* \"nftmarket.sol\":1684:1691  tokenId */\n      dup4\n        /* \"nftmarket.sol\":1665:1692  isSell[msg.sender][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nftmarket.sol\":1665:1697  isSell[msg.sender][tokenId]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nftmarket.sol\":1535:1705  function SellNft(uint tokenId) public  {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_264:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_265\n      swap1\n      tag_170\n      jump\t// in\n    tag_265:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_266\n      swap1\n      tag_170\n      jump\t// in\n    tag_266:\n      dup1\n      iszero\n      tag_267\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_268\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_267)\n    tag_268:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_269:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_269\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_263)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_263)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_263:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":590:616  string public baseTokenURI */\n    tag_146:\n      0x08\n      dup1\n      sload\n      tag_278\n      swap1\n      tag_170\n      jump\t// in\n    tag_278:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_279\n      swap1\n      tag_170\n      jump\t// in\n    tag_279:\n      dup1\n      iszero\n      tag_280\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_281\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_280)\n    tag_281:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_282:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_282\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":1869:2015  function isSellNft (uint tokenid) public view returns (bool) {... */\n    tag_157:\n        /* \"nftmarket.sol\":1924:1928  bool */\n      0x00\n        /* \"nftmarket.sol\":1941:1951  address ad */\n      dup1\n        /* \"nftmarket.sol\":1954:1970  ownerOf(tokenid) */\n      tag_285\n        /* \"nftmarket.sol\":1962:1969  tokenid */\n      dup4\n        /* \"nftmarket.sol\":1954:1961  ownerOf */\n      tag_101\n        /* \"nftmarket.sol\":1954:1970  ownerOf(tokenid) */\n      jump\t// in\n    tag_285:\n        /* \"nftmarket.sol\":1941:1970  address ad = ownerOf(tokenid) */\n      swap1\n      pop\n        /* \"nftmarket.sol\":1988:1994  isSell */\n      0x0b\n        /* \"nftmarket.sol\":1988:1998  isSell[ad] */\n      0x00\n        /* \"nftmarket.sol\":1995:1997  ad */\n      dup3\n        /* \"nftmarket.sol\":1988:1998  isSell[ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nftmarket.sol\":1988:2007  isSell[ad][tokenid] */\n      0x00\n        /* \"nftmarket.sol\":1999:2006  tokenid */\n      dup5\n        /* \"nftmarket.sol\":1988:2007  isSell[ad][tokenid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"nftmarket.sol\":1981:2007  return isSell[ad][tokenid] */\n      swap2\n      pop\n      pop\n        /* \"nftmarket.sol\":1869:2015  function isSellNft (uint tokenid) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nftmarket.sol\":2176:2284  function getBalance(address ads) public view returns (uint256) {... */\n    tag_162:\n        /* \"nftmarket.sol\":2230:2237  uint256 */\n      0x00\n        /* \"nftmarket.sol\":2265:2268  ads */\n      dup2\n        /* \"nftmarket.sol\":2265:2276  ads.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"nftmarket.sol\":2258:2276  return ads.balance */\n      swap1\n      pop\n        /* \"nftmarket.sol\":2176:2284  function getBalance(address ads) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_288\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_289\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_315\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_315:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12112:12113  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12100  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12098:12114  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12167:12168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12137:12170  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12094:12181  if (to == address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12211  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12222:12224  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12226:12233  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12243:12244  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12221  _update */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12214:12246  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12190:12246  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12285:12286  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12273  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12260:12287  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12333:12340  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12310:12341  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12256:12467  if (previousOwner == address(0)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12379:12383  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12375  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12362:12383  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12427:12431  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12440  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12442:12455  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12406:12456  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12358:12467  if (previousOwner != from) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12084:12473  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12013:12473  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_336\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_337\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      0x01\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_339\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_344\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_343)\n    tag_344:\n      0x60\n      swap2\n      pop\n    tag_343:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_353\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_353:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_354\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_355\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_356)\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_357\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_358\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_359\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_363\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_366\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_367\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_367:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_374\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_382\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_383\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_385\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_386\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_387\n      jumpi\n      tag_388\n      tag_389\n      jump\t// in\n    tag_388:\n    tag_387:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_390\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_390:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_393\n      jumpi\n      tag_394\n      tag_395\n      jump\t// in\n    tag_394:\n    tag_393:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_391\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_398\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_399\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_400\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_401\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_402\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_401:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_404\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_405\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_406\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_407:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_411\n      jumpi\n      tag_412\n      tag_395\n      jump\t// in\n    tag_412:\n    tag_411:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_414\n      jumpi\n      tag_415\n      tag_395\n      jump\t// in\n    tag_415:\n    tag_414:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_416\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_417\n      jumpi\n      tag_418\n      tag_395\n      jump\t// in\n    tag_418:\n    tag_417:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_416:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_419\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_420\n      jumpi\n      tag_421\n      tag_395\n      jump\t// in\n    tag_421:\n    tag_420:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_422\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_423\n      jumpi\n      tag_424\n      tag_395\n      jump\t// in\n    tag_424:\n    tag_423:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_422:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_425\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_426\n      jumpi\n      tag_427\n      tag_395\n      jump\t// in\n    tag_427:\n    tag_426:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_429:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_430:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_431:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_432:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_433:\n        /* \"#utility.yul\":561:584   */\n      tag_501\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_432\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_502:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_434:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_504\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_433\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_36:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_507\n      tag_430\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":833:952   */\n    tag_506:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_508\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_434\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_435:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_436:\n        /* \"#utility.yul\":1268:1289   */\n      tag_511\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_435\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_39:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_513\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_436\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_437:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_438:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_439:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_517:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_517)\n    tag_519:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_440:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_441:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_522\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_437\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":2329:2400   */\n      tag_523\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_438\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_524\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_439\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":2499:2528   */\n      tag_525\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_440\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_44:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_527\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_441\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_442:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_443:\n        /* \"#utility.yul\":3016:3040   */\n      tag_530\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_442\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_531:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_444:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_533\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_443\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_48:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_536\n      tag_430\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3292:3411   */\n    tag_535:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_537\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_444\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_445:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_446:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_540\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_445\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_447:\n        /* \"#utility.yul\":3872:3896   */\n      tag_542\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_446\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_51:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_544\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_447\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_448:\n        /* \"#utility.yul\":4210:4234   */\n      tag_546\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_446\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_547:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_449:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_549\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_448\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_55:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_552\n      tag_430\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4503:4622   */\n    tag_551:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_553\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_449\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_554\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_444\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_60:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_557\n      tag_430\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":5000:5119   */\n    tag_556:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_558\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_449\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_559\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_449\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_560\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_444\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5633   */\n    tag_450:\n        /* \"#utility.yul\":5602:5626   */\n      tag_562\n        /* \"#utility.yul\":5620:5625   */\n      dup2\n        /* \"#utility.yul\":5602:5626   */\n      tag_442\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5597:5600   */\n      dup3\n        /* \"#utility.yul\":5590:5627   */\n      mstore\n        /* \"#utility.yul\":5515:5633   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5639:5971   */\n    tag_67:\n        /* \"#utility.yul\":5760:5764   */\n      0x00\n        /* \"#utility.yul\":5798:5800   */\n      0x40\n        /* \"#utility.yul\":5787:5796   */\n      dup3\n        /* \"#utility.yul\":5783:5801   */\n      add\n        /* \"#utility.yul\":5775:5801   */\n      swap1\n      pop\n        /* \"#utility.yul\":5811:5882   */\n      tag_564\n        /* \"#utility.yul\":5879:5880   */\n      0x00\n        /* \"#utility.yul\":5868:5877   */\n      dup4\n        /* \"#utility.yul\":5864:5881   */\n      add\n        /* \"#utility.yul\":5855:5861   */\n      dup6\n        /* \"#utility.yul\":5811:5882   */\n      tag_447\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":5892:5964   */\n      tag_565\n        /* \"#utility.yul\":5960:5962   */\n      0x20\n        /* \"#utility.yul\":5949:5958   */\n      dup4\n        /* \"#utility.yul\":5945:5963   */\n      add\n        /* \"#utility.yul\":5936:5942   */\n      dup5\n        /* \"#utility.yul\":5892:5964   */\n      tag_450\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":5639:5971   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5977:6451   */\n    tag_71:\n        /* \"#utility.yul\":6045:6051   */\n      0x00\n        /* \"#utility.yul\":6053:6059   */\n      dup1\n        /* \"#utility.yul\":6102:6104   */\n      0x40\n        /* \"#utility.yul\":6090:6099   */\n      dup4\n        /* \"#utility.yul\":6081:6088   */\n      dup6\n        /* \"#utility.yul\":6077:6100   */\n      sub\n        /* \"#utility.yul\":6073:6105   */\n      slt\n        /* \"#utility.yul\":6070:6189   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":6108:6187   */\n      tag_568\n      tag_430\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":6070:6189   */\n    tag_567:\n        /* \"#utility.yul\":6228:6229   */\n      0x00\n        /* \"#utility.yul\":6253:6306   */\n      tag_569\n        /* \"#utility.yul\":6298:6305   */\n      dup6\n        /* \"#utility.yul\":6289:6295   */\n      dup3\n        /* \"#utility.yul\":6278:6287   */\n      dup7\n        /* \"#utility.yul\":6274:6296   */\n      add\n        /* \"#utility.yul\":6253:6306   */\n      tag_444\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":6243:6306   */\n      swap3\n      pop\n        /* \"#utility.yul\":6199:6316   */\n      pop\n        /* \"#utility.yul\":6355:6357   */\n      0x20\n        /* \"#utility.yul\":6381:6434   */\n      tag_570\n        /* \"#utility.yul\":6426:6433   */\n      dup6\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6406:6415   */\n      dup7\n        /* \"#utility.yul\":6402:6424   */\n      add\n        /* \"#utility.yul\":6381:6434   */\n      tag_444\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":6371:6434   */\n      swap2\n      pop\n        /* \"#utility.yul\":6326:6444   */\n      pop\n        /* \"#utility.yul\":5977:6451   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6457:6679   */\n    tag_78:\n        /* \"#utility.yul\":6550:6554   */\n      0x00\n        /* \"#utility.yul\":6588:6590   */\n      0x20\n        /* \"#utility.yul\":6577:6586   */\n      dup3\n        /* \"#utility.yul\":6573:6591   */\n      add\n        /* \"#utility.yul\":6565:6591   */\n      swap1\n      pop\n        /* \"#utility.yul\":6601:6672   */\n      tag_572\n        /* \"#utility.yul\":6669:6670   */\n      0x00\n        /* \"#utility.yul\":6658:6667   */\n      dup4\n        /* \"#utility.yul\":6654:6671   */\n      add\n        /* \"#utility.yul\":6645:6651   */\n      dup5\n        /* \"#utility.yul\":6601:6672   */\n      tag_450\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6457:6679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6685:6802   */\n    tag_451:\n        /* \"#utility.yul\":6794:6795   */\n      0x00\n        /* \"#utility.yul\":6791:6792   */\n      dup1\n        /* \"#utility.yul\":6784:6796   */\n      revert\n        /* \"#utility.yul\":6808:6925   */\n    tag_452:\n        /* \"#utility.yul\":6917:6918   */\n      0x00\n        /* \"#utility.yul\":6914:6915   */\n      dup1\n        /* \"#utility.yul\":6907:6919   */\n      revert\n        /* \"#utility.yul\":6931:7111   */\n    tag_389:\n        /* \"#utility.yul\":6979:7056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6976:6977   */\n      0x00\n        /* \"#utility.yul\":6969:7057   */\n      mstore\n        /* \"#utility.yul\":7076:7080   */\n      0x41\n        /* \"#utility.yul\":7073:7074   */\n      0x04\n        /* \"#utility.yul\":7066:7081   */\n      mstore\n        /* \"#utility.yul\":7100:7104   */\n      0x24\n        /* \"#utility.yul\":7097:7098   */\n      0x00\n        /* \"#utility.yul\":7090:7105   */\n      revert\n        /* \"#utility.yul\":7117:7398   */\n    tag_453:\n        /* \"#utility.yul\":7200:7227   */\n      tag_577\n        /* \"#utility.yul\":7222:7226   */\n      dup3\n        /* \"#utility.yul\":7200:7227   */\n      tag_440\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":7192:7198   */\n      dup2\n        /* \"#utility.yul\":7188:7228   */\n      add\n        /* \"#utility.yul\":7330:7336   */\n      dup2\n        /* \"#utility.yul\":7318:7328   */\n      dup2\n        /* \"#utility.yul\":7315:7337   */\n      lt\n        /* \"#utility.yul\":7294:7312   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7282:7292   */\n      dup3\n        /* \"#utility.yul\":7279:7313   */\n      gt\n        /* \"#utility.yul\":7276:7338   */\n      or\n        /* \"#utility.yul\":7273:7361   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":7341:7359   */\n      tag_579\n      tag_389\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":7273:7361   */\n    tag_578:\n        /* \"#utility.yul\":7381:7391   */\n      dup1\n        /* \"#utility.yul\":7377:7379   */\n      0x40\n        /* \"#utility.yul\":7370:7392   */\n      mstore\n        /* \"#utility.yul\":7160:7398   */\n      pop\n        /* \"#utility.yul\":7117:7398   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:7533   */\n    tag_454:\n        /* \"#utility.yul\":7438:7444   */\n      0x00\n        /* \"#utility.yul\":7465:7485   */\n      tag_581\n      tag_429\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":7455:7485   */\n      swap1\n      pop\n        /* \"#utility.yul\":7494:7527   */\n      tag_582\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7514:7520   */\n      dup3\n        /* \"#utility.yul\":7494:7527   */\n      tag_453\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7404:7533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7539:7847   */\n    tag_455:\n        /* \"#utility.yul\":7601:7605   */\n      0x00\n        /* \"#utility.yul\":7691:7709   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7683:7689   */\n      dup3\n        /* \"#utility.yul\":7680:7710   */\n      gt\n        /* \"#utility.yul\":7677:7733   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":7713:7731   */\n      tag_585\n      tag_389\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7677:7733   */\n    tag_584:\n        /* \"#utility.yul\":7751:7780   */\n      tag_586\n        /* \"#utility.yul\":7773:7779   */\n      dup3\n        /* \"#utility.yul\":7751:7780   */\n      tag_440\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":7743:7780   */\n      swap1\n      pop\n        /* \"#utility.yul\":7835:7839   */\n      0x20\n        /* \"#utility.yul\":7829:7833   */\n      dup2\n        /* \"#utility.yul\":7825:7840   */\n      add\n        /* \"#utility.yul\":7817:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7539:7847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7853:7999   */\n    tag_456:\n        /* \"#utility.yul\":7950:7956   */\n      dup3\n        /* \"#utility.yul\":7945:7948   */\n      dup2\n        /* \"#utility.yul\":7940:7943   */\n      dup4\n        /* \"#utility.yul\":7927:7957   */\n      calldatacopy\n        /* \"#utility.yul\":7991:7992   */\n      0x00\n        /* \"#utility.yul\":7982:7988   */\n      dup4\n        /* \"#utility.yul\":7977:7980   */\n      dup4\n        /* \"#utility.yul\":7973:7989   */\n      add\n        /* \"#utility.yul\":7966:7993   */\n      mstore\n        /* \"#utility.yul\":7853:7999   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8005:8430   */\n    tag_457:\n        /* \"#utility.yul\":8083:8088   */\n      0x00\n        /* \"#utility.yul\":8108:8174   */\n      tag_589\n        /* \"#utility.yul\":8124:8173   */\n      tag_590\n        /* \"#utility.yul\":8166:8172   */\n      dup5\n        /* \"#utility.yul\":8124:8173   */\n      tag_455\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":8108:8174   */\n      tag_454\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":8099:8174   */\n      swap1\n      pop\n        /* \"#utility.yul\":8197:8203   */\n      dup3\n        /* \"#utility.yul\":8190:8195   */\n      dup2\n        /* \"#utility.yul\":8183:8204   */\n      mstore\n        /* \"#utility.yul\":8235:8239   */\n      0x20\n        /* \"#utility.yul\":8228:8233   */\n      dup2\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8273:8276   */\n      dup5\n        /* \"#utility.yul\":8264:8270   */\n      dup5\n        /* \"#utility.yul\":8259:8262   */\n      dup5\n        /* \"#utility.yul\":8255:8271   */\n      add\n        /* \"#utility.yul\":8252:8277   */\n      gt\n        /* \"#utility.yul\":8249:8361   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":8280:8359   */\n      tag_592\n      tag_452\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":8249:8361   */\n    tag_591:\n        /* \"#utility.yul\":8370:8424   */\n      tag_593\n        /* \"#utility.yul\":8417:8423   */\n      dup5\n        /* \"#utility.yul\":8412:8415   */\n      dup3\n        /* \"#utility.yul\":8407:8410   */\n      dup6\n        /* \"#utility.yul\":8370:8424   */\n      tag_456\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":8089:8430   */\n      pop\n        /* \"#utility.yul\":8005:8430   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8450:8790   */\n    tag_458:\n        /* \"#utility.yul\":8506:8511   */\n      0x00\n        /* \"#utility.yul\":8555:8558   */\n      dup3\n        /* \"#utility.yul\":8548:8552   */\n      0x1f\n        /* \"#utility.yul\":8540:8546   */\n      dup4\n        /* \"#utility.yul\":8536:8553   */\n      add\n        /* \"#utility.yul\":8532:8559   */\n      slt\n        /* \"#utility.yul\":8522:8644   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":8563:8642   */\n      tag_596\n      tag_451\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8522:8644   */\n    tag_595:\n        /* \"#utility.yul\":8680:8686   */\n      dup2\n        /* \"#utility.yul\":8667:8687   */\n      calldataload\n        /* \"#utility.yul\":8705:8784   */\n      tag_597\n        /* \"#utility.yul\":8780:8783   */\n      dup5\n        /* \"#utility.yul\":8772:8778   */\n      dup3\n        /* \"#utility.yul\":8765:8769   */\n      0x20\n        /* \"#utility.yul\":8757:8763   */\n      dup7\n        /* \"#utility.yul\":8753:8770   */\n      add\n        /* \"#utility.yul\":8705:8784   */\n      tag_457\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":8696:8784   */\n      swap2\n      pop\n        /* \"#utility.yul\":8512:8790   */\n      pop\n        /* \"#utility.yul\":8450:8790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8796:9305   */\n    tag_86:\n        /* \"#utility.yul\":8865:8871   */\n      0x00\n        /* \"#utility.yul\":8914:8916   */\n      0x20\n        /* \"#utility.yul\":8902:8911   */\n      dup3\n        /* \"#utility.yul\":8893:8900   */\n      dup5\n        /* \"#utility.yul\":8889:8912   */\n      sub\n        /* \"#utility.yul\":8885:8917   */\n      slt\n        /* \"#utility.yul\":8882:9001   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":8920:8999   */\n      tag_600\n      tag_430\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":8882:9001   */\n    tag_599:\n        /* \"#utility.yul\":9068:9069   */\n      0x00\n        /* \"#utility.yul\":9057:9066   */\n      dup3\n        /* \"#utility.yul\":9053:9070   */\n      add\n        /* \"#utility.yul\":9040:9071   */\n      calldataload\n        /* \"#utility.yul\":9098:9116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9090:9096   */\n      dup2\n        /* \"#utility.yul\":9087:9117   */\n      gt\n        /* \"#utility.yul\":9084:9201   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":9120:9199   */\n      tag_602\n      tag_431\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":9084:9201   */\n    tag_601:\n        /* \"#utility.yul\":9225:9288   */\n      tag_603\n        /* \"#utility.yul\":9280:9287   */\n      dup5\n        /* \"#utility.yul\":9271:9277   */\n      dup3\n        /* \"#utility.yul\":9260:9269   */\n      dup6\n        /* \"#utility.yul\":9256:9278   */\n      add\n        /* \"#utility.yul\":9225:9288   */\n      tag_458\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":9215:9288   */\n      swap2\n      pop\n        /* \"#utility.yul\":9011:9298   */\n      pop\n        /* \"#utility.yul\":8796:9305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9965   */\n    tag_96:\n        /* \"#utility.yul\":9389:9395   */\n      0x00\n        /* \"#utility.yul\":9397:9403   */\n      dup1\n        /* \"#utility.yul\":9446:9448   */\n      0x40\n        /* \"#utility.yul\":9434:9443   */\n      dup4\n        /* \"#utility.yul\":9425:9432   */\n      dup6\n        /* \"#utility.yul\":9421:9444   */\n      sub\n        /* \"#utility.yul\":9417:9449   */\n      slt\n        /* \"#utility.yul\":9414:9533   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":9452:9531   */\n      tag_606\n      tag_430\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":9414:9533   */\n    tag_605:\n        /* \"#utility.yul\":9600:9601   */\n      0x00\n        /* \"#utility.yul\":9589:9598   */\n      dup4\n        /* \"#utility.yul\":9585:9602   */\n      add\n        /* \"#utility.yul\":9572:9603   */\n      calldataload\n        /* \"#utility.yul\":9630:9648   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9622:9628   */\n      dup2\n        /* \"#utility.yul\":9619:9649   */\n      gt\n        /* \"#utility.yul\":9616:9733   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":9652:9731   */\n      tag_608\n      tag_431\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":9616:9733   */\n    tag_607:\n        /* \"#utility.yul\":9757:9820   */\n      tag_609\n        /* \"#utility.yul\":9812:9819   */\n      dup6\n        /* \"#utility.yul\":9803:9809   */\n      dup3\n        /* \"#utility.yul\":9792:9801   */\n      dup7\n        /* \"#utility.yul\":9788:9810   */\n      add\n        /* \"#utility.yul\":9757:9820   */\n      tag_458\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":9747:9820   */\n      swap3\n      pop\n        /* \"#utility.yul\":9543:9830   */\n      pop\n        /* \"#utility.yul\":9869:9871   */\n      0x20\n        /* \"#utility.yul\":9895:9948   */\n      tag_610\n        /* \"#utility.yul\":9940:9947   */\n      dup6\n        /* \"#utility.yul\":9931:9937   */\n      dup3\n        /* \"#utility.yul\":9920:9929   */\n      dup7\n        /* \"#utility.yul\":9916:9938   */\n      add\n        /* \"#utility.yul\":9895:9948   */\n      tag_444\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":9885:9948   */\n      swap2\n      pop\n        /* \"#utility.yul\":9840:9958   */\n      pop\n        /* \"#utility.yul\":9311:9965   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9971:10300   */\n    tag_106:\n        /* \"#utility.yul\":10030:10036   */\n      0x00\n        /* \"#utility.yul\":10079:10081   */\n      0x20\n        /* \"#utility.yul\":10067:10076   */\n      dup3\n        /* \"#utility.yul\":10058:10065   */\n      dup5\n        /* \"#utility.yul\":10054:10077   */\n      sub\n        /* \"#utility.yul\":10050:10082   */\n      slt\n        /* \"#utility.yul\":10047:10166   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":10085:10164   */\n      tag_613\n      tag_430\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":10047:10166   */\n    tag_612:\n        /* \"#utility.yul\":10205:10206   */\n      0x00\n        /* \"#utility.yul\":10230:10283   */\n      tag_614\n        /* \"#utility.yul\":10275:10282   */\n      dup5\n        /* \"#utility.yul\":10266:10272   */\n      dup3\n        /* \"#utility.yul\":10255:10264   */\n      dup6\n        /* \"#utility.yul\":10251:10273   */\n      add\n        /* \"#utility.yul\":10230:10283   */\n      tag_449\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":10220:10283   */\n      swap2\n      pop\n        /* \"#utility.yul\":10176:10293   */\n      pop\n        /* \"#utility.yul\":9971:10300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10306:10422   */\n    tag_459:\n        /* \"#utility.yul\":10376:10397   */\n      tag_616\n        /* \"#utility.yul\":10391:10396   */\n      dup2\n        /* \"#utility.yul\":10376:10397   */\n      tag_435\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":10369:10374   */\n      dup2\n        /* \"#utility.yul\":10366:10398   */\n      eq\n        /* \"#utility.yul\":10356:10416   */\n      tag_617\n      jumpi\n        /* \"#utility.yul\":10412:10413   */\n      0x00\n        /* \"#utility.yul\":10409:10410   */\n      dup1\n        /* \"#utility.yul\":10402:10414   */\n      revert\n        /* \"#utility.yul\":10356:10416   */\n    tag_617:\n        /* \"#utility.yul\":10306:10422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10428:10561   */\n    tag_460:\n        /* \"#utility.yul\":10471:10476   */\n      0x00\n        /* \"#utility.yul\":10509:10515   */\n      dup2\n        /* \"#utility.yul\":10496:10516   */\n      calldataload\n        /* \"#utility.yul\":10487:10516   */\n      swap1\n      pop\n        /* \"#utility.yul\":10525:10555   */\n      tag_619\n        /* \"#utility.yul\":10549:10554   */\n      dup2\n        /* \"#utility.yul\":10525:10555   */\n      tag_459\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":10428:10561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10567:11035   */\n    tag_125:\n        /* \"#utility.yul\":10632:10638   */\n      0x00\n        /* \"#utility.yul\":10640:10646   */\n      dup1\n        /* \"#utility.yul\":10689:10691   */\n      0x40\n        /* \"#utility.yul\":10677:10686   */\n      dup4\n        /* \"#utility.yul\":10668:10675   */\n      dup6\n        /* \"#utility.yul\":10664:10687   */\n      sub\n        /* \"#utility.yul\":10660:10692   */\n      slt\n        /* \"#utility.yul\":10657:10776   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":10695:10774   */\n      tag_622\n      tag_430\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":10657:10776   */\n    tag_621:\n        /* \"#utility.yul\":10815:10816   */\n      0x00\n        /* \"#utility.yul\":10840:10893   */\n      tag_623\n        /* \"#utility.yul\":10885:10892   */\n      dup6\n        /* \"#utility.yul\":10876:10882   */\n      dup3\n        /* \"#utility.yul\":10865:10874   */\n      dup7\n        /* \"#utility.yul\":10861:10883   */\n      add\n        /* \"#utility.yul\":10840:10893   */\n      tag_449\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":10830:10893   */\n      swap3\n      pop\n        /* \"#utility.yul\":10786:10903   */\n      pop\n        /* \"#utility.yul\":10942:10944   */\n      0x20\n        /* \"#utility.yul\":10968:11018   */\n      tag_624\n        /* \"#utility.yul\":11010:11017   */\n      dup6\n        /* \"#utility.yul\":11001:11007   */\n      dup3\n        /* \"#utility.yul\":10990:10999   */\n      dup7\n        /* \"#utility.yul\":10986:11008   */\n      add\n        /* \"#utility.yul\":10968:11018   */\n      tag_460\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10958:11018   */\n      swap2\n      pop\n        /* \"#utility.yul\":10913:11028   */\n      pop\n        /* \"#utility.yul\":10567:11035   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11041:11348   */\n    tag_461:\n        /* \"#utility.yul\":11102:11106   */\n      0x00\n        /* \"#utility.yul\":11192:11210   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11184:11190   */\n      dup3\n        /* \"#utility.yul\":11181:11211   */\n      gt\n        /* \"#utility.yul\":11178:11234   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":11214:11232   */\n      tag_627\n      tag_389\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":11178:11234   */\n    tag_626:\n        /* \"#utility.yul\":11252:11281   */\n      tag_628\n        /* \"#utility.yul\":11274:11280   */\n      dup3\n        /* \"#utility.yul\":11252:11281   */\n      tag_440\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":11244:11281   */\n      swap1\n      pop\n        /* \"#utility.yul\":11336:11340   */\n      0x20\n        /* \"#utility.yul\":11330:11334   */\n      dup2\n        /* \"#utility.yul\":11326:11341   */\n      add\n        /* \"#utility.yul\":11318:11341   */\n      swap1\n      pop\n        /* \"#utility.yul\":11041:11348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11354:11777   */\n    tag_462:\n        /* \"#utility.yul\":11431:11436   */\n      0x00\n        /* \"#utility.yul\":11456:11521   */\n      tag_630\n        /* \"#utility.yul\":11472:11520   */\n      tag_631\n        /* \"#utility.yul\":11513:11519   */\n      dup5\n        /* \"#utility.yul\":11472:11520   */\n      tag_461\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":11456:11521   */\n      tag_454\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":11447:11521   */\n      swap1\n      pop\n        /* \"#utility.yul\":11544:11550   */\n      dup3\n        /* \"#utility.yul\":11537:11542   */\n      dup2\n        /* \"#utility.yul\":11530:11551   */\n      mstore\n        /* \"#utility.yul\":11582:11586   */\n      0x20\n        /* \"#utility.yul\":11575:11580   */\n      dup2\n        /* \"#utility.yul\":11571:11587   */\n      add\n        /* \"#utility.yul\":11620:11623   */\n      dup5\n        /* \"#utility.yul\":11611:11617   */\n      dup5\n        /* \"#utility.yul\":11606:11609   */\n      dup5\n        /* \"#utility.yul\":11602:11618   */\n      add\n        /* \"#utility.yul\":11599:11624   */\n      gt\n        /* \"#utility.yul\":11596:11708   */\n      iszero\n      tag_632\n      jumpi\n        /* \"#utility.yul\":11627:11706   */\n      tag_633\n      tag_452\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":11596:11708   */\n    tag_632:\n        /* \"#utility.yul\":11717:11771   */\n      tag_634\n        /* \"#utility.yul\":11764:11770   */\n      dup5\n        /* \"#utility.yul\":11759:11762   */\n      dup3\n        /* \"#utility.yul\":11754:11757   */\n      dup6\n        /* \"#utility.yul\":11717:11771   */\n      tag_456\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":11437:11777   */\n      pop\n        /* \"#utility.yul\":11354:11777   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11796:12134   */\n    tag_463:\n        /* \"#utility.yul\":11851:11856   */\n      0x00\n        /* \"#utility.yul\":11900:11903   */\n      dup3\n        /* \"#utility.yul\":11893:11897   */\n      0x1f\n        /* \"#utility.yul\":11885:11891   */\n      dup4\n        /* \"#utility.yul\":11881:11898   */\n      add\n        /* \"#utility.yul\":11877:11904   */\n      slt\n        /* \"#utility.yul\":11867:11989   */\n      tag_636\n      jumpi\n        /* \"#utility.yul\":11908:11987   */\n      tag_637\n      tag_451\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":11867:11989   */\n    tag_636:\n        /* \"#utility.yul\":12025:12031   */\n      dup2\n        /* \"#utility.yul\":12012:12032   */\n      calldataload\n        /* \"#utility.yul\":12050:12128   */\n      tag_638\n        /* \"#utility.yul\":12124:12127   */\n      dup5\n        /* \"#utility.yul\":12116:12122   */\n      dup3\n        /* \"#utility.yul\":12109:12113   */\n      0x20\n        /* \"#utility.yul\":12101:12107   */\n      dup7\n        /* \"#utility.yul\":12097:12114   */\n      add\n        /* \"#utility.yul\":12050:12128   */\n      tag_462\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12041:12128   */\n      swap2\n      pop\n        /* \"#utility.yul\":11857:12134   */\n      pop\n        /* \"#utility.yul\":11796:12134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12140:13083   */\n    tag_137:\n        /* \"#utility.yul\":12235:12241   */\n      0x00\n        /* \"#utility.yul\":12243:12249   */\n      dup1\n        /* \"#utility.yul\":12251:12257   */\n      0x00\n        /* \"#utility.yul\":12259:12265   */\n      dup1\n        /* \"#utility.yul\":12308:12311   */\n      0x80\n        /* \"#utility.yul\":12296:12305   */\n      dup6\n        /* \"#utility.yul\":12287:12294   */\n      dup8\n        /* \"#utility.yul\":12283:12306   */\n      sub\n        /* \"#utility.yul\":12279:12312   */\n      slt\n        /* \"#utility.yul\":12276:12396   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":12315:12394   */\n      tag_641\n      tag_430\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":12276:12396   */\n    tag_640:\n        /* \"#utility.yul\":12435:12436   */\n      0x00\n        /* \"#utility.yul\":12460:12513   */\n      tag_642\n        /* \"#utility.yul\":12505:12512   */\n      dup8\n        /* \"#utility.yul\":12496:12502   */\n      dup3\n        /* \"#utility.yul\":12485:12494   */\n      dup9\n        /* \"#utility.yul\":12481:12503   */\n      add\n        /* \"#utility.yul\":12460:12513   */\n      tag_449\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":12450:12513   */\n      swap5\n      pop\n        /* \"#utility.yul\":12406:12523   */\n      pop\n        /* \"#utility.yul\":12562:12564   */\n      0x20\n        /* \"#utility.yul\":12588:12641   */\n      tag_643\n        /* \"#utility.yul\":12633:12640   */\n      dup8\n        /* \"#utility.yul\":12624:12630   */\n      dup3\n        /* \"#utility.yul\":12613:12622   */\n      dup9\n        /* \"#utility.yul\":12609:12631   */\n      add\n        /* \"#utility.yul\":12588:12641   */\n      tag_449\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":12578:12641   */\n      swap4\n      pop\n        /* \"#utility.yul\":12533:12651   */\n      pop\n        /* \"#utility.yul\":12690:12692   */\n      0x40\n        /* \"#utility.yul\":12716:12769   */\n      tag_644\n        /* \"#utility.yul\":12761:12768   */\n      dup8\n        /* \"#utility.yul\":12752:12758   */\n      dup3\n        /* \"#utility.yul\":12741:12750   */\n      dup9\n        /* \"#utility.yul\":12737:12759   */\n      add\n        /* \"#utility.yul\":12716:12769   */\n      tag_444\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":12706:12769   */\n      swap3\n      pop\n        /* \"#utility.yul\":12661:12779   */\n      pop\n        /* \"#utility.yul\":12846:12848   */\n      0x60\n        /* \"#utility.yul\":12835:12844   */\n      dup6\n        /* \"#utility.yul\":12831:12849   */\n      add\n        /* \"#utility.yul\":12818:12850   */\n      calldataload\n        /* \"#utility.yul\":12877:12895   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12869:12875   */\n      dup2\n        /* \"#utility.yul\":12866:12896   */\n      gt\n        /* \"#utility.yul\":12863:12980   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":12899:12978   */\n      tag_646\n      tag_431\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":12863:12980   */\n    tag_645:\n        /* \"#utility.yul\":13004:13066   */\n      tag_647\n        /* \"#utility.yul\":13058:13065   */\n      dup8\n        /* \"#utility.yul\":13049:13055   */\n      dup3\n        /* \"#utility.yul\":13038:13047   */\n      dup9\n        /* \"#utility.yul\":13034:13056   */\n      add\n        /* \"#utility.yul\":13004:13066   */\n      tag_463\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":12994:13066   */\n      swap2\n      pop\n        /* \"#utility.yul\":12789:13076   */\n      pop\n        /* \"#utility.yul\":12140:13083   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13089:13563   */\n    tag_151:\n        /* \"#utility.yul\":13157:13163   */\n      0x00\n        /* \"#utility.yul\":13165:13171   */\n      dup1\n        /* \"#utility.yul\":13214:13216   */\n      0x40\n        /* \"#utility.yul\":13202:13211   */\n      dup4\n        /* \"#utility.yul\":13193:13200   */\n      dup6\n        /* \"#utility.yul\":13189:13212   */\n      sub\n        /* \"#utility.yul\":13185:13217   */\n      slt\n        /* \"#utility.yul\":13182:13301   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":13220:13299   */\n      tag_650\n      tag_430\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":13182:13301   */\n    tag_649:\n        /* \"#utility.yul\":13340:13341   */\n      0x00\n        /* \"#utility.yul\":13365:13418   */\n      tag_651\n        /* \"#utility.yul\":13410:13417   */\n      dup6\n        /* \"#utility.yul\":13401:13407   */\n      dup3\n        /* \"#utility.yul\":13390:13399   */\n      dup7\n        /* \"#utility.yul\":13386:13408   */\n      add\n        /* \"#utility.yul\":13365:13418   */\n      tag_449\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":13355:13418   */\n      swap3\n      pop\n        /* \"#utility.yul\":13311:13428   */\n      pop\n        /* \"#utility.yul\":13467:13469   */\n      0x20\n        /* \"#utility.yul\":13493:13546   */\n      tag_652\n        /* \"#utility.yul\":13538:13545   */\n      dup6\n        /* \"#utility.yul\":13529:13535   */\n      dup3\n        /* \"#utility.yul\":13518:13527   */\n      dup7\n        /* \"#utility.yul\":13514:13536   */\n      add\n        /* \"#utility.yul\":13493:13546   */\n      tag_449\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":13483:13546   */\n      swap2\n      pop\n        /* \"#utility.yul\":13438:13556   */\n      pop\n        /* \"#utility.yul\":13089:13563   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13569:13749   */\n    tag_464:\n        /* \"#utility.yul\":13617:13694   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13614:13615   */\n      0x00\n        /* \"#utility.yul\":13607:13695   */\n      mstore\n        /* \"#utility.yul\":13714:13718   */\n      0x22\n        /* \"#utility.yul\":13711:13712   */\n      0x04\n        /* \"#utility.yul\":13704:13719   */\n      mstore\n        /* \"#utility.yul\":13738:13742   */\n      0x24\n        /* \"#utility.yul\":13735:13736   */\n      0x00\n        /* \"#utility.yul\":13728:13743   */\n      revert\n        /* \"#utility.yul\":13755:14075   */\n    tag_170:\n        /* \"#utility.yul\":13799:13805   */\n      0x00\n        /* \"#utility.yul\":13836:13837   */\n      0x02\n        /* \"#utility.yul\":13830:13834   */\n      dup3\n        /* \"#utility.yul\":13826:13838   */\n      div\n        /* \"#utility.yul\":13816:13838   */\n      swap1\n      pop\n        /* \"#utility.yul\":13883:13884   */\n      0x01\n        /* \"#utility.yul\":13877:13881   */\n      dup3\n        /* \"#utility.yul\":13873:13885   */\n      and\n        /* \"#utility.yul\":13904:13922   */\n      dup1\n        /* \"#utility.yul\":13894:13975   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":13960:13964   */\n      0x7f\n        /* \"#utility.yul\":13952:13958   */\n      dup3\n        /* \"#utility.yul\":13948:13965   */\n      and\n        /* \"#utility.yul\":13938:13965   */\n      swap2\n      pop\n        /* \"#utility.yul\":13894:13975   */\n    tag_655:\n        /* \"#utility.yul\":14022:14024   */\n      0x20\n        /* \"#utility.yul\":14014:14020   */\n      dup3\n        /* \"#utility.yul\":14011:14025   */\n      lt\n        /* \"#utility.yul\":13991:14009   */\n      dup2\n        /* \"#utility.yul\":13988:14026   */\n      sub\n        /* \"#utility.yul\":13985:14069   */\n      tag_656\n      jumpi\n        /* \"#utility.yul\":14041:14059   */\n      tag_657\n      tag_464\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":13985:14069   */\n    tag_656:\n        /* \"#utility.yul\":13806:14075   */\n      pop\n        /* \"#utility.yul\":13755:14075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14081:14523   */\n    tag_193:\n        /* \"#utility.yul\":14230:14234   */\n      0x00\n        /* \"#utility.yul\":14268:14270   */\n      0x60\n        /* \"#utility.yul\":14257:14266   */\n      dup3\n        /* \"#utility.yul\":14253:14271   */\n      add\n        /* \"#utility.yul\":14245:14271   */\n      swap1\n      pop\n        /* \"#utility.yul\":14281:14352   */\n      tag_659\n        /* \"#utility.yul\":14349:14350   */\n      0x00\n        /* \"#utility.yul\":14338:14347   */\n      dup4\n        /* \"#utility.yul\":14334:14351   */\n      add\n        /* \"#utility.yul\":14325:14331   */\n      dup7\n        /* \"#utility.yul\":14281:14352   */\n      tag_447\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":14362:14434   */\n      tag_660\n        /* \"#utility.yul\":14430:14432   */\n      0x20\n        /* \"#utility.yul\":14419:14428   */\n      dup4\n        /* \"#utility.yul\":14415:14433   */\n      add\n        /* \"#utility.yul\":14406:14412   */\n      dup6\n        /* \"#utility.yul\":14362:14434   */\n      tag_450\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":14444:14516   */\n      tag_661\n        /* \"#utility.yul\":14512:14514   */\n      0x40\n        /* \"#utility.yul\":14501:14510   */\n      dup4\n        /* \"#utility.yul\":14497:14515   */\n      add\n        /* \"#utility.yul\":14488:14494   */\n      dup5\n        /* \"#utility.yul\":14444:14516   */\n      tag_447\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":14081:14523   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14529:14709   */\n    tag_465:\n        /* \"#utility.yul\":14577:14654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14574:14575   */\n      0x00\n        /* \"#utility.yul\":14567:14655   */\n      mstore\n        /* \"#utility.yul\":14674:14678   */\n      0x11\n        /* \"#utility.yul\":14671:14672   */\n      0x04\n        /* \"#utility.yul\":14664:14679   */\n      mstore\n        /* \"#utility.yul\":14698:14702   */\n      0x24\n        /* \"#utility.yul\":14695:14696   */\n      0x00\n        /* \"#utility.yul\":14688:14703   */\n      revert\n        /* \"#utility.yul\":14715:15125   */\n    tag_196:\n        /* \"#utility.yul\":14755:14762   */\n      0x00\n        /* \"#utility.yul\":14778:14798   */\n      tag_664\n        /* \"#utility.yul\":14796:14797   */\n      dup3\n        /* \"#utility.yul\":14778:14798   */\n      tag_442\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":14773:14798   */\n      swap2\n      pop\n        /* \"#utility.yul\":14812:14832   */\n      tag_665\n        /* \"#utility.yul\":14830:14831   */\n      dup4\n        /* \"#utility.yul\":14812:14832   */\n      tag_442\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":14807:14832   */\n      swap3\n      pop\n        /* \"#utility.yul\":14867:14868   */\n      dup3\n        /* \"#utility.yul\":14864:14865   */\n      dup3\n        /* \"#utility.yul\":14860:14869   */\n      mul\n        /* \"#utility.yul\":14889:14919   */\n      tag_666\n        /* \"#utility.yul\":14907:14918   */\n      dup2\n        /* \"#utility.yul\":14889:14919   */\n      tag_442\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":14878:14919   */\n      swap2\n      pop\n        /* \"#utility.yul\":15068:15069   */\n      dup3\n        /* \"#utility.yul\":15059:15066   */\n      dup3\n        /* \"#utility.yul\":15055:15070   */\n      div\n        /* \"#utility.yul\":15052:15053   */\n      dup5\n        /* \"#utility.yul\":15049:15071   */\n      eq\n        /* \"#utility.yul\":15029:15030   */\n      dup4\n        /* \"#utility.yul\":15022:15031   */\n      iszero\n        /* \"#utility.yul\":15002:15085   */\n      or\n        /* \"#utility.yul\":14979:15118   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":15098:15116   */\n      tag_668\n      tag_465\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":14979:15118   */\n    tag_667:\n        /* \"#utility.yul\":14763:15125   */\n      pop\n        /* \"#utility.yul\":14715:15125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15131:15311   */\n    tag_395:\n        /* \"#utility.yul\":15179:15256   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15176:15177   */\n      0x00\n        /* \"#utility.yul\":15169:15257   */\n      mstore\n        /* \"#utility.yul\":15276:15280   */\n      0x12\n        /* \"#utility.yul\":15273:15274   */\n      0x04\n        /* \"#utility.yul\":15266:15281   */\n      mstore\n        /* \"#utility.yul\":15300:15304   */\n      0x24\n        /* \"#utility.yul\":15297:15298   */\n      0x00\n        /* \"#utility.yul\":15290:15305   */\n      revert\n        /* \"#utility.yul\":15317:15502   */\n    tag_198:\n        /* \"#utility.yul\":15357:15358   */\n      0x00\n        /* \"#utility.yul\":15374:15394   */\n      tag_671\n        /* \"#utility.yul\":15392:15393   */\n      dup3\n        /* \"#utility.yul\":15374:15394   */\n      tag_442\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":15369:15394   */\n      swap2\n      pop\n        /* \"#utility.yul\":15408:15428   */\n      tag_672\n        /* \"#utility.yul\":15426:15427   */\n      dup4\n        /* \"#utility.yul\":15408:15428   */\n      tag_442\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":15403:15428   */\n      swap3\n      pop\n        /* \"#utility.yul\":15447:15448   */\n      dup3\n        /* \"#utility.yul\":15437:15472   */\n      tag_673\n      jumpi\n        /* \"#utility.yul\":15452:15470   */\n      tag_674\n      tag_395\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":15437:15472   */\n    tag_673:\n        /* \"#utility.yul\":15494:15495   */\n      dup3\n        /* \"#utility.yul\":15491:15492   */\n      dup3\n        /* \"#utility.yul\":15487:15496   */\n      div\n        /* \"#utility.yul\":15482:15496   */\n      swap1\n      pop\n        /* \"#utility.yul\":15317:15502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15508:15649   */\n    tag_466:\n        /* \"#utility.yul\":15557:15561   */\n      0x00\n        /* \"#utility.yul\":15580:15583   */\n      dup2\n        /* \"#utility.yul\":15572:15583   */\n      swap1\n      pop\n        /* \"#utility.yul\":15603:15606   */\n      dup2\n        /* \"#utility.yul\":15600:15601   */\n      0x00\n        /* \"#utility.yul\":15593:15607   */\n      mstore\n        /* \"#utility.yul\":15637:15641   */\n      0x20\n        /* \"#utility.yul\":15634:15635   */\n      0x00\n        /* \"#utility.yul\":15624:15642   */\n      keccak256\n        /* \"#utility.yul\":15616:15642   */\n      swap1\n      pop\n        /* \"#utility.yul\":15508:15649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15655:15748   */\n    tag_467:\n        /* \"#utility.yul\":15692:15698   */\n      0x00\n        /* \"#utility.yul\":15739:15741   */\n      0x20\n        /* \"#utility.yul\":15734:15736   */\n      0x1f\n        /* \"#utility.yul\":15727:15732   */\n      dup4\n        /* \"#utility.yul\":15723:15737   */\n      add\n        /* \"#utility.yul\":15719:15742   */\n      div\n        /* \"#utility.yul\":15709:15742   */\n      swap1\n      pop\n        /* \"#utility.yul\":15655:15748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15754:15861   */\n    tag_468:\n        /* \"#utility.yul\":15798:15806   */\n      0x00\n        /* \"#utility.yul\":15848:15853   */\n      dup3\n        /* \"#utility.yul\":15842:15846   */\n      dup3\n        /* \"#utility.yul\":15838:15854   */\n      shl\n        /* \"#utility.yul\":15817:15854   */\n      swap1\n      pop\n        /* \"#utility.yul\":15754:15861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15867:16260   */\n    tag_469:\n        /* \"#utility.yul\":15936:15942   */\n      0x00\n        /* \"#utility.yul\":15986:15987   */\n      0x08\n        /* \"#utility.yul\":15974:15984   */\n      dup4\n        /* \"#utility.yul\":15970:15988   */\n      mul\n        /* \"#utility.yul\":16009:16106   */\n      tag_679\n        /* \"#utility.yul\":16039:16105   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16028:16037   */\n      dup3\n        /* \"#utility.yul\":16009:16106   */\n      tag_468\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":16127:16166   */\n      tag_680\n        /* \"#utility.yul\":16157:16165   */\n      dup7\n        /* \"#utility.yul\":16146:16155   */\n      dup4\n        /* \"#utility.yul\":16127:16166   */\n      tag_468\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":16115:16166   */\n      swap6\n      pop\n        /* \"#utility.yul\":16199:16203   */\n      dup1\n        /* \"#utility.yul\":16195:16204   */\n      not\n        /* \"#utility.yul\":16188:16193   */\n      dup5\n        /* \"#utility.yul\":16184:16205   */\n      and\n        /* \"#utility.yul\":16175:16205   */\n      swap4\n      pop\n        /* \"#utility.yul\":16248:16252   */\n      dup1\n        /* \"#utility.yul\":16238:16246   */\n      dup7\n        /* \"#utility.yul\":16234:16253   */\n      and\n        /* \"#utility.yul\":16227:16232   */\n      dup5\n        /* \"#utility.yul\":16224:16254   */\n      or\n        /* \"#utility.yul\":16214:16254   */\n      swap3\n      pop\n        /* \"#utility.yul\":15943:16260   */\n      pop\n      pop\n        /* \"#utility.yul\":15867:16260   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16266:16326   */\n    tag_470:\n        /* \"#utility.yul\":16294:16297   */\n      0x00\n        /* \"#utility.yul\":16315:16320   */\n      dup2\n        /* \"#utility.yul\":16308:16320   */\n      swap1\n      pop\n        /* \"#utility.yul\":16266:16326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16332:16474   */\n    tag_471:\n        /* \"#utility.yul\":16382:16391   */\n      0x00\n        /* \"#utility.yul\":16415:16468   */\n      tag_683\n        /* \"#utility.yul\":16433:16467   */\n      tag_684\n        /* \"#utility.yul\":16442:16466   */\n      tag_685\n        /* \"#utility.yul\":16460:16465   */\n      dup5\n        /* \"#utility.yul\":16442:16466   */\n      tag_442\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":16433:16467   */\n      tag_470\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":16415:16468   */\n      tag_442\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":16402:16468   */\n      swap1\n      pop\n        /* \"#utility.yul\":16332:16474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16480:16555   */\n    tag_472:\n        /* \"#utility.yul\":16523:16526   */\n      0x00\n        /* \"#utility.yul\":16544:16549   */\n      dup2\n        /* \"#utility.yul\":16537:16549   */\n      swap1\n      pop\n        /* \"#utility.yul\":16480:16555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16561:16830   */\n    tag_473:\n        /* \"#utility.yul\":16671:16710   */\n      tag_688\n        /* \"#utility.yul\":16702:16709   */\n      dup4\n        /* \"#utility.yul\":16671:16710   */\n      tag_471\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":16732:16823   */\n      tag_689\n        /* \"#utility.yul\":16781:16822   */\n      tag_690\n        /* \"#utility.yul\":16805:16821   */\n      dup3\n        /* \"#utility.yul\":16781:16822   */\n      tag_472\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":16773:16779   */\n      dup5\n        /* \"#utility.yul\":16766:16770   */\n      dup5\n        /* \"#utility.yul\":16760:16771   */\n      sload\n        /* \"#utility.yul\":16732:16823   */\n      tag_469\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":16726:16730   */\n      dup3\n        /* \"#utility.yul\":16719:16824   */\n      sstore\n        /* \"#utility.yul\":16637:16830   */\n      pop\n        /* \"#utility.yul\":16561:16830   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16836:16909   */\n    tag_474:\n        /* \"#utility.yul\":16881:16884   */\n      0x00\n        /* \"#utility.yul\":16836:16909   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16915:17104   */\n    tag_475:\n        /* \"#utility.yul\":16992:17024   */\n      tag_693\n      tag_474\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":17033:17098   */\n      tag_694\n        /* \"#utility.yul\":17091:17097   */\n      dup2\n        /* \"#utility.yul\":17083:17089   */\n      dup5\n        /* \"#utility.yul\":17077:17081   */\n      dup5\n        /* \"#utility.yul\":17033:17098   */\n      tag_473\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":16968:17104   */\n      pop\n        /* \"#utility.yul\":16915:17104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17110:17296   */\n    tag_476:\n        /* \"#utility.yul\":17170:17290   */\n    tag_696:\n        /* \"#utility.yul\":17187:17190   */\n      dup2\n        /* \"#utility.yul\":17180:17185   */\n      dup2\n        /* \"#utility.yul\":17177:17191   */\n      lt\n        /* \"#utility.yul\":17170:17290   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":17241:17280   */\n      tag_699\n        /* \"#utility.yul\":17278:17279   */\n      0x00\n        /* \"#utility.yul\":17271:17276   */\n      dup3\n        /* \"#utility.yul\":17241:17280   */\n      tag_475\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":17214:17215   */\n      0x01\n        /* \"#utility.yul\":17207:17212   */\n      dup2\n        /* \"#utility.yul\":17203:17216   */\n      add\n        /* \"#utility.yul\":17194:17216   */\n      swap1\n      pop\n        /* \"#utility.yul\":17170:17290   */\n      jump(tag_696)\n    tag_698:\n        /* \"#utility.yul\":17110:17296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17302:17845   */\n    tag_477:\n        /* \"#utility.yul\":17403:17405   */\n      0x1f\n        /* \"#utility.yul\":17398:17401   */\n      dup3\n        /* \"#utility.yul\":17395:17406   */\n      gt\n        /* \"#utility.yul\":17392:17838   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":17437:17475   */\n      tag_702\n        /* \"#utility.yul\":17469:17474   */\n      dup2\n        /* \"#utility.yul\":17437:17475   */\n      tag_466\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":17521:17550   */\n      tag_703\n        /* \"#utility.yul\":17539:17549   */\n      dup5\n        /* \"#utility.yul\":17521:17550   */\n      tag_467\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":17511:17519   */\n      dup2\n        /* \"#utility.yul\":17507:17551   */\n      add\n        /* \"#utility.yul\":17704:17706   */\n      0x20\n        /* \"#utility.yul\":17692:17702   */\n      dup6\n        /* \"#utility.yul\":17689:17707   */\n      lt\n        /* \"#utility.yul\":17686:17735   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":17725:17733   */\n      dup2\n        /* \"#utility.yul\":17710:17733   */\n      swap1\n      pop\n        /* \"#utility.yul\":17686:17735   */\n    tag_704:\n        /* \"#utility.yul\":17748:17828   */\n      tag_705\n        /* \"#utility.yul\":17804:17826   */\n      tag_706\n        /* \"#utility.yul\":17822:17825   */\n      dup6\n        /* \"#utility.yul\":17804:17826   */\n      tag_467\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":17794:17802   */\n      dup4\n        /* \"#utility.yul\":17790:17827   */\n      add\n        /* \"#utility.yul\":17777:17788   */\n      dup3\n        /* \"#utility.yul\":17748:17828   */\n      tag_476\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":17407:17838   */\n      pop\n      pop\n        /* \"#utility.yul\":17392:17838   */\n    tag_701:\n        /* \"#utility.yul\":17302:17845   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17851:17968   */\n    tag_478:\n        /* \"#utility.yul\":17905:17913   */\n      0x00\n        /* \"#utility.yul\":17955:17960   */\n      dup3\n        /* \"#utility.yul\":17949:17953   */\n      dup3\n        /* \"#utility.yul\":17945:17961   */\n      shr\n        /* \"#utility.yul\":17924:17961   */\n      swap1\n      pop\n        /* \"#utility.yul\":17851:17968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17974:18143   */\n    tag_479:\n        /* \"#utility.yul\":18018:18024   */\n      0x00\n        /* \"#utility.yul\":18051:18102   */\n      tag_709\n        /* \"#utility.yul\":18099:18100   */\n      0x00\n        /* \"#utility.yul\":18095:18101   */\n      not\n        /* \"#utility.yul\":18087:18092   */\n      dup5\n        /* \"#utility.yul\":18084:18085   */\n      0x08\n        /* \"#utility.yul\":18080:18093   */\n      mul\n        /* \"#utility.yul\":18051:18102   */\n      tag_478\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":18047:18103   */\n      not\n        /* \"#utility.yul\":18132:18136   */\n      dup1\n        /* \"#utility.yul\":18126:18130   */\n      dup4\n        /* \"#utility.yul\":18122:18137   */\n      and\n        /* \"#utility.yul\":18112:18137   */\n      swap2\n      pop\n        /* \"#utility.yul\":18025:18143   */\n      pop\n        /* \"#utility.yul\":17974:18143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18148:18443   */\n    tag_480:\n        /* \"#utility.yul\":18224:18228   */\n      0x00\n        /* \"#utility.yul\":18370:18399   */\n      tag_711\n        /* \"#utility.yul\":18395:18398   */\n      dup4\n        /* \"#utility.yul\":18389:18393   */\n      dup4\n        /* \"#utility.yul\":18370:18399   */\n      tag_479\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":18362:18399   */\n      swap2\n      pop\n        /* \"#utility.yul\":18432:18435   */\n      dup3\n        /* \"#utility.yul\":18429:18430   */\n      0x02\n        /* \"#utility.yul\":18425:18436   */\n      mul\n        /* \"#utility.yul\":18419:18423   */\n      dup3\n        /* \"#utility.yul\":18416:18437   */\n      or\n        /* \"#utility.yul\":18408:18437   */\n      swap1\n      pop\n        /* \"#utility.yul\":18148:18443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18448:19843   */\n    tag_206:\n        /* \"#utility.yul\":18565:18602   */\n      tag_713\n        /* \"#utility.yul\":18598:18601   */\n      dup3\n        /* \"#utility.yul\":18565:18602   */\n      tag_437\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":18667:18685   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18659:18665   */\n      dup2\n        /* \"#utility.yul\":18656:18686   */\n      gt\n        /* \"#utility.yul\":18653:18709   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":18689:18707   */\n      tag_715\n      tag_389\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":18653:18709   */\n    tag_714:\n        /* \"#utility.yul\":18733:18771   */\n      tag_716\n        /* \"#utility.yul\":18765:18769   */\n      dup3\n        /* \"#utility.yul\":18759:18770   */\n      sload\n        /* \"#utility.yul\":18733:18771   */\n      tag_170\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":18818:18885   */\n      tag_717\n        /* \"#utility.yul\":18878:18884   */\n      dup3\n        /* \"#utility.yul\":18870:18876   */\n      dup3\n        /* \"#utility.yul\":18864:18868   */\n      dup6\n        /* \"#utility.yul\":18818:18885   */\n      tag_477\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":18912:18913   */\n      0x00\n        /* \"#utility.yul\":18936:18940   */\n      0x20\n        /* \"#utility.yul\":18923:18940   */\n      swap1\n      pop\n        /* \"#utility.yul\":18968:18970   */\n      0x1f\n        /* \"#utility.yul\":18960:18966   */\n      dup4\n        /* \"#utility.yul\":18957:18971   */\n      gt\n        /* \"#utility.yul\":18985:18986   */\n      0x01\n        /* \"#utility.yul\":18980:19598   */\n      dup2\n      eq\n      tag_719\n      jumpi\n        /* \"#utility.yul\":19642:19643   */\n      0x00\n        /* \"#utility.yul\":19659:19665   */\n      dup5\n        /* \"#utility.yul\":19656:19733   */\n      iszero\n      tag_720\n      jumpi\n        /* \"#utility.yul\":19708:19717   */\n      dup3\n        /* \"#utility.yul\":19703:19706   */\n      dup8\n        /* \"#utility.yul\":19699:19718   */\n      add\n        /* \"#utility.yul\":19693:19719   */\n      mload\n        /* \"#utility.yul\":19684:19719   */\n      swap1\n      pop\n        /* \"#utility.yul\":19656:19733   */\n    tag_720:\n        /* \"#utility.yul\":19759:19826   */\n      tag_721\n        /* \"#utility.yul\":19819:19825   */\n      dup6\n        /* \"#utility.yul\":19812:19817   */\n      dup3\n        /* \"#utility.yul\":19759:19826   */\n      tag_480\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":19753:19757   */\n      dup7\n        /* \"#utility.yul\":19746:19827   */\n      sstore\n        /* \"#utility.yul\":19615:19837   */\n      pop\n        /* \"#utility.yul\":18950:19837   */\n      jump(tag_718)\n        /* \"#utility.yul\":18980:19598   */\n    tag_719:\n        /* \"#utility.yul\":19032:19036   */\n      0x1f\n        /* \"#utility.yul\":19028:19037   */\n      not\n        /* \"#utility.yul\":19020:19026   */\n      dup5\n        /* \"#utility.yul\":19016:19038   */\n      and\n        /* \"#utility.yul\":19066:19103   */\n      tag_722\n        /* \"#utility.yul\":19098:19102   */\n      dup7\n        /* \"#utility.yul\":19066:19103   */\n      tag_466\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":19125:19126   */\n      0x00\n        /* \"#utility.yul\":19139:19347   */\n    tag_723:\n        /* \"#utility.yul\":19153:19160   */\n      dup3\n        /* \"#utility.yul\":19150:19151   */\n      dup2\n        /* \"#utility.yul\":19147:19161   */\n      lt\n        /* \"#utility.yul\":19139:19347   */\n      iszero\n      tag_725\n      jumpi\n        /* \"#utility.yul\":19232:19241   */\n      dup5\n        /* \"#utility.yul\":19227:19230   */\n      dup10\n        /* \"#utility.yul\":19223:19242   */\n      add\n        /* \"#utility.yul\":19217:19243   */\n      mload\n        /* \"#utility.yul\":19209:19215   */\n      dup3\n        /* \"#utility.yul\":19202:19244   */\n      sstore\n        /* \"#utility.yul\":19283:19284   */\n      0x01\n        /* \"#utility.yul\":19275:19281   */\n      dup3\n        /* \"#utility.yul\":19271:19285   */\n      add\n        /* \"#utility.yul\":19261:19285   */\n      swap2\n      pop\n        /* \"#utility.yul\":19330:19332   */\n      0x20\n        /* \"#utility.yul\":19319:19328   */\n      dup6\n        /* \"#utility.yul\":19315:19333   */\n      add\n        /* \"#utility.yul\":19302:19333   */\n      swap5\n      pop\n        /* \"#utility.yul\":19176:19180   */\n      0x20\n        /* \"#utility.yul\":19173:19174   */\n      dup2\n        /* \"#utility.yul\":19169:19181   */\n      add\n        /* \"#utility.yul\":19164:19181   */\n      swap1\n      pop\n        /* \"#utility.yul\":19139:19347   */\n      jump(tag_723)\n    tag_725:\n        /* \"#utility.yul\":19375:19381   */\n      dup7\n        /* \"#utility.yul\":19366:19373   */\n      dup4\n        /* \"#utility.yul\":19363:19382   */\n      lt\n        /* \"#utility.yul\":19360:19539   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":19433:19442   */\n      dup5\n        /* \"#utility.yul\":19428:19431   */\n      dup10\n        /* \"#utility.yul\":19424:19443   */\n      add\n        /* \"#utility.yul\":19418:19444   */\n      mload\n        /* \"#utility.yul\":19476:19524   */\n      tag_727\n        /* \"#utility.yul\":19518:19522   */\n      0x1f\n        /* \"#utility.yul\":19510:19516   */\n      dup10\n        /* \"#utility.yul\":19506:19523   */\n      and\n        /* \"#utility.yul\":19495:19504   */\n      dup3\n        /* \"#utility.yul\":19476:19524   */\n      tag_479\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":19468:19474   */\n      dup4\n        /* \"#utility.yul\":19461:19525   */\n      sstore\n        /* \"#utility.yul\":19383:19539   */\n      pop\n        /* \"#utility.yul\":19360:19539   */\n    tag_726:\n        /* \"#utility.yul\":19585:19586   */\n      0x01\n        /* \"#utility.yul\":19581:19582   */\n      0x02\n        /* \"#utility.yul\":19573:19579   */\n      dup9\n        /* \"#utility.yul\":19569:19583   */\n      mul\n        /* \"#utility.yul\":19565:19587   */\n      add\n        /* \"#utility.yul\":19559:19563   */\n      dup9\n        /* \"#utility.yul\":19552:19588   */\n      sstore\n        /* \"#utility.yul\":18987:19598   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18950:19837   */\n    tag_718:\n      pop\n        /* \"#utility.yul\":18540:19843   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18448:19843   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19849:20019   */\n    tag_481:\n        /* \"#utility.yul\":19989:20011   */\n      0x546f6b656e206973206e6f742061742073616c65000000000000000000000000\n        /* \"#utility.yul\":19985:19986   */\n      0x00\n        /* \"#utility.yul\":19977:19983   */\n      dup3\n        /* \"#utility.yul\":19973:19987   */\n      add\n        /* \"#utility.yul\":19966:20012   */\n      mstore\n        /* \"#utility.yul\":19849:20019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20025:20391   */\n    tag_482:\n        /* \"#utility.yul\":20167:20170   */\n      0x00\n        /* \"#utility.yul\":20188:20255   */\n      tag_730\n        /* \"#utility.yul\":20252:20254   */\n      0x14\n        /* \"#utility.yul\":20247:20250   */\n      dup4\n        /* \"#utility.yul\":20188:20255   */\n      tag_438\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":20181:20255   */\n      swap2\n      pop\n        /* \"#utility.yul\":20264:20357   */\n      tag_731\n        /* \"#utility.yul\":20353:20356   */\n      dup3\n        /* \"#utility.yul\":20264:20357   */\n      tag_481\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":20382:20384   */\n      0x20\n        /* \"#utility.yul\":20377:20380   */\n      dup3\n        /* \"#utility.yul\":20373:20385   */\n      add\n        /* \"#utility.yul\":20366:20385   */\n      swap1\n      pop\n        /* \"#utility.yul\":20025:20391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20397:20816   */\n    tag_237:\n        /* \"#utility.yul\":20563:20567   */\n      0x00\n        /* \"#utility.yul\":20601:20603   */\n      0x20\n        /* \"#utility.yul\":20590:20599   */\n      dup3\n        /* \"#utility.yul\":20586:20604   */\n      add\n        /* \"#utility.yul\":20578:20604   */\n      swap1\n      pop\n        /* \"#utility.yul\":20650:20659   */\n      dup2\n        /* \"#utility.yul\":20644:20648   */\n      dup2\n        /* \"#utility.yul\":20640:20660   */\n      sub\n        /* \"#utility.yul\":20636:20637   */\n      0x00\n        /* \"#utility.yul\":20625:20634   */\n      dup4\n        /* \"#utility.yul\":20621:20638   */\n      add\n        /* \"#utility.yul\":20614:20661   */\n      mstore\n        /* \"#utility.yul\":20678:20809   */\n      tag_733\n        /* \"#utility.yul\":20804:20808   */\n      dup2\n        /* \"#utility.yul\":20678:20809   */\n      tag_482\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":20670:20809   */\n      swap1\n      pop\n        /* \"#utility.yul\":20397:20816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20822:20995   */\n    tag_483:\n        /* \"#utility.yul\":20962:20987   */\n      0x43616e6e6f742062757920796f7572206f776e204e4654000000000000000000\n        /* \"#utility.yul\":20958:20959   */\n      0x00\n        /* \"#utility.yul\":20950:20956   */\n      dup3\n        /* \"#utility.yul\":20946:20960   */\n      add\n        /* \"#utility.yul\":20939:20988   */\n      mstore\n        /* \"#utility.yul\":20822:20995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21001:21367   */\n    tag_484:\n        /* \"#utility.yul\":21143:21146   */\n      0x00\n        /* \"#utility.yul\":21164:21231   */\n      tag_736\n        /* \"#utility.yul\":21228:21230   */\n      0x17\n        /* \"#utility.yul\":21223:21226   */\n      dup4\n        /* \"#utility.yul\":21164:21231   */\n      tag_438\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":21157:21231   */\n      swap2\n      pop\n        /* \"#utility.yul\":21240:21333   */\n      tag_737\n        /* \"#utility.yul\":21329:21332   */\n      dup3\n        /* \"#utility.yul\":21240:21333   */\n      tag_483\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":21358:21360   */\n      0x20\n        /* \"#utility.yul\":21353:21356   */\n      dup3\n        /* \"#utility.yul\":21349:21361   */\n      add\n        /* \"#utility.yul\":21342:21361   */\n      swap1\n      pop\n        /* \"#utility.yul\":21001:21367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21373:21792   */\n    tag_240:\n        /* \"#utility.yul\":21539:21543   */\n      0x00\n        /* \"#utility.yul\":21577:21579   */\n      0x20\n        /* \"#utility.yul\":21566:21575   */\n      dup3\n        /* \"#utility.yul\":21562:21580   */\n      add\n        /* \"#utility.yul\":21554:21580   */\n      swap1\n      pop\n        /* \"#utility.yul\":21626:21635   */\n      dup2\n        /* \"#utility.yul\":21620:21624   */\n      dup2\n        /* \"#utility.yul\":21616:21636   */\n      sub\n        /* \"#utility.yul\":21612:21613   */\n      0x00\n        /* \"#utility.yul\":21601:21610   */\n      dup4\n        /* \"#utility.yul\":21597:21614   */\n      add\n        /* \"#utility.yul\":21590:21637   */\n      mstore\n        /* \"#utility.yul\":21654:21785   */\n      tag_739\n        /* \"#utility.yul\":21780:21784   */\n      dup2\n        /* \"#utility.yul\":21654:21785   */\n      tag_484\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":21646:21785   */\n      swap1\n      pop\n        /* \"#utility.yul\":21373:21792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21798:21965   */\n    tag_485:\n        /* \"#utility.yul\":21938:21957   */\n      0x537570706c792045786163742066756e64000000000000000000000000000000\n        /* \"#utility.yul\":21934:21935   */\n      0x00\n        /* \"#utility.yul\":21926:21932   */\n      dup3\n        /* \"#utility.yul\":21922:21936   */\n      add\n        /* \"#utility.yul\":21915:21958   */\n      mstore\n        /* \"#utility.yul\":21798:21965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21971:22337   */\n    tag_486:\n        /* \"#utility.yul\":22113:22116   */\n      0x00\n        /* \"#utility.yul\":22134:22201   */\n      tag_742\n        /* \"#utility.yul\":22198:22200   */\n      0x11\n        /* \"#utility.yul\":22193:22196   */\n      dup4\n        /* \"#utility.yul\":22134:22201   */\n      tag_438\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":22127:22201   */\n      swap2\n      pop\n        /* \"#utility.yul\":22210:22303   */\n      tag_743\n        /* \"#utility.yul\":22299:22302   */\n      dup3\n        /* \"#utility.yul\":22210:22303   */\n      tag_485\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":22328:22330   */\n      0x20\n        /* \"#utility.yul\":22323:22326   */\n      dup3\n        /* \"#utility.yul\":22319:22331   */\n      add\n        /* \"#utility.yul\":22312:22331   */\n      swap1\n      pop\n        /* \"#utility.yul\":21971:22337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22343:22762   */\n    tag_243:\n        /* \"#utility.yul\":22509:22513   */\n      0x00\n        /* \"#utility.yul\":22547:22549   */\n      0x20\n        /* \"#utility.yul\":22536:22545   */\n      dup3\n        /* \"#utility.yul\":22532:22550   */\n      add\n        /* \"#utility.yul\":22524:22550   */\n      swap1\n      pop\n        /* \"#utility.yul\":22596:22605   */\n      dup2\n        /* \"#utility.yul\":22590:22594   */\n      dup2\n        /* \"#utility.yul\":22586:22606   */\n      sub\n        /* \"#utility.yul\":22582:22583   */\n      0x00\n        /* \"#utility.yul\":22571:22580   */\n      dup4\n        /* \"#utility.yul\":22567:22584   */\n      add\n        /* \"#utility.yul\":22560:22607   */\n      mstore\n        /* \"#utility.yul\":22624:22755   */\n      tag_745\n        /* \"#utility.yul\":22750:22754   */\n      dup2\n        /* \"#utility.yul\":22624:22755   */\n      tag_486\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":22616:22755   */\n      swap1\n      pop\n        /* \"#utility.yul\":22343:22762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22768:22962   */\n    tag_251:\n        /* \"#utility.yul\":22808:22812   */\n      0x00\n        /* \"#utility.yul\":22828:22848   */\n      tag_747\n        /* \"#utility.yul\":22846:22847   */\n      dup3\n        /* \"#utility.yul\":22828:22848   */\n      tag_442\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":22823:22848   */\n      swap2\n      pop\n        /* \"#utility.yul\":22862:22882   */\n      tag_748\n        /* \"#utility.yul\":22880:22881   */\n      dup4\n        /* \"#utility.yul\":22862:22882   */\n      tag_442\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":22857:22882   */\n      swap3\n      pop\n        /* \"#utility.yul\":22906:22907   */\n      dup3\n        /* \"#utility.yul\":22903:22904   */\n      dup3\n        /* \"#utility.yul\":22899:22908   */\n      sub\n        /* \"#utility.yul\":22891:22908   */\n      swap1\n      pop\n        /* \"#utility.yul\":22930:22931   */\n      dup2\n        /* \"#utility.yul\":22924:22928   */\n      dup2\n        /* \"#utility.yul\":22921:22932   */\n      gt\n        /* \"#utility.yul\":22918:22955   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":22935:22953   */\n      tag_750\n      tag_465\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":22918:22955   */\n    tag_749:\n        /* \"#utility.yul\":22768:22962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22968:23144   */\n    tag_487:\n        /* \"#utility.yul\":23108:23136   */\n      0x596f75722061726520417574686f72697a6520746f2073656c6c000000000000\n        /* \"#utility.yul\":23104:23105   */\n      0x00\n        /* \"#utility.yul\":23096:23102   */\n      dup3\n        /* \"#utility.yul\":23092:23106   */\n      add\n        /* \"#utility.yul\":23085:23137   */\n      mstore\n        /* \"#utility.yul\":22968:23144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23150:23516   */\n    tag_488:\n        /* \"#utility.yul\":23292:23295   */\n      0x00\n        /* \"#utility.yul\":23313:23380   */\n      tag_753\n        /* \"#utility.yul\":23377:23379   */\n      0x1a\n        /* \"#utility.yul\":23372:23375   */\n      dup4\n        /* \"#utility.yul\":23313:23380   */\n      tag_438\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":23306:23380   */\n      swap2\n      pop\n        /* \"#utility.yul\":23389:23482   */\n      tag_754\n        /* \"#utility.yul\":23478:23481   */\n      dup3\n        /* \"#utility.yul\":23389:23482   */\n      tag_487\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":23507:23509   */\n      0x20\n        /* \"#utility.yul\":23502:23505   */\n      dup3\n        /* \"#utility.yul\":23498:23510   */\n      add\n        /* \"#utility.yul\":23491:23510   */\n      swap1\n      pop\n        /* \"#utility.yul\":23150:23516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23522:23941   */\n    tag_258:\n        /* \"#utility.yul\":23688:23692   */\n      0x00\n        /* \"#utility.yul\":23726:23728   */\n      0x20\n        /* \"#utility.yul\":23715:23724   */\n      dup3\n        /* \"#utility.yul\":23711:23729   */\n      add\n        /* \"#utility.yul\":23703:23729   */\n      swap1\n      pop\n        /* \"#utility.yul\":23775:23784   */\n      dup2\n        /* \"#utility.yul\":23769:23773   */\n      dup2\n        /* \"#utility.yul\":23765:23785   */\n      sub\n        /* \"#utility.yul\":23761:23762   */\n      0x00\n        /* \"#utility.yul\":23750:23759   */\n      dup4\n        /* \"#utility.yul\":23746:23763   */\n      add\n        /* \"#utility.yul\":23739:23786   */\n      mstore\n        /* \"#utility.yul\":23803:23934   */\n      tag_756\n        /* \"#utility.yul\":23929:23933   */\n      dup2\n        /* \"#utility.yul\":23803:23934   */\n      tag_488\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":23795:23934   */\n      swap1\n      pop\n        /* \"#utility.yul\":23522:23941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23947:24095   */\n    tag_489:\n        /* \"#utility.yul\":24049:24060   */\n      0x00\n        /* \"#utility.yul\":24086:24089   */\n      dup2\n        /* \"#utility.yul\":24071:24089   */\n      swap1\n      pop\n        /* \"#utility.yul\":23947:24095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24101:24491   */\n    tag_490:\n        /* \"#utility.yul\":24207:24210   */\n      0x00\n        /* \"#utility.yul\":24235:24274   */\n      tag_759\n        /* \"#utility.yul\":24268:24273   */\n      dup3\n        /* \"#utility.yul\":24235:24274   */\n      tag_437\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":24290:24379   */\n      tag_760\n        /* \"#utility.yul\":24372:24378   */\n      dup2\n        /* \"#utility.yul\":24367:24370   */\n      dup6\n        /* \"#utility.yul\":24290:24379   */\n      tag_489\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":24283:24379   */\n      swap4\n      pop\n        /* \"#utility.yul\":24388:24453   */\n      tag_761\n        /* \"#utility.yul\":24446:24452   */\n      dup2\n        /* \"#utility.yul\":24441:24444   */\n      dup6\n        /* \"#utility.yul\":24434:24438   */\n      0x20\n        /* \"#utility.yul\":24427:24432   */\n      dup7\n        /* \"#utility.yul\":24423:24439   */\n      add\n        /* \"#utility.yul\":24388:24453   */\n      tag_439\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":24478:24484   */\n      dup1\n        /* \"#utility.yul\":24473:24476   */\n      dup5\n        /* \"#utility.yul\":24469:24485   */\n      add\n        /* \"#utility.yul\":24462:24485   */\n      swap2\n      pop\n        /* \"#utility.yul\":24211:24491   */\n      pop\n        /* \"#utility.yul\":24101:24491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24497:24932   */\n    tag_275:\n        /* \"#utility.yul\":24677:24680   */\n      0x00\n        /* \"#utility.yul\":24699:24794   */\n      tag_763\n        /* \"#utility.yul\":24790:24793   */\n      dup3\n        /* \"#utility.yul\":24781:24787   */\n      dup6\n        /* \"#utility.yul\":24699:24794   */\n      tag_490\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":24692:24794   */\n      swap2\n      pop\n        /* \"#utility.yul\":24811:24906   */\n      tag_764\n        /* \"#utility.yul\":24902:24905   */\n      dup3\n        /* \"#utility.yul\":24893:24899   */\n      dup5\n        /* \"#utility.yul\":24811:24906   */\n      tag_490\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":24804:24906   */\n      swap2\n      pop\n        /* \"#utility.yul\":24923:24926   */\n      dup2\n        /* \"#utility.yul\":24916:24926   */\n      swap1\n      pop\n        /* \"#utility.yul\":24497:24932   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24938:25036   */\n    tag_491:\n        /* \"#utility.yul\":24989:24995   */\n      0x00\n        /* \"#utility.yul\":25023:25028   */\n      dup2\n        /* \"#utility.yul\":25017:25029   */\n      mload\n        /* \"#utility.yul\":25007:25029   */\n      swap1\n      pop\n        /* \"#utility.yul\":24938:25036   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25042:25210   */\n    tag_492:\n        /* \"#utility.yul\":25125:25136   */\n      0x00\n        /* \"#utility.yul\":25159:25165   */\n      dup3\n        /* \"#utility.yul\":25154:25157   */\n      dup3\n        /* \"#utility.yul\":25147:25166   */\n      mstore\n        /* \"#utility.yul\":25199:25203   */\n      0x20\n        /* \"#utility.yul\":25194:25197   */\n      dup3\n        /* \"#utility.yul\":25190:25204   */\n      add\n        /* \"#utility.yul\":25175:25204   */\n      swap1\n      pop\n        /* \"#utility.yul\":25042:25210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25216:25589   */\n    tag_493:\n        /* \"#utility.yul\":25302:25305   */\n      0x00\n        /* \"#utility.yul\":25330:25368   */\n      tag_768\n        /* \"#utility.yul\":25362:25367   */\n      dup3\n        /* \"#utility.yul\":25330:25368   */\n      tag_491\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":25384:25454   */\n      tag_769\n        /* \"#utility.yul\":25447:25453   */\n      dup2\n        /* \"#utility.yul\":25442:25445   */\n      dup6\n        /* \"#utility.yul\":25384:25454   */\n      tag_492\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":25377:25454   */\n      swap4\n      pop\n        /* \"#utility.yul\":25463:25528   */\n      tag_770\n        /* \"#utility.yul\":25521:25527   */\n      dup2\n        /* \"#utility.yul\":25516:25519   */\n      dup6\n        /* \"#utility.yul\":25509:25513   */\n      0x20\n        /* \"#utility.yul\":25502:25507   */\n      dup7\n        /* \"#utility.yul\":25498:25514   */\n      add\n        /* \"#utility.yul\":25463:25528   */\n      tag_439\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":25553:25582   */\n      tag_771\n        /* \"#utility.yul\":25575:25581   */\n      dup2\n        /* \"#utility.yul\":25553:25582   */\n      tag_440\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":25548:25551   */\n      dup5\n        /* \"#utility.yul\":25544:25583   */\n      add\n        /* \"#utility.yul\":25537:25583   */\n      swap2\n      pop\n        /* \"#utility.yul\":25306:25589   */\n      pop\n        /* \"#utility.yul\":25216:25589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25595:26235   */\n    tag_335:\n        /* \"#utility.yul\":25790:25794   */\n      0x00\n        /* \"#utility.yul\":25828:25831   */\n      0x80\n        /* \"#utility.yul\":25817:25826   */\n      dup3\n        /* \"#utility.yul\":25813:25832   */\n      add\n        /* \"#utility.yul\":25805:25832   */\n      swap1\n      pop\n        /* \"#utility.yul\":25842:25913   */\n      tag_773\n        /* \"#utility.yul\":25910:25911   */\n      0x00\n        /* \"#utility.yul\":25899:25908   */\n      dup4\n        /* \"#utility.yul\":25895:25912   */\n      add\n        /* \"#utility.yul\":25886:25892   */\n      dup8\n        /* \"#utility.yul\":25842:25913   */\n      tag_447\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":25923:25995   */\n      tag_774\n        /* \"#utility.yul\":25991:25993   */\n      0x20\n        /* \"#utility.yul\":25980:25989   */\n      dup4\n        /* \"#utility.yul\":25976:25994   */\n      add\n        /* \"#utility.yul\":25967:25973   */\n      dup7\n        /* \"#utility.yul\":25923:25995   */\n      tag_447\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":26005:26077   */\n      tag_775\n        /* \"#utility.yul\":26073:26075   */\n      0x40\n        /* \"#utility.yul\":26062:26071   */\n      dup4\n        /* \"#utility.yul\":26058:26076   */\n      add\n        /* \"#utility.yul\":26049:26055   */\n      dup6\n        /* \"#utility.yul\":26005:26077   */\n      tag_450\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":26124:26133   */\n      dup2\n        /* \"#utility.yul\":26118:26122   */\n      dup2\n        /* \"#utility.yul\":26114:26134   */\n      sub\n        /* \"#utility.yul\":26109:26111   */\n      0x60\n        /* \"#utility.yul\":26098:26107   */\n      dup4\n        /* \"#utility.yul\":26094:26112   */\n      add\n        /* \"#utility.yul\":26087:26135   */\n      mstore\n        /* \"#utility.yul\":26152:26228   */\n      tag_776\n        /* \"#utility.yul\":26223:26227   */\n      dup2\n        /* \"#utility.yul\":26214:26220   */\n      dup5\n        /* \"#utility.yul\":26152:26228   */\n      tag_493\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":26144:26228   */\n      swap1\n      pop\n        /* \"#utility.yul\":25595:26235   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26241:26382   */\n    tag_494:\n        /* \"#utility.yul\":26297:26302   */\n      0x00\n        /* \"#utility.yul\":26328:26334   */\n      dup2\n        /* \"#utility.yul\":26322:26335   */\n      mload\n        /* \"#utility.yul\":26313:26335   */\n      swap1\n      pop\n        /* \"#utility.yul\":26344:26376   */\n      tag_778\n        /* \"#utility.yul\":26370:26375   */\n      dup2\n        /* \"#utility.yul\":26344:26376   */\n      tag_433\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":26241:26382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26388:26737   */\n    tag_338:\n        /* \"#utility.yul\":26457:26463   */\n      0x00\n        /* \"#utility.yul\":26506:26508   */\n      0x20\n        /* \"#utility.yul\":26494:26503   */\n      dup3\n        /* \"#utility.yul\":26485:26492   */\n      dup5\n        /* \"#utility.yul\":26481:26504   */\n      sub\n        /* \"#utility.yul\":26477:26509   */\n      slt\n        /* \"#utility.yul\":26474:26593   */\n      iszero\n      tag_780\n      jumpi\n        /* \"#utility.yul\":26512:26591   */\n      tag_781\n      tag_430\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":26474:26593   */\n    tag_780:\n        /* \"#utility.yul\":26632:26633   */\n      0x00\n        /* \"#utility.yul\":26657:26720   */\n      tag_782\n        /* \"#utility.yul\":26712:26719   */\n      dup5\n        /* \"#utility.yul\":26703:26709   */\n      dup3\n        /* \"#utility.yul\":26692:26701   */\n      dup6\n        /* \"#utility.yul\":26688:26710   */\n      add\n        /* \"#utility.yul\":26657:26720   */\n      tag_494\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":26647:26720   */\n      swap2\n      pop\n        /* \"#utility.yul\":26603:26730   */\n      pop\n        /* \"#utility.yul\":26388:26737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203d93fe0637cda1104ee0513e327b409f091b38c42803bcee7f8795ba464bc6b964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3091": {
									"entryPoint": null,
									"id": 3091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:18",
										"nodeType": "YulBlock",
										"src": "0:5231:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "140:152:18",
													"nodeType": "YulBlock",
													"src": "140:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:18",
																		"nodeType": "YulLiteral",
																		"src": "157:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:18",
																		"nodeType": "YulLiteral",
																		"src": "160:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:18"
																},
																"nativeSrc": "150:88:18",
																"nodeType": "YulFunctionCall",
																"src": "150:88:18"
															},
															"nativeSrc": "150:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:18",
																		"nodeType": "YulLiteral",
																		"src": "254:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:18",
																		"nodeType": "YulLiteral",
																		"src": "257:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:18"
																},
																"nativeSrc": "247:15:18",
																"nodeType": "YulFunctionCall",
																"src": "247:15:18"
															},
															"nativeSrc": "247:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:18",
																		"nodeType": "YulLiteral",
																		"src": "278:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:18",
																		"nodeType": "YulLiteral",
																		"src": "281:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:18"
																},
																"nativeSrc": "271:15:18",
																"nodeType": "YulFunctionCall",
																"src": "271:15:18"
															},
															"nativeSrc": "271:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:18"
											},
											{
												"body": {
													"nativeSrc": "326:152:18",
													"nodeType": "YulBlock",
													"src": "326:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:18",
																		"nodeType": "YulLiteral",
																		"src": "343:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:18",
																		"nodeType": "YulLiteral",
																		"src": "346:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:18"
																},
																"nativeSrc": "336:88:18",
																"nodeType": "YulFunctionCall",
																"src": "336:88:18"
															},
															"nativeSrc": "336:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:18",
																		"nodeType": "YulLiteral",
																		"src": "440:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:18",
																		"nodeType": "YulLiteral",
																		"src": "443:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:18"
																},
																"nativeSrc": "433:15:18",
																"nodeType": "YulFunctionCall",
																"src": "433:15:18"
															},
															"nativeSrc": "433:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:18",
																		"nodeType": "YulLiteral",
																		"src": "464:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:18",
																		"nodeType": "YulLiteral",
																		"src": "467:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:18"
																},
																"nativeSrc": "457:15:18",
																"nodeType": "YulFunctionCall",
																"src": "457:15:18"
															},
															"nativeSrc": "457:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:18"
											},
											{
												"body": {
													"nativeSrc": "535:269:18",
													"nodeType": "YulBlock",
													"src": "535:269:18",
													"statements": [
														{
															"nativeSrc": "545:22:18",
															"nodeType": "YulAssignment",
															"src": "545:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:18",
																		"nodeType": "YulLiteral",
																		"src": "565:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:18"
																},
																"nativeSrc": "555:12:18",
																"nodeType": "YulFunctionCall",
																"src": "555:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:18"
																}
															]
														},
														{
															"nativeSrc": "576:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:18",
																		"nodeType": "YulLiteral",
																		"src": "612:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:18"
																},
																"nativeSrc": "602:12:18",
																"nodeType": "YulFunctionCall",
																"src": "602:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:18",
																	"nodeType": "YulTypedName",
																	"src": "580:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:18",
																"nodeType": "YulBlock",
																"src": "653:51:18",
																"statements": [
																	{
																		"nativeSrc": "667:27:18",
																		"nodeType": "YulAssignment",
																		"src": "667:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:18",
																					"nodeType": "YulLiteral",
																					"src": "689:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:18"
																			},
																			"nativeSrc": "677:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:18"
																},
																"nativeSrc": "626:26:18",
																"nodeType": "YulFunctionCall",
																"src": "626:26:18"
															},
															"nativeSrc": "623:81:18",
															"nodeType": "YulIf",
															"src": "623:81:18"
														},
														{
															"body": {
																"nativeSrc": "756:42:18",
																"nodeType": "YulBlock",
																"src": "756:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:18"
																			},
																			"nativeSrc": "770:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:18"
																		},
																		"nativeSrc": "770:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:18",
																				"nodeType": "YulLiteral",
																				"src": "751:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:18"
																		},
																		"nativeSrc": "740:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:18"
																},
																"nativeSrc": "717:38:18",
																"nodeType": "YulFunctionCall",
																"src": "717:38:18"
															},
															"nativeSrc": "714:84:18",
															"nodeType": "YulIf",
															"src": "714:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:18",
														"nodeType": "YulTypedName",
														"src": "519:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:18",
														"nodeType": "YulTypedName",
														"src": "528:6:18",
														"type": ""
													}
												],
												"src": "484:320:18"
											},
											{
												"body": {
													"nativeSrc": "864:87:18",
													"nodeType": "YulBlock",
													"src": "864:87:18",
													"statements": [
														{
															"nativeSrc": "874:11:18",
															"nodeType": "YulAssignment",
															"src": "874:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:18",
																"nodeType": "YulIdentifier",
																"src": "882:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:18",
																		"nodeType": "YulLiteral",
																		"src": "902:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:18"
																},
																"nativeSrc": "895:14:18",
																"nodeType": "YulFunctionCall",
																"src": "895:14:18"
															},
															"nativeSrc": "895:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:18"
														},
														{
															"nativeSrc": "918:26:18",
															"nodeType": "YulAssignment",
															"src": "918:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:18",
																		"nodeType": "YulLiteral",
																		"src": "936:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:18",
																		"nodeType": "YulLiteral",
																		"src": "939:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:18"
																},
																"nativeSrc": "926:18:18",
																"nodeType": "YulFunctionCall",
																"src": "926:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:18",
														"nodeType": "YulTypedName",
														"src": "851:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:18",
														"nodeType": "YulTypedName",
														"src": "859:4:18",
														"type": ""
													}
												],
												"src": "810:141:18"
											},
											{
												"body": {
													"nativeSrc": "1001:49:18",
													"nodeType": "YulBlock",
													"src": "1001:49:18",
													"statements": [
														{
															"nativeSrc": "1011:33:18",
															"nodeType": "YulAssignment",
															"src": "1011:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:18"
																		},
																		"nativeSrc": "1025:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:18"
																},
																"nativeSrc": "1021:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:18",
														"nodeType": "YulTypedName",
														"src": "984:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:18",
														"nodeType": "YulTypedName",
														"src": "994:6:18",
														"type": ""
													}
												],
												"src": "957:93:18"
											},
											{
												"body": {
													"nativeSrc": "1109:54:18",
													"nodeType": "YulBlock",
													"src": "1109:54:18",
													"statements": [
														{
															"nativeSrc": "1119:37:18",
															"nodeType": "YulAssignment",
															"src": "1119:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:18"
																},
																"nativeSrc": "1140:16:18",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:18",
														"nodeType": "YulTypedName",
														"src": "1084:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:18",
														"nodeType": "YulTypedName",
														"src": "1090:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:18",
														"nodeType": "YulTypedName",
														"src": "1100:8:18",
														"type": ""
													}
												],
												"src": "1056:107:18"
											},
											{
												"body": {
													"nativeSrc": "1245:317:18",
													"nodeType": "YulBlock",
													"src": "1245:317:18",
													"statements": [
														{
															"nativeSrc": "1255:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:18"
																},
																"nativeSrc": "1272:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:18",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:18",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:18"
																},
																"nativeSrc": "1311:97:18",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:18",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:18",
															"nodeType": "YulAssignment",
															"src": "1417:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:18"
																},
																"nativeSrc": "1429:39:18",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:18"
																}
															]
														},
														{
															"nativeSrc": "1477:30:18",
															"nodeType": "YulAssignment",
															"src": "1477:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:18"
																		},
																		"nativeSrc": "1497:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:18"
																},
																"nativeSrc": "1486:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:18"
																}
															]
														},
														{
															"nativeSrc": "1516:40:18",
															"nodeType": "YulAssignment",
															"src": "1516:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:18"
																		},
																		"nativeSrc": "1536:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:18"
																},
																"nativeSrc": "1526:30:18",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:18",
														"nodeType": "YulTypedName",
														"src": "1206:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:18",
														"nodeType": "YulTypedName",
														"src": "1213:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:18",
														"nodeType": "YulTypedName",
														"src": "1225:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:18",
														"nodeType": "YulTypedName",
														"src": "1238:6:18",
														"type": ""
													}
												],
												"src": "1169:393:18"
											},
											{
												"body": {
													"nativeSrc": "1613:32:18",
													"nodeType": "YulBlock",
													"src": "1613:32:18",
													"statements": [
														{
															"nativeSrc": "1623:16:18",
															"nodeType": "YulAssignment",
															"src": "1623:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:18",
																"nodeType": "YulIdentifier",
																"src": "1634:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:18",
														"nodeType": "YulTypedName",
														"src": "1595:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:18",
														"nodeType": "YulTypedName",
														"src": "1605:7:18",
														"type": ""
													}
												],
												"src": "1568:77:18"
											},
											{
												"body": {
													"nativeSrc": "1683:28:18",
													"nodeType": "YulBlock",
													"src": "1683:28:18",
													"statements": [
														{
															"nativeSrc": "1693:12:18",
															"nodeType": "YulAssignment",
															"src": "1693:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:18",
																"nodeType": "YulIdentifier",
																"src": "1700:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:18",
														"nodeType": "YulTypedName",
														"src": "1669:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:18",
														"nodeType": "YulTypedName",
														"src": "1679:3:18",
														"type": ""
													}
												],
												"src": "1651:60:18"
											},
											{
												"body": {
													"nativeSrc": "1777:82:18",
													"nodeType": "YulBlock",
													"src": "1777:82:18",
													"statements": [
														{
															"nativeSrc": "1787:66:18",
															"nodeType": "YulAssignment",
															"src": "1787:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:18"
																				},
																				"nativeSrc": "1827:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:18"
																		},
																		"nativeSrc": "1818:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:18"
																},
																"nativeSrc": "1800:53:18",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:18",
														"nodeType": "YulTypedName",
														"src": "1757:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:18",
														"nodeType": "YulTypedName",
														"src": "1767:9:18",
														"type": ""
													}
												],
												"src": "1717:142:18"
											},
											{
												"body": {
													"nativeSrc": "1912:28:18",
													"nodeType": "YulBlock",
													"src": "1912:28:18",
													"statements": [
														{
															"nativeSrc": "1922:12:18",
															"nodeType": "YulAssignment",
															"src": "1922:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:18",
																"nodeType": "YulIdentifier",
																"src": "1929:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:18",
														"nodeType": "YulTypedName",
														"src": "1898:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:18",
														"nodeType": "YulTypedName",
														"src": "1908:3:18",
														"type": ""
													}
												],
												"src": "1865:75:18"
											},
											{
												"body": {
													"nativeSrc": "2022:193:18",
													"nodeType": "YulBlock",
													"src": "2022:193:18",
													"statements": [
														{
															"nativeSrc": "2032:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:18"
																},
																"nativeSrc": "2056:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:18",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:18"
																				},
																				"nativeSrc": "2145:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:18"
																				},
																				"nativeSrc": "2166:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:18"
																		},
																		"nativeSrc": "2117:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:18"
																},
																"nativeSrc": "2104:105:18",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:18"
															},
															"nativeSrc": "2104:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:18",
														"nodeType": "YulTypedName",
														"src": "1999:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:18",
														"nodeType": "YulTypedName",
														"src": "2005:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:18",
														"nodeType": "YulTypedName",
														"src": "2013:7:18",
														"type": ""
													}
												],
												"src": "1946:269:18"
											},
											{
												"body": {
													"nativeSrc": "2270:24:18",
													"nodeType": "YulBlock",
													"src": "2270:24:18",
													"statements": [
														{
															"nativeSrc": "2280:8:18",
															"nodeType": "YulAssignment",
															"src": "2280:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:18",
																"nodeType": "YulLiteral",
																"src": "2287:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:18",
														"nodeType": "YulTypedName",
														"src": "2266:3:18",
														"type": ""
													}
												],
												"src": "2221:73:18"
											},
											{
												"body": {
													"nativeSrc": "2353:136:18",
													"nodeType": "YulBlock",
													"src": "2353:136:18",
													"statements": [
														{
															"nativeSrc": "2363:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:18"
																},
																"nativeSrc": "2377:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:18"
																},
																"nativeSrc": "2418:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:18"
															},
															"nativeSrc": "2418:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:18",
														"nodeType": "YulTypedName",
														"src": "2339:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:18",
														"nodeType": "YulTypedName",
														"src": "2345:6:18",
														"type": ""
													}
												],
												"src": "2300:189:18"
											},
											{
												"body": {
													"nativeSrc": "2545:136:18",
													"nodeType": "YulBlock",
													"src": "2545:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:18",
																"nodeType": "YulBlock",
																"src": "2612:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:18"
																			},
																			"nativeSrc": "2626:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:18"
																		},
																		"nativeSrc": "2626:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:18"
																},
																"nativeSrc": "2562:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:18"
															},
															"nativeSrc": "2555:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:18",
																"nodeType": "YulBlock",
																"src": "2577:26:18",
																"statements": [
																	{
																		"nativeSrc": "2579:22:18",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:18"
																			},
																			"nativeSrc": "2588:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:18",
																"nodeType": "YulBlock",
																"src": "2559:2:18",
																"statements": []
															},
															"src": "2555:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:18",
														"nodeType": "YulTypedName",
														"src": "2533:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:18",
														"nodeType": "YulTypedName",
														"src": "2540:3:18",
														"type": ""
													}
												],
												"src": "2495:186:18"
											},
											{
												"body": {
													"nativeSrc": "2766:464:18",
													"nodeType": "YulBlock",
													"src": "2766:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:18",
																"nodeType": "YulBlock",
																"src": "2792:431:18",
																"statements": [
																	{
																		"nativeSrc": "2806:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:18"
																			},
																			"nativeSrc": "2822:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:18",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:18"
																					},
																					"nativeSrc": "2906:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:18"
																			},
																			"nativeSrc": "2892:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:18",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:18",
																			"nodeType": "YulBlock",
																			"src": "3093:27:18",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:18",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:18",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:18"
																			},
																			"nativeSrc": "3074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:18"
																		},
																		"nativeSrc": "3071:49:18",
																		"nodeType": "YulIf",
																		"src": "3071:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:18"
																							},
																							"nativeSrc": "3189:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:18"
																					},
																					"nativeSrc": "3175:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:18"
																			},
																			"nativeSrc": "3133:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:18"
																		},
																		"nativeSrc": "3133:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:18"
																},
																"nativeSrc": "2780:11:18",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:18"
															},
															"nativeSrc": "2777:446:18",
															"nodeType": "YulIf",
															"src": "2777:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:18",
														"nodeType": "YulTypedName",
														"src": "2742:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:18",
														"nodeType": "YulTypedName",
														"src": "2749:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:18",
														"nodeType": "YulTypedName",
														"src": "2754:10:18",
														"type": ""
													}
												],
												"src": "2687:543:18"
											},
											{
												"body": {
													"nativeSrc": "3299:54:18",
													"nodeType": "YulBlock",
													"src": "3299:54:18",
													"statements": [
														{
															"nativeSrc": "3309:37:18",
															"nodeType": "YulAssignment",
															"src": "3309:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:18"
																},
																"nativeSrc": "3330:16:18",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:18",
														"nodeType": "YulTypedName",
														"src": "3274:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:18",
														"nodeType": "YulTypedName",
														"src": "3280:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:18",
														"nodeType": "YulTypedName",
														"src": "3290:8:18",
														"type": ""
													}
												],
												"src": "3236:117:18"
											},
											{
												"body": {
													"nativeSrc": "3410:118:18",
													"nodeType": "YulBlock",
													"src": "3410:118:18",
													"statements": [
														{
															"nativeSrc": "3420:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:18"
																				},
																				"nativeSrc": "3465:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:18"
																				},
																				"nativeSrc": "3480:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:18"
																		},
																		"nativeSrc": "3436:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:18"
																},
																"nativeSrc": "3432:56:18",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:18",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:18",
															"nodeType": "YulAssignment",
															"src": "3497:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:18"
																},
																"nativeSrc": "3507:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:18",
														"nodeType": "YulTypedName",
														"src": "3387:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:18",
														"nodeType": "YulTypedName",
														"src": "3393:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:18",
														"nodeType": "YulTypedName",
														"src": "3403:6:18",
														"type": ""
													}
												],
												"src": "3359:169:18"
											},
											{
												"body": {
													"nativeSrc": "3614:214:18",
													"nodeType": "YulBlock",
													"src": "3614:214:18",
													"statements": [
														{
															"nativeSrc": "3747:37:18",
															"nodeType": "YulAssignment",
															"src": "3747:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:18"
																},
																"nativeSrc": "3755:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:18"
																}
															]
														},
														{
															"nativeSrc": "3793:29:18",
															"nodeType": "YulAssignment",
															"src": "3793:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:18"
																		},
																		"nativeSrc": "3810:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:18"
																},
																"nativeSrc": "3801:21:18",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:18",
														"nodeType": "YulTypedName",
														"src": "3595:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:18",
														"nodeType": "YulTypedName",
														"src": "3601:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:18",
														"nodeType": "YulTypedName",
														"src": "3609:4:18",
														"type": ""
													}
												],
												"src": "3533:295:18"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:18",
													"nodeType": "YulBlock",
													"src": "3925:1303:18",
													"statements": [
														{
															"nativeSrc": "3936:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:18"
																},
																"nativeSrc": "3950:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:18",
																"nodeType": "YulBlock",
																"src": "4072:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:18"
																			},
																			"nativeSrc": "4074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:18"
																		},
																		"nativeSrc": "4074:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:18"
																},
																"nativeSrc": "4041:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:18"
															},
															"nativeSrc": "4038:56:18",
															"nodeType": "YulIf",
															"src": "4038:56:18"
														},
														{
															"nativeSrc": "4104:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:18"
																		},
																		"nativeSrc": "4144:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:18"
																},
																"nativeSrc": "4118:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:18"
																},
																"nativeSrc": "4203:67:18",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:18"
															},
															"nativeSrc": "4203:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:18"
														},
														{
															"nativeSrc": "4280:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:18",
																"nodeType": "YulLiteral",
																"src": "4297:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:18",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:18",
															"nodeType": "YulAssignment",
															"src": "4308:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:18",
																"nodeType": "YulLiteral",
																"src": "4321:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:18",
																		"nodeType": "YulBlock",
																		"src": "4372:611:18",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:18",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:18"
																							},
																							"nativeSrc": "4413:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:18"
																					},
																					"nativeSrc": "4401:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:18",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:18"
																					},
																					"nativeSrc": "4451:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:18",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:18",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:18",
																					"nodeType": "YulBlock",
																					"src": "4569:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:18"
																												},
																												"nativeSrc": "4608:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:18"
																										},
																										"nativeSrc": "4602:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:18"
																								},
																								"nativeSrc": "4587:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:18"
																							},
																							"nativeSrc": "4587:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:18"
																						},
																						{
																							"nativeSrc": "4646:24:18",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:18",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:18"
																								},
																								"nativeSrc": "4656:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:18",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:18",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:18"
																								},
																								"nativeSrc": "4700:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:18"
																					},
																					"nativeSrc": "4532:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:18"
																				},
																				"nativeSrc": "4524:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:18",
																					"nodeType": "YulBlock",
																					"src": "4547:21:18",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:18",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:18",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:18"
																								},
																								"nativeSrc": "4554:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:18",
																					"nodeType": "YulBlock",
																					"src": "4528:3:18",
																					"statements": []
																				},
																				"src": "4524:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:18",
																					"nodeType": "YulBlock",
																					"src": "4768:156:18",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:18"
																										},
																										"nativeSrc": "4809:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:18"
																								},
																								"nativeSrc": "4803:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:18",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:18",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:18"
																												},
																												"nativeSrc": "4891:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:18"
																										},
																										"nativeSrc": "4861:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:18"
																								},
																								"nativeSrc": "4846:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:18"
																							},
																							"nativeSrc": "4846:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:18"
																					},
																					"nativeSrc": "4748:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:18"
																				},
																				"nativeSrc": "4745:179:18",
																				"nodeType": "YulIf",
																				"src": "4745:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:18",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:18"
																									},
																									"nativeSrc": "4954:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:18",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:18"
																							},
																							"nativeSrc": "4950:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:18"
																					},
																					"nativeSrc": "4937:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:18"
																				},
																				"nativeSrc": "4937:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:18"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:18",
																	"nodeType": "YulCase",
																	"src": "4365:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:18",
																		"nodeType": "YulBlock",
																		"src": "5000:222:18",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:18",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:18",
																					"nodeType": "YulBlock",
																					"src": "5051:67:18",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:18",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:18"
																										},
																										"nativeSrc": "5084:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:18"
																								},
																								"nativeSrc": "5078:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:18"
																				},
																				"nativeSrc": "5041:77:18",
																				"nodeType": "YulIf",
																				"src": "5041:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:18"
																							},
																							"nativeSrc": "5144:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:18"
																					},
																					"nativeSrc": "5131:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:18"
																				},
																				"nativeSrc": "5131:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:18"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:18",
																	"nodeType": "YulCase",
																	"src": "4992:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:18"
																},
																"nativeSrc": "4342:14:18",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:18"
															},
															"nativeSrc": "4335:887:18",
															"nodeType": "YulSwitch",
															"src": "4335:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:18",
														"nodeType": "YulTypedName",
														"src": "3914:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:18",
														"nodeType": "YulTypedName",
														"src": "3920:3:18",
														"type": ""
													}
												],
												"src": "3833:1395:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a60095534801562000015575f80fd5b506040518060400160405280600681526020017f4d79204e667400000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e465400000000000000000000000000000000000000000000000000000000815250815f908162000092919062000351565b508060019081620000a4919062000351565b50505033600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000435565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200016957607f821691505b6020821081036200017f576200017e62000124565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620001e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a6565b620001ef8683620001a6565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000239620002336200022d8462000207565b62000210565b62000207565b9050919050565b5f819050919050565b620002548362000219565b6200026c620002638262000240565b848454620001b2565b825550505050565b5f90565b6200028262000274565b6200028f81848462000249565b505050565b5b81811015620002b657620002aa5f8262000278565b60018101905062000295565b5050565b601f8211156200030557620002cf8162000185565b620002da8462000197565b81016020851015620002ea578190505b62000302620002f98562000197565b83018262000294565b50505b505050565b5f82821c905092915050565b5f620003275f19846008026200030a565b1980831691505092915050565b5f62000341838362000316565b9150826002028217905092915050565b6200035c82620000ed565b67ffffffffffffffff811115620003785762000377620000f7565b5b62000384825462000151565b62000391828285620002ba565b5f60209050601f831160018114620003c7575f8415620003b2578287015190505b620003be858262000334565b8655506200042d565b601f198416620003d78662000185565b5f5b828110156200040057848901518255600182019150602085019450602081019050620003d9565b868310156200042057848901516200041c601f89168262000316565b8355505b6001600288020188555050505b505050505050565b61319b80620004435f395ff3fe608060405260043610610180575f3560e01c806370a08231116100d0578063a90d14e211610089578063d547cfb711610063578063d547cfb7146105a6578063e985e9c5146105d0578063f2a413b51461060c578063f8b2cb4f1461064857610180565b8063a90d14e21461051a578063b88d4fde14610542578063c87b56dd1461056a57610180565b806370a082311461040a5780637d7f1f3e146104465780638a71bb2d1461048257806395d89b41146104ac578063a22cb465146104d6578063a37365e0146104fe57610180565b80632a55205a1161013d57806355f804b31161011757806355f804b3146103425780635a51a8851461036a5780635afa3a72146103a65780636352211e146103ce57610180565b80632a55205a146102b35780633d0673d4146102f057806342842e0e1461031a57610180565b806301ffc9a71461018457806306fdde03146101c0578063081812fc146101ea578063095ea7b31461022657806323b872dd1461024e578063265aa62114610276575b5f80fd5b34801561018f575f80fd5b506101aa60048036038101906101a591906123d2565b610684565b6040516101b79190612417565b60405180910390f35b3480156101cb575f80fd5b506101d46106e4565b6040516101e191906124ba565b60405180910390f35b3480156101f5575f80fd5b50610210600480360381019061020b919061250d565b610773565b60405161021d9190612577565b60405180910390f35b348015610231575f80fd5b5061024c600480360381019061024791906125ba565b61078e565b005b348015610259575f80fd5b50610274600480360381019061026f91906125f8565b6107a4565b005b348015610281575f80fd5b5061029c6004803603810190610297919061250d565b6108a3565b6040516102aa929190612657565b60405180910390f35b3480156102be575f80fd5b506102d960048036038101906102d4919061267e565b6108e2565b6040516102e7929190612657565b60405180910390f35b3480156102fb575f80fd5b50610304610930565b60405161031191906126bc565b60405180910390f35b348015610325575f80fd5b50610340600480360381019061033b91906125f8565b610940565b005b34801561034d575f80fd5b5061036860048036038101906103639190612801565b61095f565b005b348015610375575f80fd5b50610390600480360381019061038b919061250d565b610972565b60405161039d91906126bc565b60405180910390f35b3480156103b1575f80fd5b506103cc60048036038101906103c79190612848565b6109fd565b005b3480156103d9575f80fd5b506103f460048036038101906103ef919061250d565b610b1d565b6040516104019190612577565b60405180910390f35b348015610415575f80fd5b50610430600480360381019061042b91906128a2565b610b2e565b60405161043d91906126bc565b60405180910390f35b348015610451575f80fd5b5061046c6004803603810190610467919061250d565b610be4565b6040516104799190612417565b60405180910390f35b34801561048d575f80fd5b50610496610c52565b6040516104a391906126bc565b60405180910390f35b3480156104b7575f80fd5b506104c0610c58565b6040516104cd91906124ba565b60405180910390f35b3480156104e1575f80fd5b506104fc60048036038101906104f791906128f7565b610ce8565b005b6105186004803603810190610513919061250d565b610cfe565b005b348015610525575f80fd5b50610540600480360381019061053b919061250d565b610f58565b005b34801561054d575f80fd5b50610568600480360381019061056391906129d3565b611035565b005b348015610575575f80fd5b50610590600480360381019061058b919061250d565b611052565b60405161059d91906124ba565b60405180910390f35b3480156105b1575f80fd5b506105ba61115d565b6040516105c791906124ba565b60405180910390f35b3480156105db575f80fd5b506105f660048036038101906105f19190612a53565b6111e9565b6040516106039190612417565b60405180910390f35b348015610617575f80fd5b50610632600480360381019061062d919061250d565b611277565b60405161063f9190612417565b60405180910390f35b348015610653575f80fd5b5061066e600480360381019061066991906128a2565b6112e5565b60405161067b91906126bc565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106dd57506106dc82611305565b5b9050919050565b60605f80546106f290612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461071e90612abe565b80156107695780601f1061074057610100808354040283529160200191610769565b820191905f5260205f20905b81548152906001019060200180831161074c57829003601f168201915b5050505050905090565b5f61077d826113e6565b506107878261146c565b9050919050565b6107a0828261079b6114a5565b6114ac565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610814575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161080b9190612577565b60405180910390fd5b5f61082783836108226114a5565b6114be565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461089d578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161089493929190612aee565b60405180910390fd5b50505050565b600d602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f805f6064600954856108f59190612b50565b6108ff9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168192509250509250929050565b5f61093b60076116c9565b905090565b61095a83838360405180602001604052805f815250611035565b505050565b806008908161096e9190612d8b565b5050565b5f80600d5f8481526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151915050919050565b5f610a0860076116c9565b9050610a1433826116d5565b610a1e81846116f2565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250600d5f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550610b18600761174c565b505050565b5f610b27826113e6565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b9f575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610b969190612577565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f80610bef83610b1d565b9050600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b60095481565b606060018054610c6790612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9390612abe565b8015610cde5780601f10610cb557610100808354040283529160200191610cde565b820191905f5260205f20905b815481529060010190602001808311610cc157829003601f168201915b5050505050905090565b610cfa610cf36114a5565b8383611760565b5050565b5f610d0882610b1d565b905060011515600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16151514610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da090612ea4565b60405180910390fd5b5f3390505f600d5f8581526020019081526020015f206001015490508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90612f0c565b60405180910390fd5b803414610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c90612f74565b60405180910390fd5b610e808383866118c9565b5f606460095483610e919190612b50565b610e9b9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f01573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc8284610f289190612f92565b90811502906040515f60405180830381858888f19350505050158015610f50573d5f803e3d5ffd5b505050505050565b610f6181610b1d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc59061300f565b60405180910390fd5b6001600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6110408484846107a4565b61104c84848484611a31565b50505050565b606061105d826113e6565b505f60065f8481526020019081526020015f20805461107b90612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546110a790612abe565b80156110f25780601f106110c9576101008083540402835291602001916110f2565b820191905f5260205f20905b8154815290600101906020018083116110d557829003601f168201915b505050505090505f611102611be3565b90505f815103611116578192505050611158565b5f8251111561114a578082604051602001611132929190613067565b60405160208183030381529060405292505050611158565b61115384611bf9565b925050505b919050565b6008805461116a90612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461119690612abe565b80156111e15780601f106111b8576101008083540402835291602001916111e1565b820191905f5260205f20905b8154815290600101906020018083116111c457829003601f168201915b505050505081565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f8061128283610b1d565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806113cf57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806113df57506113de82611c5f565b5b9050919050565b5f806113f183611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361146357826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161145a91906126bc565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6114b98383836001611d01565b505050565b5f806114c984611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461150a57611509818486611ec0565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611595576115495f855f80611d01565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461161457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b6116ee828260405180602001604052805f815250611f83565b5050565b8060065f8481526020019081526020015f2090816117109190612d8b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161174091906126bc565b60405180910390a15050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117d057816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016117c79190612577565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118bc9190612417565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611939575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119309190612577565b60405180910390fd5b5f61194583835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b757816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ae91906126bc565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a2b578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401611a2293929190612aee565b60405180910390fd5b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611bdd578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a746114a5565b8685856040518563ffffffff1660e01b8152600401611a9694939291906130dc565b6020604051808303815f875af1925050508015611ad157506040513d601f19601f82011682018060405250810190611ace919061313a565b60015b611b52573d805f8114611aff576040519150601f19603f3d011682016040523d82523d5f602084013e611b04565b606091505b505f815103611b4a57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b419190612577565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611bdb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611bd29190612577565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b6060611c04826113e6565b505f611c0e611be3565b90505f815111611c2c5760405180602001604052805f815250611c57565b80611c3684611f9e565b604051602001611c47929190613067565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611d3957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611e6b575f611d48846113e6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611db257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611dc55750611dc381846111e9565b155b15611e0757826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611dfe9190612577565b60405180910390fd5b8115611e6957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611ecb838383612068565b611f7e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f3f57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611f3691906126bc565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611f75929190612657565b60405180910390fd5b505050565b611f8d8383612128565b611f995f848484611a31565b505050565b60605f6001611fac8461221b565b0190505f8167ffffffffffffffff811115611fca57611fc96126dd565b5b6040519080825280601f01601f191660200182016040528015611ffc5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561205d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161205257612051612b91565b5b0494505f8503612009575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561211f57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806120e057506120df84846111e9565b5b8061211e57508273ffffffffffffffffffffffffffffffffffffffff166121068361146c565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612198575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161218f9190612577565b60405180910390fd5b5f6121a483835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612216575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161220d9190612577565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612277577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161226d5761226c612b91565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106122b4576d04ee2d6d415b85acef810000000083816122aa576122a9612b91565b5b0492506020810190505b662386f26fc1000083106122e357662386f26fc1000083816122d9576122d8612b91565b5b0492506010810190505b6305f5e100831061230c576305f5e100838161230257612301612b91565b5b0492506008810190505b612710831061233157612710838161232757612326612b91565b5b0492506004810190505b60648310612354576064838161234a57612349612b91565b5b0492506002810190505b600a8310612363576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123b18161237d565b81146123bb575f80fd5b50565b5f813590506123cc816123a8565b92915050565b5f602082840312156123e7576123e6612375565b5b5f6123f4848285016123be565b91505092915050565b5f8115159050919050565b612411816123fd565b82525050565b5f60208201905061242a5f830184612408565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561246757808201518184015260208101905061244c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61248c82612430565b612496818561243a565b93506124a681856020860161244a565b6124af81612472565b840191505092915050565b5f6020820190508181035f8301526124d28184612482565b905092915050565b5f819050919050565b6124ec816124da565b81146124f6575f80fd5b50565b5f81359050612507816124e3565b92915050565b5f6020828403121561252257612521612375565b5b5f61252f848285016124f9565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61256182612538565b9050919050565b61257181612557565b82525050565b5f60208201905061258a5f830184612568565b92915050565b61259981612557565b81146125a3575f80fd5b50565b5f813590506125b481612590565b92915050565b5f80604083850312156125d0576125cf612375565b5b5f6125dd858286016125a6565b92505060206125ee858286016124f9565b9150509250929050565b5f805f6060848603121561260f5761260e612375565b5b5f61261c868287016125a6565b935050602061262d868287016125a6565b925050604061263e868287016124f9565b9150509250925092565b612651816124da565b82525050565b5f60408201905061266a5f830185612568565b6126776020830184612648565b9392505050565b5f806040838503121561269457612693612375565b5b5f6126a1858286016124f9565b92505060206126b2858286016124f9565b9150509250929050565b5f6020820190506126cf5f830184612648565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61271382612472565b810181811067ffffffffffffffff82111715612732576127316126dd565b5b80604052505050565b5f61274461236c565b9050612750828261270a565b919050565b5f67ffffffffffffffff82111561276f5761276e6126dd565b5b61277882612472565b9050602081019050919050565b828183375f83830152505050565b5f6127a56127a084612755565b61273b565b9050828152602081018484840111156127c1576127c06126d9565b5b6127cc848285612785565b509392505050565b5f82601f8301126127e8576127e76126d5565b5b81356127f8848260208601612793565b91505092915050565b5f6020828403121561281657612815612375565b5b5f82013567ffffffffffffffff81111561283357612832612379565b5b61283f848285016127d4565b91505092915050565b5f806040838503121561285e5761285d612375565b5b5f83013567ffffffffffffffff81111561287b5761287a612379565b5b612887858286016127d4565b9250506020612898858286016124f9565b9150509250929050565b5f602082840312156128b7576128b6612375565b5b5f6128c4848285016125a6565b91505092915050565b6128d6816123fd565b81146128e0575f80fd5b50565b5f813590506128f1816128cd565b92915050565b5f806040838503121561290d5761290c612375565b5b5f61291a858286016125a6565b925050602061292b858286016128e3565b9150509250929050565b5f67ffffffffffffffff82111561294f5761294e6126dd565b5b61295882612472565b9050602081019050919050565b5f61297761297284612935565b61273b565b905082815260208101848484011115612993576129926126d9565b5b61299e848285612785565b509392505050565b5f82601f8301126129ba576129b96126d5565b5b81356129ca848260208601612965565b91505092915050565b5f805f80608085870312156129eb576129ea612375565b5b5f6129f8878288016125a6565b9450506020612a09878288016125a6565b9350506040612a1a878288016124f9565b925050606085013567ffffffffffffffff811115612a3b57612a3a612379565b5b612a47878288016129a6565b91505092959194509250565b5f8060408385031215612a6957612a68612375565b5b5f612a76858286016125a6565b9250506020612a87858286016125a6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612ad557607f821691505b602082108103612ae857612ae7612a91565b5b50919050565b5f606082019050612b015f830186612568565b612b0e6020830185612648565b612b1b6040830184612568565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612b5a826124da565b9150612b65836124da565b9250828202612b73816124da565b91508282048414831517612b8a57612b89612b23565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612bc8826124da565b9150612bd3836124da565b925082612be357612be2612b91565b5b828204905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612c4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c0f565b612c548683612c0f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612c8f612c8a612c85846124da565b612c6c565b6124da565b9050919050565b5f819050919050565b612ca883612c75565b612cbc612cb482612c96565b848454612c1b565b825550505050565b5f90565b612cd0612cc4565b612cdb818484612c9f565b505050565b5b81811015612cfe57612cf35f82612cc8565b600181019050612ce1565b5050565b601f821115612d4357612d1481612bee565b612d1d84612c00565b81016020851015612d2c578190505b612d40612d3885612c00565b830182612ce0565b50505b505050565b5f82821c905092915050565b5f612d635f1984600802612d48565b1980831691505092915050565b5f612d7b8383612d54565b9150826002028217905092915050565b612d9482612430565b67ffffffffffffffff811115612dad57612dac6126dd565b5b612db78254612abe565b612dc2828285612d02565b5f60209050601f831160018114612df3575f8415612de1578287015190505b612deb8582612d70565b865550612e52565b601f198416612e0186612bee565b5f5b82811015612e2857848901518255600182019150602085019450602081019050612e03565b86831015612e455784890151612e41601f891682612d54565b8355505b6001600288020188555050505b505050505050565b7f546f6b656e206973206e6f742061742073616c650000000000000000000000005f82015250565b5f612e8e60148361243a565b9150612e9982612e5a565b602082019050919050565b5f6020820190508181035f830152612ebb81612e82565b9050919050565b7f43616e6e6f742062757920796f7572206f776e204e46540000000000000000005f82015250565b5f612ef660178361243a565b9150612f0182612ec2565b602082019050919050565b5f6020820190508181035f830152612f2381612eea565b9050919050565b7f537570706c792045786163742066756e640000000000000000000000000000005f82015250565b5f612f5e60118361243a565b9150612f6982612f2a565b602082019050919050565b5f6020820190508181035f830152612f8b81612f52565b9050919050565b5f612f9c826124da565b9150612fa7836124da565b9250828203905081811115612fbf57612fbe612b23565b5b92915050565b7f596f75722061726520417574686f72697a6520746f2073656c6c0000000000005f82015250565b5f612ff9601a8361243a565b915061300482612fc5565b602082019050919050565b5f6020820190508181035f83015261302681612fed565b9050919050565b5f81905092915050565b5f61304182612430565b61304b818561302d565b935061305b81856020860161244a565b80840191505092915050565b5f6130728285613037565b915061307e8284613037565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6130ae8261308a565b6130b88185613094565b93506130c881856020860161244a565b6130d181612472565b840191505092915050565b5f6080820190506130ef5f830187612568565b6130fc6020830186612568565b6131096040830185612648565b818103606083015261311b81846130a4565b905095945050505050565b5f81519050613134816123a8565b92915050565b5f6020828403121561314f5761314e612375565b5b5f61315c84828501613126565b9150509291505056fea26469706673582212203d93fe0637cda1104ee0513e327b409f091b38c42803bcee7f8795ba464bc6b964736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79204E66740000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x92 SWAP2 SWAP1 PUSH3 0x351 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x351 JUMP JUMPDEST POP POP POP CALLER PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x435 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x169 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x17F JUMPI PUSH3 0x17E PUSH3 0x124 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x1E3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1A6 JUMP JUMPDEST PUSH3 0x1EF DUP7 DUP4 PUSH3 0x1A6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x239 PUSH3 0x233 PUSH3 0x22D DUP5 PUSH3 0x207 JUMP JUMPDEST PUSH3 0x210 JUMP JUMPDEST PUSH3 0x207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x254 DUP4 PUSH3 0x219 JUMP JUMPDEST PUSH3 0x26C PUSH3 0x263 DUP3 PUSH3 0x240 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1B2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x282 PUSH3 0x274 JUMP JUMPDEST PUSH3 0x28F DUP2 DUP5 DUP5 PUSH3 0x249 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B6 JUMPI PUSH3 0x2AA PUSH0 DUP3 PUSH3 0x278 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x295 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x305 JUMPI PUSH3 0x2CF DUP2 PUSH3 0x185 JUMP JUMPDEST PUSH3 0x2DA DUP5 PUSH3 0x197 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2EA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x302 PUSH3 0x2F9 DUP6 PUSH3 0x197 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x294 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x327 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x30A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x341 DUP4 DUP4 PUSH3 0x316 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x35C DUP3 PUSH3 0xED JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x378 JUMPI PUSH3 0x377 PUSH3 0xF7 JUMP JUMPDEST JUMPDEST PUSH3 0x384 DUP3 SLOAD PUSH3 0x151 JUMP JUMPDEST PUSH3 0x391 DUP3 DUP3 DUP6 PUSH3 0x2BA JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3C7 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3B2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3BE DUP6 DUP3 PUSH3 0x334 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x42D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3D7 DUP7 PUSH3 0x185 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x400 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3D9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x420 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x41C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x316 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x319B DUP1 PUSH3 0x443 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA90D14E2 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547CFB7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xF2A413B5 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x648 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0xA90D14E2 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x56A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x7D7F1F3E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x8A71BB2D EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xA37365E0 EQ PUSH2 0x4FE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x5A51A885 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x5AFA3A72 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x3D0673D4 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x31A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x265AA621 EQ PUSH2 0x276 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2801 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xF58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH2 0x1035 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2A53 JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x66E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6DD JUMPI POP PUSH2 0x6DC DUP3 PUSH2 0x1305 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x6F2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71E SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x740 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x77D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH2 0x787 DUP3 PUSH2 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A0 DUP3 DUP3 PUSH2 0x79B PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x814 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x827 DUP4 DUP4 PUSH2 0x822 PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89D JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93B PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x95A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1035 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 SWAP1 DUP2 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA08 PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP PUSH2 0xA14 CALLER DUP3 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0xA1E DUP2 DUP5 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB18 PUSH1 0x7 PUSH2 0x174C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB27 DUP3 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEF DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC67 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC93 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCFA PUSH2 0xCF3 PUSH2 0x14A5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1760 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD08 DUP3 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP4 DUP4 DUP7 PUSH2 0x18C9 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP4 PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF01 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 DUP5 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xB1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP1 PUSH2 0x300F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1040 DUP5 DUP5 DUP5 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x104C DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x105D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x107B SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A7 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1102 PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1116 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x114A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1132 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1153 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x116A SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1196 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1282 DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x13CF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x13DF JUMPI POP PUSH2 0x13DE DUP3 PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F1 DUP4 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1463 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14B9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14C9 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150A JUMPI PUSH2 0x1509 DUP2 DUP5 DUP7 PUSH2 0x1EC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI PUSH2 0x1549 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1614 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1F83 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1710 SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C7 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1939 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1930 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1945 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A2B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1BDD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A74 PUSH2 0x14A5 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AD1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACE SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B52 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1B4A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1BDB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C04 DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH2 0x1C0E PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH2 0x1C36 DUP5 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C47 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1D39 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E6B JUMPI PUSH0 PUSH2 0x1D48 DUP5 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DB2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DC5 JUMPI POP PUSH2 0x1DC3 DUP2 DUP5 PUSH2 0x11E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1E69 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECB DUP4 DUP4 DUP4 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x1F7E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F75 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F8D DUP4 DUP4 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x1F99 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1FAC DUP5 PUSH2 0x221B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x205D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x2009 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x211F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x20E0 JUMPI POP PUSH2 0x20DF DUP5 DUP5 PUSH2 0x11E9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x211E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2106 DUP4 PUSH2 0x146C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2198 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218F SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21A4 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2216 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2277 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x22B4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x22E3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x230C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2302 JUMPI PUSH2 0x2301 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2331 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2327 JUMPI PUSH2 0x2326 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2354 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x234A JUMPI PUSH2 0x2349 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2363 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B1 DUP2 PUSH2 0x237D JUMP JUMPDEST DUP2 EQ PUSH2 0x23BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CC DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E7 JUMPI PUSH2 0x23E6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F4 DUP5 DUP3 DUP6 ADD PUSH2 0x23BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2411 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242A PUSH0 DUP4 ADD DUP5 PUSH2 0x2408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2467 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x244C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x248C DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x2496 DUP2 DUP6 PUSH2 0x243A JUMP JUMPDEST SWAP4 POP PUSH2 0x24A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24D2 DUP2 DUP5 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EC DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP2 EQ PUSH2 0x24F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2507 DUP2 PUSH2 0x24E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252F DUP5 DUP3 DUP6 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2561 DUP3 PUSH2 0x2538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258A PUSH0 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2599 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B4 DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25CF PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25DD DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25EE DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261C DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x262D DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x263E DUP7 DUP3 DUP8 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2651 DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x266A PUSH0 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2677 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A1 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26B2 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26CF PUSH0 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2713 DUP3 PUSH2 0x2472 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2732 JUMPI PUSH2 0x2731 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2744 PUSH2 0x236C JUMP JUMPDEST SWAP1 POP PUSH2 0x2750 DUP3 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x276F JUMPI PUSH2 0x276E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2778 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27A5 PUSH2 0x27A0 DUP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27C1 JUMPI PUSH2 0x27C0 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x27CC DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27E8 JUMPI PUSH2 0x27E7 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2816 JUMPI PUSH2 0x2815 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2833 JUMPI PUSH2 0x2832 PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x283F DUP5 DUP3 DUP6 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285D PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287B JUMPI PUSH2 0x287A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2887 DUP6 DUP3 DUP7 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2898 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B7 JUMPI PUSH2 0x28B6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C4 DUP5 DUP3 DUP6 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP2 EQ PUSH2 0x28E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F1 DUP2 PUSH2 0x28CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291A DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292B DUP6 DUP3 DUP7 ADD PUSH2 0x28E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2958 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2977 PUSH2 0x2972 DUP5 PUSH2 0x2935 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x299E DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x29EB JUMPI PUSH2 0x29EA PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F8 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A09 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A1A DUP8 DUP3 DUP9 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2A47 DUP8 DUP3 DUP9 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A69 JUMPI PUSH2 0x2A68 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A76 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A87 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2AD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AE8 JUMPI PUSH2 0x2AE7 PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B01 PUSH0 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2B0E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST PUSH2 0x2B1B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2B5A DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B65 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B73 DUP2 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B8A JUMPI PUSH2 0x2B89 PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BC8 DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD3 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BE3 JUMPI PUSH2 0x2BE2 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2C4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2C0F JUMP JUMPDEST PUSH2 0x2C54 DUP7 DUP4 PUSH2 0x2C0F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C8F PUSH2 0x2C8A PUSH2 0x2C85 DUP5 PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA8 DUP4 PUSH2 0x2C75 JUMP JUMPDEST PUSH2 0x2CBC PUSH2 0x2CB4 DUP3 PUSH2 0x2C96 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C1B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CD0 PUSH2 0x2CC4 JUMP JUMPDEST PUSH2 0x2CDB DUP2 DUP5 DUP5 PUSH2 0x2C9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CFE JUMPI PUSH2 0x2CF3 PUSH0 DUP3 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2CE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D14 DUP2 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x2D1D DUP5 PUSH2 0x2C00 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2D2C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2D40 PUSH2 0x2D38 DUP6 PUSH2 0x2C00 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2CE0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D63 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2D48 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B DUP4 DUP4 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2DB7 DUP3 SLOAD PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x2DC2 DUP3 DUP3 DUP6 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DF3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2DE1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2DEB DUP6 DUP3 PUSH2 0x2D70 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2E01 DUP7 PUSH2 0x2BEE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E28 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E03 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2E45 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2E41 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2D54 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F742061742073616C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8E PUSH1 0x14 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2E99 DUP3 PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EBB DUP2 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E204E4654000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EF6 PUSH1 0x17 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F01 DUP3 PUSH2 0x2EC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F23 DUP2 PUSH2 0x2EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537570706C792045786163742066756E64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F5E PUSH1 0x11 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F69 DUP3 PUSH2 0x2F2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8B DUP2 PUSH2 0x2F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F9C DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA7 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2FBF JUMPI PUSH2 0x2FBE PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75722061726520417574686F72697A6520746F2073656C6C000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF9 PUSH1 0x1A DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x3004 DUP3 PUSH2 0x2FC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3026 DUP2 PUSH2 0x2FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3041 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x304B DUP2 DUP6 PUSH2 0x302D JUMP JUMPDEST SWAP4 POP PUSH2 0x305B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3072 DUP3 DUP6 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP PUSH2 0x307E DUP3 DUP5 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30AE DUP3 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x30B8 DUP2 DUP6 PUSH2 0x3094 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x30D1 DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x30EF PUSH0 DUP4 ADD DUP8 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x30FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x3109 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x311B DUP2 DUP5 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3134 DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314F JUMPI PUSH2 0x314E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x315C DUP5 DUP3 DUP6 ADD PUSH2 0x3126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP4 INVALID MOD CALLDATACOPY 0xCD LOG1 LT 0x4E 0xE0 MLOAD RETURNDATACOPY ORIGIN PUSH28 0x409F091B38C42803BCEE7F8795BA464BC6B964736F6C634300081500 CALLER ",
							"sourceMap": "435:3092:17:-:0;;;658:2;623:37;;972:90;;;;;;;;;;1381:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1044:10:17::1;1029:13;;:25;;;;;;;;;;;;;;;;;;435:3092:::0;;7:99:18;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;435:3092:17:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BuyNFT_3337": {
									"entryPoint": 3326,
									"id": 3337,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@KnowPrice_3233": {
									"entryPoint": 2418,
									"id": 3233,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@SellNft_3175": {
									"entryPoint": 3928,
									"id": 3175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@SoldNft_3195": {
									"entryPoint": 3044,
									"id": 3195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_approve_1000": {
									"entryPoint": 5292,
									"id": 1000,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1066": {
									"entryPoint": 7425,
									"id": 1066,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_393": {
									"entryPoint": 7139,
									"id": 393,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_648": {
									"entryPoint": 7872,
									"id": 648,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1196": {
									"entryPoint": 6705,
									"id": 1196,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_575": {
									"entryPoint": 5228,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_611": {
									"entryPoint": 8296,
									"id": 611,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_804": {
									"entryPoint": 8488,
									"id": 804,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1498": {
									"entryPoint": 5285,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_562": {
									"entryPoint": 7368,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1132": {
									"entryPoint": 5094,
									"id": 1132,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_819": {
									"entryPoint": 5845,
									"id": 819,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_845": {
									"entryPoint": 8067,
									"id": 845,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1103": {
									"entryPoint": 5984,
									"id": 1103,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1457": {
									"entryPoint": 5874,
									"id": 1457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_938": {
									"entryPoint": 6345,
									"id": 938,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_754": {
									"entryPoint": 5310,
									"id": 754,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_409": {
									"entryPoint": 1934,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_317": {
									"entryPoint": 2862,
									"id": 317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseTokenURI_3051": {
									"entryPoint": 4445,
									"id": 3051,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_1526": {
									"entryPoint": 5833,
									"id": 1526,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_426": {
									"entryPoint": 1907,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalance_3244": {
									"entryPoint": 4837,
									"id": 3244,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalToken_3254": {
									"entryPoint": 2352,
									"id": 3254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1540": {
									"entryPoint": 5964,
									"id": 1540,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_459": {
									"entryPoint": 4585,
									"id": 459,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isSellNft_3215": {
									"entryPoint": 4727,
									"id": 3215,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2747": {
									"entryPoint": 8731,
									"id": 2747,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_3150": {
									"entryPoint": 2557,
									"id": 3150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_339": {
									"entryPoint": 1764,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nfts_3078": {
									"entryPoint": 2211,
									"id": 3078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_330": {
									"entryPoint": 2845,
									"id": 330,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@royaltyInfo_3363": {
									"entryPoint": 2274,
									"id": 3363,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@royaltyPercentage_3054": {
									"entryPoint": 3154,
									"id": 3054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_523": {
									"entryPoint": 2368,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_549": {
									"entryPoint": 4149,
									"id": 549,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_442": {
									"entryPoint": 3304,
									"id": 442,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_3101": {
									"entryPoint": 2399,
									"id": 3101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1381": {
									"entryPoint": 1668,
									"id": 1381,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1860": {
									"entryPoint": 7263,
									"id": 1860,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_289": {
									"entryPoint": 4869,
									"id": 289,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_348": {
									"entryPoint": 3160,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1650": {
									"entryPoint": 8094,
									"id": 1650,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1438": {
									"entryPoint": 4178,
									"id": 1438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_384": {
									"entryPoint": 7161,
									"id": 384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_505": {
									"entryPoint": 1956,
									"id": 505,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10597,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 10131,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 12582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 10196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 10707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 12602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 10241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 10312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12391,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 12508,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9815,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10990,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 11246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 9559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 11381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9290,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 11264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11043,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 11414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9081,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9077,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 11279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5": {
									"entryPoint": 12229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8": {
									"entryPoint": 11866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f": {
									"entryPoint": 11970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e": {
									"entryPoint": 12074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 11291,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11423,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26740:18",
										"nodeType": "YulBlock",
										"src": "0:26740:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "378:105:18",
													"nodeType": "YulBlock",
													"src": "378:105:18",
													"statements": [
														{
															"nativeSrc": "388:89:18",
															"nodeType": "YulAssignment",
															"src": "388:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:18",
																		"nodeType": "YulLiteral",
																		"src": "410:66:18",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:18"
																},
																"nativeSrc": "399:78:18",
																"nodeType": "YulFunctionCall",
																"src": "399:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:18",
														"nodeType": "YulTypedName",
														"src": "360:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:18",
														"nodeType": "YulTypedName",
														"src": "370:7:18",
														"type": ""
													}
												],
												"src": "334:149:18"
											},
											{
												"body": {
													"nativeSrc": "531:78:18",
													"nodeType": "YulBlock",
													"src": "531:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:18",
																"nodeType": "YulBlock",
																"src": "587:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:18",
																					"nodeType": "YulLiteral",
																					"src": "596:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "599:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:18"
																			},
																			"nativeSrc": "589:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:18"
																		},
																		"nativeSrc": "589:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:18"
																				},
																				"nativeSrc": "561:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:18"
																		},
																		"nativeSrc": "551:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:18"
																},
																"nativeSrc": "544:42:18",
																"nodeType": "YulFunctionCall",
																"src": "544:42:18"
															},
															"nativeSrc": "541:62:18",
															"nodeType": "YulIf",
															"src": "541:62:18"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:18",
														"nodeType": "YulTypedName",
														"src": "524:5:18",
														"type": ""
													}
												],
												"src": "489:120:18"
											},
											{
												"body": {
													"nativeSrc": "666:86:18",
													"nodeType": "YulBlock",
													"src": "666:86:18",
													"statements": [
														{
															"nativeSrc": "676:29:18",
															"nodeType": "YulAssignment",
															"src": "676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:18"
																},
																"nativeSrc": "685:20:18",
																"nodeType": "YulFunctionCall",
																"src": "685:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:18"
																},
																"nativeSrc": "714:32:18",
																"nodeType": "YulFunctionCall",
																"src": "714:32:18"
															},
															"nativeSrc": "714:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:18",
														"nodeType": "YulTypedName",
														"src": "644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:18",
														"nodeType": "YulTypedName",
														"src": "652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:18",
														"nodeType": "YulTypedName",
														"src": "660:5:18",
														"type": ""
													}
												],
												"src": "615:137:18"
											},
											{
												"body": {
													"nativeSrc": "823:262:18",
													"nodeType": "YulBlock",
													"src": "823:262:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:18",
																"nodeType": "YulBlock",
																"src": "869:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:18"
																			},
																			"nativeSrc": "871:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:18"
																		},
																		"nativeSrc": "871:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:18"
																		},
																		"nativeSrc": "840:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:18",
																		"nodeType": "YulLiteral",
																		"src": "865:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:18"
																},
																"nativeSrc": "836:32:18",
																"nodeType": "YulFunctionCall",
																"src": "836:32:18"
															},
															"nativeSrc": "833:119:18",
															"nodeType": "YulIf",
															"src": "833:119:18"
														},
														{
															"nativeSrc": "962:116:18",
															"nodeType": "YulBlock",
															"src": "962:116:18",
															"statements": [
																{
																	"nativeSrc": "977:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:18",
																		"nodeType": "YulLiteral",
																		"src": "991:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:18",
																			"nodeType": "YulTypedName",
																			"src": "981:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:18",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:18"
																				},
																				"nativeSrc": "1036:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:18",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:18"
																		},
																		"nativeSrc": "1016:52:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:18",
														"nodeType": "YulTypedName",
														"src": "793:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:18",
														"nodeType": "YulTypedName",
														"src": "804:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:18",
														"nodeType": "YulTypedName",
														"src": "816:6:18",
														"type": ""
													}
												],
												"src": "758:327:18"
											},
											{
												"body": {
													"nativeSrc": "1133:48:18",
													"nodeType": "YulBlock",
													"src": "1133:48:18",
													"statements": [
														{
															"nativeSrc": "1143:32:18",
															"nodeType": "YulAssignment",
															"src": "1143:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:18"
																		},
																		"nativeSrc": "1161:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:18"
																},
																"nativeSrc": "1154:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:18",
														"nodeType": "YulTypedName",
														"src": "1115:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:18",
														"nodeType": "YulTypedName",
														"src": "1125:7:18",
														"type": ""
													}
												],
												"src": "1091:90:18"
											},
											{
												"body": {
													"nativeSrc": "1246:50:18",
													"nodeType": "YulBlock",
													"src": "1246:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:18"
																		},
																		"nativeSrc": "1268:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:18"
																},
																"nativeSrc": "1256:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:18"
															},
															"nativeSrc": "1256:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:18",
														"nodeType": "YulTypedName",
														"src": "1234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:18",
														"nodeType": "YulTypedName",
														"src": "1241:3:18",
														"type": ""
													}
												],
												"src": "1187:109:18"
											},
											{
												"body": {
													"nativeSrc": "1394:118:18",
													"nodeType": "YulBlock",
													"src": "1394:118:18",
													"statements": [
														{
															"nativeSrc": "1404:26:18",
															"nodeType": "YulAssignment",
															"src": "1404:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:18"
																},
																"nativeSrc": "1412:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:18"
																		},
																		"nativeSrc": "1487:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:18"
																},
																"nativeSrc": "1440:65:18",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:18"
															},
															"nativeSrc": "1440:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:18",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:18",
														"nodeType": "YulTypedName",
														"src": "1378:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:18",
														"nodeType": "YulTypedName",
														"src": "1389:4:18",
														"type": ""
													}
												],
												"src": "1302:210:18"
											},
											{
												"body": {
													"nativeSrc": "1577:40:18",
													"nodeType": "YulBlock",
													"src": "1577:40:18",
													"statements": [
														{
															"nativeSrc": "1588:22:18",
															"nodeType": "YulAssignment",
															"src": "1588:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:18"
																},
																"nativeSrc": "1598:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:18",
														"nodeType": "YulTypedName",
														"src": "1560:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:18",
														"nodeType": "YulTypedName",
														"src": "1570:6:18",
														"type": ""
													}
												],
												"src": "1518:99:18"
											},
											{
												"body": {
													"nativeSrc": "1719:73:18",
													"nodeType": "YulBlock",
													"src": "1719:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:18"
																},
																"nativeSrc": "1729:19:18",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:18"
															},
															"nativeSrc": "1729:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:18"
														},
														{
															"nativeSrc": "1757:29:18",
															"nodeType": "YulAssignment",
															"src": "1757:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:18"
																},
																"nativeSrc": "1772:14:18",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:18",
														"nodeType": "YulTypedName",
														"src": "1691:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:18",
														"nodeType": "YulTypedName",
														"src": "1696:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:18",
														"nodeType": "YulTypedName",
														"src": "1707:11:18",
														"type": ""
													}
												],
												"src": "1623:169:18"
											},
											{
												"body": {
													"nativeSrc": "1860:184:18",
													"nodeType": "YulBlock",
													"src": "1860:184:18",
													"statements": [
														{
															"nativeSrc": "1870:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:18",
																"nodeType": "YulLiteral",
																"src": "1879:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:18",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:18",
																"nodeType": "YulBlock",
																"src": "1939:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:18"
																					},
																					"nativeSrc": "1960:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:18"
																							},
																							"nativeSrc": "1979:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:18"
																					},
																					"nativeSrc": "1973:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:18"
																			},
																			"nativeSrc": "1953:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:18"
																		},
																		"nativeSrc": "1953:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:18"
																},
																"nativeSrc": "1897:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:18"
															},
															"nativeSrc": "1889:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:18",
																"nodeType": "YulBlock",
																"src": "1911:19:18",
																"statements": [
																	{
																		"nativeSrc": "1913:15:18",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:18",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:18"
																			},
																			"nativeSrc": "1918:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:18",
																"nodeType": "YulBlock",
																"src": "1893:3:18",
																"statements": []
															},
															"src": "1889:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:18"
																		},
																		"nativeSrc": "2018:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:18"
																},
																"nativeSrc": "2011:27:18",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:18"
															},
															"nativeSrc": "2011:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:18",
														"nodeType": "YulTypedName",
														"src": "1842:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:18",
														"nodeType": "YulTypedName",
														"src": "1847:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:18",
														"nodeType": "YulTypedName",
														"src": "1852:6:18",
														"type": ""
													}
												],
												"src": "1798:246:18"
											},
											{
												"body": {
													"nativeSrc": "2098:54:18",
													"nodeType": "YulBlock",
													"src": "2098:54:18",
													"statements": [
														{
															"nativeSrc": "2108:38:18",
															"nodeType": "YulAssignment",
															"src": "2108:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:18"
																		},
																		"nativeSrc": "2122:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:18"
																		},
																		"nativeSrc": "2138:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:18"
																},
																"nativeSrc": "2118:28:18",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:18",
														"nodeType": "YulTypedName",
														"src": "2081:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:18",
														"nodeType": "YulTypedName",
														"src": "2091:6:18",
														"type": ""
													}
												],
												"src": "2050:102:18"
											},
											{
												"body": {
													"nativeSrc": "2250:285:18",
													"nodeType": "YulBlock",
													"src": "2250:285:18",
													"statements": [
														{
															"nativeSrc": "2260:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:18"
																},
																"nativeSrc": "2274:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:18",
															"nodeType": "YulAssignment",
															"src": "2322:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:18"
																},
																"nativeSrc": "2329:71:18",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:18"
																		},
																		"nativeSrc": "2444:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:18"
																},
																"nativeSrc": "2409:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:18"
															},
															"nativeSrc": "2409:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:18"
														},
														{
															"nativeSrc": "2483:46:18",
															"nodeType": "YulAssignment",
															"src": "2483:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:18"
																		},
																		"nativeSrc": "2499:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:18"
																},
																"nativeSrc": "2490:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:18",
														"nodeType": "YulTypedName",
														"src": "2231:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:18",
														"nodeType": "YulTypedName",
														"src": "2238:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:18",
														"nodeType": "YulTypedName",
														"src": "2246:3:18",
														"type": ""
													}
												],
												"src": "2158:377:18"
											},
											{
												"body": {
													"nativeSrc": "2659:195:18",
													"nodeType": "YulBlock",
													"src": "2659:195:18",
													"statements": [
														{
															"nativeSrc": "2669:26:18",
															"nodeType": "YulAssignment",
															"src": "2669:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:18"
																},
																"nativeSrc": "2677:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:18"
																		},
																		"nativeSrc": "2712:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:18"
																		},
																		"nativeSrc": "2731:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:18"
																},
																"nativeSrc": "2705:47:18",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:18"
															},
															"nativeSrc": "2705:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:18"
														},
														{
															"nativeSrc": "2761:86:18",
															"nodeType": "YulAssignment",
															"src": "2761:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:18"
																},
																"nativeSrc": "2769:78:18",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:18",
														"nodeType": "YulTypedName",
														"src": "2631:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:18",
														"nodeType": "YulTypedName",
														"src": "2643:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:18",
														"nodeType": "YulTypedName",
														"src": "2654:4:18",
														"type": ""
													}
												],
												"src": "2541:313:18"
											},
											{
												"body": {
													"nativeSrc": "2905:32:18",
													"nodeType": "YulBlock",
													"src": "2905:32:18",
													"statements": [
														{
															"nativeSrc": "2915:16:18",
															"nodeType": "YulAssignment",
															"src": "2915:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:18",
																"nodeType": "YulIdentifier",
																"src": "2926:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:18",
														"nodeType": "YulTypedName",
														"src": "2887:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:18",
														"nodeType": "YulTypedName",
														"src": "2897:7:18",
														"type": ""
													}
												],
												"src": "2860:77:18"
											},
											{
												"body": {
													"nativeSrc": "2986:79:18",
													"nodeType": "YulBlock",
													"src": "2986:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:18",
																"nodeType": "YulBlock",
																"src": "3043:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:18"
																			},
																			"nativeSrc": "3045:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:18"
																		},
																		"nativeSrc": "3045:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:18"
																				},
																				"nativeSrc": "3016:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:18"
																		},
																		"nativeSrc": "3006:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:18"
																},
																"nativeSrc": "2999:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:18"
															},
															"nativeSrc": "2996:63:18",
															"nodeType": "YulIf",
															"src": "2996:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:18",
														"nodeType": "YulTypedName",
														"src": "2979:5:18",
														"type": ""
													}
												],
												"src": "2943:122:18"
											},
											{
												"body": {
													"nativeSrc": "3123:87:18",
													"nodeType": "YulBlock",
													"src": "3123:87:18",
													"statements": [
														{
															"nativeSrc": "3133:29:18",
															"nodeType": "YulAssignment",
															"src": "3133:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:18"
																},
																"nativeSrc": "3142:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:18"
																},
																"nativeSrc": "3171:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:18"
															},
															"nativeSrc": "3171:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:18",
														"nodeType": "YulTypedName",
														"src": "3101:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:18",
														"nodeType": "YulTypedName",
														"src": "3109:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:18",
														"nodeType": "YulTypedName",
														"src": "3117:5:18",
														"type": ""
													}
												],
												"src": "3071:139:18"
											},
											{
												"body": {
													"nativeSrc": "3282:263:18",
													"nodeType": "YulBlock",
													"src": "3282:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:18",
																"nodeType": "YulBlock",
																"src": "3328:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:18"
																			},
																			"nativeSrc": "3330:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:18"
																		},
																		"nativeSrc": "3330:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:18"
																		},
																		"nativeSrc": "3299:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:18"
																},
																"nativeSrc": "3295:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:18"
															},
															"nativeSrc": "3292:119:18",
															"nodeType": "YulIf",
															"src": "3292:119:18"
														},
														{
															"nativeSrc": "3421:117:18",
															"nodeType": "YulBlock",
															"src": "3421:117:18",
															"statements": [
																{
																	"nativeSrc": "3436:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:18"
																				},
																				"nativeSrc": "3496:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:18"
																		},
																		"nativeSrc": "3475:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:18",
														"nodeType": "YulTypedName",
														"src": "3252:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:18",
														"nodeType": "YulTypedName",
														"src": "3263:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:18",
														"nodeType": "YulTypedName",
														"src": "3275:6:18",
														"type": ""
													}
												],
												"src": "3216:329:18"
											},
											{
												"body": {
													"nativeSrc": "3596:81:18",
													"nodeType": "YulBlock",
													"src": "3596:81:18",
													"statements": [
														{
															"nativeSrc": "3606:65:18",
															"nodeType": "YulAssignment",
															"src": "3606:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:18",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:18"
																},
																"nativeSrc": "3617:54:18",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:18",
														"nodeType": "YulTypedName",
														"src": "3578:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:18",
														"nodeType": "YulTypedName",
														"src": "3588:7:18",
														"type": ""
													}
												],
												"src": "3551:126:18"
											},
											{
												"body": {
													"nativeSrc": "3728:51:18",
													"nodeType": "YulBlock",
													"src": "3728:51:18",
													"statements": [
														{
															"nativeSrc": "3738:35:18",
															"nodeType": "YulAssignment",
															"src": "3738:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:18"
																},
																"nativeSrc": "3749:24:18",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:18",
														"nodeType": "YulTypedName",
														"src": "3710:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:18",
														"nodeType": "YulTypedName",
														"src": "3720:7:18",
														"type": ""
													}
												],
												"src": "3683:96:18"
											},
											{
												"body": {
													"nativeSrc": "3850:53:18",
													"nodeType": "YulBlock",
													"src": "3850:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:18"
																		},
																		"nativeSrc": "3872:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:18"
																},
																"nativeSrc": "3860:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:18"
															},
															"nativeSrc": "3860:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:18",
														"nodeType": "YulTypedName",
														"src": "3838:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:18",
														"nodeType": "YulTypedName",
														"src": "3845:3:18",
														"type": ""
													}
												],
												"src": "3785:118:18"
											},
											{
												"body": {
													"nativeSrc": "4007:124:18",
													"nodeType": "YulBlock",
													"src": "4007:124:18",
													"statements": [
														{
															"nativeSrc": "4017:26:18",
															"nodeType": "YulAssignment",
															"src": "4017:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:18"
																},
																"nativeSrc": "4025:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:18"
																		},
																		"nativeSrc": "4106:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:18"
																},
																"nativeSrc": "4053:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:18"
															},
															"nativeSrc": "4053:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:18",
														"nodeType": "YulTypedName",
														"src": "3979:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:18",
														"nodeType": "YulTypedName",
														"src": "3991:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:18",
														"nodeType": "YulTypedName",
														"src": "4002:4:18",
														"type": ""
													}
												],
												"src": "3909:222:18"
											},
											{
												"body": {
													"nativeSrc": "4180:79:18",
													"nodeType": "YulBlock",
													"src": "4180:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:18",
																"nodeType": "YulBlock",
																"src": "4237:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:18"
																			},
																			"nativeSrc": "4239:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:18"
																		},
																		"nativeSrc": "4239:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:18"
																				},
																				"nativeSrc": "4210:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:18"
																		},
																		"nativeSrc": "4200:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:18"
																},
																"nativeSrc": "4193:43:18",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:18"
															},
															"nativeSrc": "4190:63:18",
															"nodeType": "YulIf",
															"src": "4190:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:18",
														"nodeType": "YulTypedName",
														"src": "4173:5:18",
														"type": ""
													}
												],
												"src": "4137:122:18"
											},
											{
												"body": {
													"nativeSrc": "4317:87:18",
													"nodeType": "YulBlock",
													"src": "4317:87:18",
													"statements": [
														{
															"nativeSrc": "4327:29:18",
															"nodeType": "YulAssignment",
															"src": "4327:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:18"
																},
																"nativeSrc": "4336:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:18"
																},
																"nativeSrc": "4365:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:18"
															},
															"nativeSrc": "4365:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:18",
														"nodeType": "YulTypedName",
														"src": "4295:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:18",
														"nodeType": "YulTypedName",
														"src": "4303:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:18",
														"nodeType": "YulTypedName",
														"src": "4311:5:18",
														"type": ""
													}
												],
												"src": "4265:139:18"
											},
											{
												"body": {
													"nativeSrc": "4493:391:18",
													"nodeType": "YulBlock",
													"src": "4493:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:18",
																"nodeType": "YulBlock",
																"src": "4539:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:18"
																			},
																			"nativeSrc": "4541:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:18"
																		},
																		"nativeSrc": "4541:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:18"
																		},
																		"nativeSrc": "4510:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:18"
																},
																"nativeSrc": "4506:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:18"
															},
															"nativeSrc": "4503:119:18",
															"nodeType": "YulIf",
															"src": "4503:119:18"
														},
														{
															"nativeSrc": "4632:117:18",
															"nodeType": "YulBlock",
															"src": "4632:117:18",
															"statements": [
																{
																	"nativeSrc": "4647:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:18"
																				},
																				"nativeSrc": "4707:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:18"
																		},
																		"nativeSrc": "4686:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:18",
															"nodeType": "YulBlock",
															"src": "4759:118:18",
															"statements": [
																{
																	"nativeSrc": "4774:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:18"
																				},
																				"nativeSrc": "4835:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:18"
																		},
																		"nativeSrc": "4814:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:18",
														"nodeType": "YulTypedName",
														"src": "4455:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:18",
														"nodeType": "YulTypedName",
														"src": "4466:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:18",
														"nodeType": "YulTypedName",
														"src": "4478:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:18",
														"nodeType": "YulTypedName",
														"src": "4486:6:18",
														"type": ""
													}
												],
												"src": "4410:474:18"
											},
											{
												"body": {
													"nativeSrc": "4990:519:18",
													"nodeType": "YulBlock",
													"src": "4990:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:18",
																"nodeType": "YulBlock",
																"src": "5036:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:18"
																			},
																			"nativeSrc": "5038:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:18"
																		},
																		"nativeSrc": "5038:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:18"
																		},
																		"nativeSrc": "5007:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:18"
																},
																"nativeSrc": "5003:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:18"
															},
															"nativeSrc": "5000:119:18",
															"nodeType": "YulIf",
															"src": "5000:119:18"
														},
														{
															"nativeSrc": "5129:117:18",
															"nodeType": "YulBlock",
															"src": "5129:117:18",
															"statements": [
																{
																	"nativeSrc": "5144:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:18"
																				},
																				"nativeSrc": "5204:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:18"
																		},
																		"nativeSrc": "5183:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:18",
															"nodeType": "YulBlock",
															"src": "5256:118:18",
															"statements": [
																{
																	"nativeSrc": "5271:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:18"
																				},
																				"nativeSrc": "5332:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:18"
																		},
																		"nativeSrc": "5311:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:18",
															"nodeType": "YulBlock",
															"src": "5384:118:18",
															"statements": [
																{
																	"nativeSrc": "5399:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:18"
																				},
																				"nativeSrc": "5460:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:18"
																		},
																		"nativeSrc": "5439:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:18",
														"nodeType": "YulTypedName",
														"src": "4944:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:18",
														"nodeType": "YulTypedName",
														"src": "4955:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:18",
														"nodeType": "YulTypedName",
														"src": "4967:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:18",
														"nodeType": "YulTypedName",
														"src": "4975:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:18",
														"nodeType": "YulTypedName",
														"src": "4983:6:18",
														"type": ""
													}
												],
												"src": "4890:619:18"
											},
											{
												"body": {
													"nativeSrc": "5580:53:18",
													"nodeType": "YulBlock",
													"src": "5580:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5597:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5597:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5620:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5620:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5602:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5602:17:18"
																		},
																		"nativeSrc": "5602:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5590:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:18"
																},
																"nativeSrc": "5590:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5590:37:18"
															},
															"nativeSrc": "5590:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5590:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5515:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5568:5:18",
														"nodeType": "YulTypedName",
														"src": "5568:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5575:3:18",
														"nodeType": "YulTypedName",
														"src": "5575:3:18",
														"type": ""
													}
												],
												"src": "5515:118:18"
											},
											{
												"body": {
													"nativeSrc": "5765:206:18",
													"nodeType": "YulBlock",
													"src": "5765:206:18",
													"statements": [
														{
															"nativeSrc": "5775:26:18",
															"nodeType": "YulAssignment",
															"src": "5775:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5787:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5787:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5798:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5783:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5783:3:18"
																},
																"nativeSrc": "5783:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5783:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5775:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5775:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5855:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5855:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5868:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5868:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5879:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5879:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5864:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5864:3:18"
																		},
																		"nativeSrc": "5864:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5864:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5811:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "5811:43:18"
																},
																"nativeSrc": "5811:71:18",
																"nodeType": "YulFunctionCall",
																"src": "5811:71:18"
															},
															"nativeSrc": "5811:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "5811:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5936:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5936:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5949:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5949:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5960:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5960:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5945:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5945:3:18"
																		},
																		"nativeSrc": "5945:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5945:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5892:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "5892:43:18"
																},
																"nativeSrc": "5892:72:18",
																"nodeType": "YulFunctionCall",
																"src": "5892:72:18"
															},
															"nativeSrc": "5892:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "5892:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5639:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5729:9:18",
														"nodeType": "YulTypedName",
														"src": "5729:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5741:6:18",
														"nodeType": "YulTypedName",
														"src": "5741:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5749:6:18",
														"nodeType": "YulTypedName",
														"src": "5749:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5760:4:18",
														"nodeType": "YulTypedName",
														"src": "5760:4:18",
														"type": ""
													}
												],
												"src": "5639:332:18"
											},
											{
												"body": {
													"nativeSrc": "6060:391:18",
													"nodeType": "YulBlock",
													"src": "6060:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6106:83:18",
																"nodeType": "YulBlock",
																"src": "6106:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6108:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6108:77:18"
																			},
																			"nativeSrc": "6108:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6108:79:18"
																		},
																		"nativeSrc": "6108:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6108:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6081:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6081:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6090:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6077:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:18"
																		},
																		"nativeSrc": "6077:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6077:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6102:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6102:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6073:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:18"
																},
																"nativeSrc": "6073:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6073:32:18"
															},
															"nativeSrc": "6070:119:18",
															"nodeType": "YulIf",
															"src": "6070:119:18"
														},
														{
															"nativeSrc": "6199:117:18",
															"nodeType": "YulBlock",
															"src": "6199:117:18",
															"statements": [
																{
																	"nativeSrc": "6214:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6214:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6228:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6228:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6218:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6218:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6243:63:18",
																	"nodeType": "YulAssignment",
																	"src": "6243:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6278:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6278:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6289:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6289:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6274:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6274:3:18"
																				},
																				"nativeSrc": "6274:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6274:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6298:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6298:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6253:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "6253:20:18"
																		},
																		"nativeSrc": "6253:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6243:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6243:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6326:118:18",
															"nodeType": "YulBlock",
															"src": "6326:118:18",
															"statements": [
																{
																	"nativeSrc": "6341:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6341:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6355:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6355:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6345:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6345:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6371:63:18",
																	"nodeType": "YulAssignment",
																	"src": "6371:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6406:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6406:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6417:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6417:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6402:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6402:3:18"
																				},
																				"nativeSrc": "6402:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6402:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6426:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6426:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6381:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "6381:20:18"
																		},
																		"nativeSrc": "6381:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6381:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6371:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6371:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5977:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6022:9:18",
														"nodeType": "YulTypedName",
														"src": "6022:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6033:7:18",
														"nodeType": "YulTypedName",
														"src": "6033:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6045:6:18",
														"nodeType": "YulTypedName",
														"src": "6045:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6053:6:18",
														"nodeType": "YulTypedName",
														"src": "6053:6:18",
														"type": ""
													}
												],
												"src": "5977:474:18"
											},
											{
												"body": {
													"nativeSrc": "6555:124:18",
													"nodeType": "YulBlock",
													"src": "6555:124:18",
													"statements": [
														{
															"nativeSrc": "6565:26:18",
															"nodeType": "YulAssignment",
															"src": "6565:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6577:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6577:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6588:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6588:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6573:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:18"
																},
																"nativeSrc": "6573:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6573:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6565:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6565:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6645:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6645:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6658:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6658:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6669:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6669:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6654:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6654:3:18"
																		},
																		"nativeSrc": "6654:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6654:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6601:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "6601:43:18"
																},
																"nativeSrc": "6601:71:18",
																"nodeType": "YulFunctionCall",
																"src": "6601:71:18"
															},
															"nativeSrc": "6601:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "6601:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6457:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6527:9:18",
														"nodeType": "YulTypedName",
														"src": "6527:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6539:6:18",
														"nodeType": "YulTypedName",
														"src": "6539:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6550:4:18",
														"nodeType": "YulTypedName",
														"src": "6550:4:18",
														"type": ""
													}
												],
												"src": "6457:222:18"
											},
											{
												"body": {
													"nativeSrc": "6774:28:18",
													"nodeType": "YulBlock",
													"src": "6774:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6791:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6791:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6794:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6794:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6784:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:18"
																},
																"nativeSrc": "6784:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6784:12:18"
															},
															"nativeSrc": "6784:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6784:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6685:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6685:117:18"
											},
											{
												"body": {
													"nativeSrc": "6897:28:18",
													"nodeType": "YulBlock",
													"src": "6897:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6914:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6914:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6917:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6917:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6907:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6907:6:18"
																},
																"nativeSrc": "6907:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6907:12:18"
															},
															"nativeSrc": "6907:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6907:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6808:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6808:117:18"
											},
											{
												"body": {
													"nativeSrc": "6959:152:18",
													"nodeType": "YulBlock",
													"src": "6959:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6976:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6976:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6979:77:18",
																		"nodeType": "YulLiteral",
																		"src": "6979:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6969:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6969:6:18"
																},
																"nativeSrc": "6969:88:18",
																"nodeType": "YulFunctionCall",
																"src": "6969:88:18"
															},
															"nativeSrc": "6969:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "6969:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7073:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7073:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7076:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7076:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7066:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7066:6:18"
																},
																"nativeSrc": "7066:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7066:15:18"
															},
															"nativeSrc": "7066:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7066:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7097:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7097:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7100:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7100:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7090:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7090:6:18"
																},
																"nativeSrc": "7090:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7090:15:18"
															},
															"nativeSrc": "7090:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7090:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6931:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6931:180:18"
											},
											{
												"body": {
													"nativeSrc": "7160:238:18",
													"nodeType": "YulBlock",
													"src": "7160:238:18",
													"statements": [
														{
															"nativeSrc": "7170:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7170:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7192:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7192:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7222:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "7222:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7200:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "7200:21:18"
																		},
																		"nativeSrc": "7200:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7200:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7188:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:18"
																},
																"nativeSrc": "7188:40:18",
																"nodeType": "YulFunctionCall",
																"src": "7188:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7174:10:18",
																	"nodeType": "YulTypedName",
																	"src": "7174:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7339:22:18",
																"nodeType": "YulBlock",
																"src": "7339:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7341:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7341:16:18"
																			},
																			"nativeSrc": "7341:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7341:18:18"
																		},
																		"nativeSrc": "7341:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7341:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7282:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "7282:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7294:18:18",
																				"nodeType": "YulLiteral",
																				"src": "7294:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7279:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "7279:2:18"
																		},
																		"nativeSrc": "7279:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7279:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7318:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "7318:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7330:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7330:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7315:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "7315:2:18"
																		},
																		"nativeSrc": "7315:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7315:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7276:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7276:2:18"
																},
																"nativeSrc": "7276:62:18",
																"nodeType": "YulFunctionCall",
																"src": "7276:62:18"
															},
															"nativeSrc": "7273:88:18",
															"nodeType": "YulIf",
															"src": "7273:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7377:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7377:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7381:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "7381:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7370:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:18"
																},
																"nativeSrc": "7370:22:18",
																"nodeType": "YulFunctionCall",
																"src": "7370:22:18"
															},
															"nativeSrc": "7370:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "7370:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7117:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7146:6:18",
														"nodeType": "YulTypedName",
														"src": "7146:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7154:4:18",
														"nodeType": "YulTypedName",
														"src": "7154:4:18",
														"type": ""
													}
												],
												"src": "7117:281:18"
											},
											{
												"body": {
													"nativeSrc": "7445:88:18",
													"nodeType": "YulBlock",
													"src": "7445:88:18",
													"statements": [
														{
															"nativeSrc": "7455:30:18",
															"nodeType": "YulAssignment",
															"src": "7455:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7465:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "7465:18:18"
																},
																"nativeSrc": "7465:20:18",
																"nodeType": "YulFunctionCall",
																"src": "7465:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7455:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7455:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7514:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7514:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7522:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7522:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7494:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "7494:19:18"
																},
																"nativeSrc": "7494:33:18",
																"nodeType": "YulFunctionCall",
																"src": "7494:33:18"
															},
															"nativeSrc": "7494:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "7494:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7404:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7429:4:18",
														"nodeType": "YulTypedName",
														"src": "7429:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7438:6:18",
														"nodeType": "YulTypedName",
														"src": "7438:6:18",
														"type": ""
													}
												],
												"src": "7404:129:18"
											},
											{
												"body": {
													"nativeSrc": "7606:241:18",
													"nodeType": "YulBlock",
													"src": "7606:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7711:22:18",
																"nodeType": "YulBlock",
																"src": "7711:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7713:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7713:16:18"
																			},
																			"nativeSrc": "7713:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7713:18:18"
																		},
																		"nativeSrc": "7713:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7713:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7683:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7683:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7691:18:18",
																		"nodeType": "YulLiteral",
																		"src": "7691:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7680:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7680:2:18"
																},
																"nativeSrc": "7680:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7680:30:18"
															},
															"nativeSrc": "7677:56:18",
															"nodeType": "YulIf",
															"src": "7677:56:18"
														},
														{
															"nativeSrc": "7743:37:18",
															"nodeType": "YulAssignment",
															"src": "7743:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7773:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7773:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7751:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "7751:21:18"
																},
																"nativeSrc": "7751:29:18",
																"nodeType": "YulFunctionCall",
																"src": "7751:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7743:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7743:4:18"
																}
															]
														},
														{
															"nativeSrc": "7817:23:18",
															"nodeType": "YulAssignment",
															"src": "7817:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7829:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7829:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7835:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7825:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7825:3:18"
																},
																"nativeSrc": "7825:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7825:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7817:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7817:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7539:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7590:6:18",
														"nodeType": "YulTypedName",
														"src": "7590:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7601:4:18",
														"nodeType": "YulTypedName",
														"src": "7601:4:18",
														"type": ""
													}
												],
												"src": "7539:308:18"
											},
											{
												"body": {
													"nativeSrc": "7917:82:18",
													"nodeType": "YulBlock",
													"src": "7917:82:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7940:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7940:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7945:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7945:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7950:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7950:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7927:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7927:12:18"
																},
																"nativeSrc": "7927:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7927:30:18"
															},
															"nativeSrc": "7927:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7927:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7977:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7977:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7982:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7982:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7973:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:18"
																		},
																		"nativeSrc": "7973:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7973:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7991:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7991:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7966:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:18"
																},
																"nativeSrc": "7966:27:18",
																"nodeType": "YulFunctionCall",
																"src": "7966:27:18"
															},
															"nativeSrc": "7966:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "7966:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7853:146:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7899:3:18",
														"nodeType": "YulTypedName",
														"src": "7899:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7904:3:18",
														"nodeType": "YulTypedName",
														"src": "7904:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7909:6:18",
														"nodeType": "YulTypedName",
														"src": "7909:6:18",
														"type": ""
													}
												],
												"src": "7853:146:18"
											},
											{
												"body": {
													"nativeSrc": "8089:341:18",
													"nodeType": "YulBlock",
													"src": "8089:341:18",
													"statements": [
														{
															"nativeSrc": "8099:75:18",
															"nodeType": "YulAssignment",
															"src": "8099:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8166:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8166:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8124:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "8124:41:18"
																		},
																		"nativeSrc": "8124:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8124:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8108:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "8108:15:18"
																},
																"nativeSrc": "8108:66:18",
																"nodeType": "YulFunctionCall",
																"src": "8108:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8099:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8099:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8190:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8190:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8197:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8197:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8183:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:18"
																},
																"nativeSrc": "8183:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8183:21:18"
															},
															"nativeSrc": "8183:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8183:21:18"
														},
														{
															"nativeSrc": "8213:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8213:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8228:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8228:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8235:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8235:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8224:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:18"
																},
																"nativeSrc": "8224:16:18",
																"nodeType": "YulFunctionCall",
																"src": "8224:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8217:3:18",
																	"nodeType": "YulTypedName",
																	"src": "8217:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8278:83:18",
																"nodeType": "YulBlock",
																"src": "8278:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8280:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8280:77:18"
																			},
																			"nativeSrc": "8280:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8280:79:18"
																		},
																		"nativeSrc": "8280:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8280:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8259:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8259:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8264:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8264:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8255:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8255:3:18"
																		},
																		"nativeSrc": "8255:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8255:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8273:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8273:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8252:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8252:2:18"
																},
																"nativeSrc": "8252:25:18",
																"nodeType": "YulFunctionCall",
																"src": "8252:25:18"
															},
															"nativeSrc": "8249:112:18",
															"nodeType": "YulIf",
															"src": "8249:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8407:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8407:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8412:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8412:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8417:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8417:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8370:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "8370:36:18"
																},
																"nativeSrc": "8370:54:18",
																"nodeType": "YulFunctionCall",
																"src": "8370:54:18"
															},
															"nativeSrc": "8370:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "8370:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8005:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8062:3:18",
														"nodeType": "YulTypedName",
														"src": "8062:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8067:6:18",
														"nodeType": "YulTypedName",
														"src": "8067:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8075:3:18",
														"nodeType": "YulTypedName",
														"src": "8075:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8083:5:18",
														"nodeType": "YulTypedName",
														"src": "8083:5:18",
														"type": ""
													}
												],
												"src": "8005:425:18"
											},
											{
												"body": {
													"nativeSrc": "8512:278:18",
													"nodeType": "YulBlock",
													"src": "8512:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8561:83:18",
																"nodeType": "YulBlock",
																"src": "8561:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8563:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8563:77:18"
																			},
																			"nativeSrc": "8563:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8563:79:18"
																		},
																		"nativeSrc": "8563:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8563:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8540:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8540:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8548:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8548:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8536:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8536:3:18"
																				},
																				"nativeSrc": "8536:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8536:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8555:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8555:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8532:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8532:3:18"
																		},
																		"nativeSrc": "8532:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8532:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8525:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8525:6:18"
																},
																"nativeSrc": "8525:35:18",
																"nodeType": "YulFunctionCall",
																"src": "8525:35:18"
															},
															"nativeSrc": "8522:122:18",
															"nodeType": "YulIf",
															"src": "8522:122:18"
														},
														{
															"nativeSrc": "8653:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8653:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8680:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8680:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8667:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "8667:12:18"
																},
																"nativeSrc": "8667:20:18",
																"nodeType": "YulFunctionCall",
																"src": "8667:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8657:6:18",
																	"nodeType": "YulTypedName",
																	"src": "8657:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8696:88:18",
															"nodeType": "YulAssignment",
															"src": "8696:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8757:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8757:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8765:4:18",
																				"nodeType": "YulLiteral",
																				"src": "8765:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8753:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:18"
																		},
																		"nativeSrc": "8753:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8753:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8772:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8772:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8780:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8780:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8705:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "8705:47:18"
																},
																"nativeSrc": "8705:79:18",
																"nodeType": "YulFunctionCall",
																"src": "8705:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8696:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8696:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8450:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8490:6:18",
														"nodeType": "YulTypedName",
														"src": "8490:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8498:3:18",
														"nodeType": "YulTypedName",
														"src": "8498:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8506:5:18",
														"nodeType": "YulTypedName",
														"src": "8506:5:18",
														"type": ""
													}
												],
												"src": "8450:340:18"
											},
											{
												"body": {
													"nativeSrc": "8872:433:18",
													"nodeType": "YulBlock",
													"src": "8872:433:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8918:83:18",
																"nodeType": "YulBlock",
																"src": "8918:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8920:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8920:77:18"
																			},
																			"nativeSrc": "8920:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8920:79:18"
																		},
																		"nativeSrc": "8920:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8920:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8893:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8893:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8902:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8902:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8889:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8889:3:18"
																		},
																		"nativeSrc": "8889:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8889:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8914:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8914:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8885:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8885:3:18"
																},
																"nativeSrc": "8885:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8885:32:18"
															},
															"nativeSrc": "8882:119:18",
															"nodeType": "YulIf",
															"src": "8882:119:18"
														},
														{
															"nativeSrc": "9011:287:18",
															"nodeType": "YulBlock",
															"src": "9011:287:18",
															"statements": [
																{
																	"nativeSrc": "9026:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9026:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9057:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9057:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9068:1:18",
																						"nodeType": "YulLiteral",
																						"src": "9068:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9053:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9053:3:18"
																				},
																				"nativeSrc": "9053:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9053:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9040:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "9040:12:18"
																		},
																		"nativeSrc": "9040:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9040:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9030:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9030:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9118:83:18",
																		"nodeType": "YulBlock",
																		"src": "9118:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9120:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "9120:77:18"
																					},
																					"nativeSrc": "9120:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9120:79:18"
																				},
																				"nativeSrc": "9120:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "9120:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9090:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9090:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9098:18:18",
																				"nodeType": "YulLiteral",
																				"src": "9098:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9087:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9087:2:18"
																		},
																		"nativeSrc": "9087:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9087:30:18"
																	},
																	"nativeSrc": "9084:117:18",
																	"nodeType": "YulIf",
																	"src": "9084:117:18"
																},
																{
																	"nativeSrc": "9215:73:18",
																	"nodeType": "YulAssignment",
																	"src": "9215:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9260:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9260:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9271:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9271:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9256:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9256:3:18"
																				},
																				"nativeSrc": "9256:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9256:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9280:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9280:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9225:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "9225:30:18"
																		},
																		"nativeSrc": "9225:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9225:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9215:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9215:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "8796:509:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8842:9:18",
														"nodeType": "YulTypedName",
														"src": "8842:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8853:7:18",
														"nodeType": "YulTypedName",
														"src": "8853:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8865:6:18",
														"nodeType": "YulTypedName",
														"src": "8865:6:18",
														"type": ""
													}
												],
												"src": "8796:509:18"
											},
											{
												"body": {
													"nativeSrc": "9404:561:18",
													"nodeType": "YulBlock",
													"src": "9404:561:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9450:83:18",
																"nodeType": "YulBlock",
																"src": "9450:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9452:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9452:77:18"
																			},
																			"nativeSrc": "9452:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9452:79:18"
																		},
																		"nativeSrc": "9452:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9452:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9425:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9425:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9434:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9434:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9421:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9421:3:18"
																		},
																		"nativeSrc": "9421:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9421:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9446:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9446:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9417:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9417:3:18"
																},
																"nativeSrc": "9417:32:18",
																"nodeType": "YulFunctionCall",
																"src": "9417:32:18"
															},
															"nativeSrc": "9414:119:18",
															"nodeType": "YulIf",
															"src": "9414:119:18"
														},
														{
															"nativeSrc": "9543:287:18",
															"nodeType": "YulBlock",
															"src": "9543:287:18",
															"statements": [
																{
																	"nativeSrc": "9558:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9558:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9589:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9589:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9600:1:18",
																						"nodeType": "YulLiteral",
																						"src": "9600:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9585:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9585:3:18"
																				},
																				"nativeSrc": "9585:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9585:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9572:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "9572:12:18"
																		},
																		"nativeSrc": "9572:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9572:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9562:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9562:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9650:83:18",
																		"nodeType": "YulBlock",
																		"src": "9650:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9652:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "9652:77:18"
																					},
																					"nativeSrc": "9652:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9652:79:18"
																				},
																				"nativeSrc": "9652:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "9652:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9622:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9622:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9630:18:18",
																				"nodeType": "YulLiteral",
																				"src": "9630:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9619:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9619:2:18"
																		},
																		"nativeSrc": "9619:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9619:30:18"
																	},
																	"nativeSrc": "9616:117:18",
																	"nodeType": "YulIf",
																	"src": "9616:117:18"
																},
																{
																	"nativeSrc": "9747:73:18",
																	"nodeType": "YulAssignment",
																	"src": "9747:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9792:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9792:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9803:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9803:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9788:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9788:3:18"
																				},
																				"nativeSrc": "9788:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9788:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9812:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9812:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9757:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "9757:30:18"
																		},
																		"nativeSrc": "9757:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9757:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9747:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9747:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9840:118:18",
															"nodeType": "YulBlock",
															"src": "9840:118:18",
															"statements": [
																{
																	"nativeSrc": "9855:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9855:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9869:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9869:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9859:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9859:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9885:63:18",
																	"nodeType": "YulAssignment",
																	"src": "9885:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9920:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9920:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9931:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9931:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9916:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9916:3:18"
																				},
																				"nativeSrc": "9916:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9916:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9940:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9940:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9895:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "9895:20:18"
																		},
																		"nativeSrc": "9895:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9895:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9885:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9885:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "9311:654:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9366:9:18",
														"nodeType": "YulTypedName",
														"src": "9366:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9377:7:18",
														"nodeType": "YulTypedName",
														"src": "9377:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9389:6:18",
														"nodeType": "YulTypedName",
														"src": "9389:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9397:6:18",
														"nodeType": "YulTypedName",
														"src": "9397:6:18",
														"type": ""
													}
												],
												"src": "9311:654:18"
											},
											{
												"body": {
													"nativeSrc": "10037:263:18",
													"nodeType": "YulBlock",
													"src": "10037:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10083:83:18",
																"nodeType": "YulBlock",
																"src": "10083:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10085:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10085:77:18"
																			},
																			"nativeSrc": "10085:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10085:79:18"
																		},
																		"nativeSrc": "10085:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10085:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10058:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10058:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10067:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10067:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10054:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10054:3:18"
																		},
																		"nativeSrc": "10054:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10054:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10079:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10079:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10050:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10050:3:18"
																},
																"nativeSrc": "10050:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10050:32:18"
															},
															"nativeSrc": "10047:119:18",
															"nodeType": "YulIf",
															"src": "10047:119:18"
														},
														{
															"nativeSrc": "10176:117:18",
															"nodeType": "YulBlock",
															"src": "10176:117:18",
															"statements": [
																{
																	"nativeSrc": "10191:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10191:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10205:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10205:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10195:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10195:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10220:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10220:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10255:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10255:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10266:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10266:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10251:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10251:3:18"
																				},
																				"nativeSrc": "10251:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10251:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10275:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10275:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10230:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10230:20:18"
																		},
																		"nativeSrc": "10230:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10230:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10220:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10220:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9971:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10007:9:18",
														"nodeType": "YulTypedName",
														"src": "10007:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10018:7:18",
														"nodeType": "YulTypedName",
														"src": "10018:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10030:6:18",
														"nodeType": "YulTypedName",
														"src": "10030:6:18",
														"type": ""
													}
												],
												"src": "9971:329:18"
											},
											{
												"body": {
													"nativeSrc": "10346:76:18",
													"nodeType": "YulBlock",
													"src": "10346:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10400:16:18",
																"nodeType": "YulBlock",
																"src": "10400:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10409:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10409:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10412:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10412:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10402:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10402:6:18"
																			},
																			"nativeSrc": "10402:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10402:12:18"
																		},
																		"nativeSrc": "10402:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10402:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10369:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "10369:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10391:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "10391:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10376:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "10376:14:18"
																				},
																				"nativeSrc": "10376:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10376:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10366:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "10366:2:18"
																		},
																		"nativeSrc": "10366:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10366:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10359:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10359:6:18"
																},
																"nativeSrc": "10359:40:18",
																"nodeType": "YulFunctionCall",
																"src": "10359:40:18"
															},
															"nativeSrc": "10356:60:18",
															"nodeType": "YulIf",
															"src": "10356:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10306:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10339:5:18",
														"nodeType": "YulTypedName",
														"src": "10339:5:18",
														"type": ""
													}
												],
												"src": "10306:116:18"
											},
											{
												"body": {
													"nativeSrc": "10477:84:18",
													"nodeType": "YulBlock",
													"src": "10477:84:18",
													"statements": [
														{
															"nativeSrc": "10487:29:18",
															"nodeType": "YulAssignment",
															"src": "10487:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10509:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10509:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10496:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10496:12:18"
																},
																"nativeSrc": "10496:20:18",
																"nodeType": "YulFunctionCall",
																"src": "10496:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10487:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10487:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10549:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10549:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10525:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "10525:23:18"
																},
																"nativeSrc": "10525:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10525:30:18"
															},
															"nativeSrc": "10525:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10525:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "10428:133:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10455:6:18",
														"nodeType": "YulTypedName",
														"src": "10455:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10463:3:18",
														"nodeType": "YulTypedName",
														"src": "10463:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10471:5:18",
														"nodeType": "YulTypedName",
														"src": "10471:5:18",
														"type": ""
													}
												],
												"src": "10428:133:18"
											},
											{
												"body": {
													"nativeSrc": "10647:388:18",
													"nodeType": "YulBlock",
													"src": "10647:388:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10693:83:18",
																"nodeType": "YulBlock",
																"src": "10693:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10695:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10695:77:18"
																			},
																			"nativeSrc": "10695:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10695:79:18"
																		},
																		"nativeSrc": "10695:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10695:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10668:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10668:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10677:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10677:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10664:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10664:3:18"
																		},
																		"nativeSrc": "10664:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10664:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10689:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10689:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10660:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10660:3:18"
																},
																"nativeSrc": "10660:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10660:32:18"
															},
															"nativeSrc": "10657:119:18",
															"nodeType": "YulIf",
															"src": "10657:119:18"
														},
														{
															"nativeSrc": "10786:117:18",
															"nodeType": "YulBlock",
															"src": "10786:117:18",
															"statements": [
																{
																	"nativeSrc": "10801:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10801:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10815:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10815:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10805:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10805:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10830:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10830:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10865:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10865:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10876:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10876:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10861:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10861:3:18"
																				},
																				"nativeSrc": "10861:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10861:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10885:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10885:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10840:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10840:20:18"
																		},
																		"nativeSrc": "10840:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10840:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10830:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10830:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10913:115:18",
															"nodeType": "YulBlock",
															"src": "10913:115:18",
															"statements": [
																{
																	"nativeSrc": "10928:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10928:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10942:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10942:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10932:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10932:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10958:60:18",
																	"nodeType": "YulAssignment",
																	"src": "10958:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10990:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10990:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11001:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11001:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10986:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10986:3:18"
																				},
																				"nativeSrc": "10986:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10986:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11010:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11010:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "10968:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "10968:17:18"
																		},
																		"nativeSrc": "10968:50:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10968:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10958:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10958:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "10567:468:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10609:9:18",
														"nodeType": "YulTypedName",
														"src": "10609:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10620:7:18",
														"nodeType": "YulTypedName",
														"src": "10620:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10632:6:18",
														"nodeType": "YulTypedName",
														"src": "10632:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10640:6:18",
														"nodeType": "YulTypedName",
														"src": "10640:6:18",
														"type": ""
													}
												],
												"src": "10567:468:18"
											},
											{
												"body": {
													"nativeSrc": "11107:241:18",
													"nodeType": "YulBlock",
													"src": "11107:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11212:22:18",
																"nodeType": "YulBlock",
																"src": "11212:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11214:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11214:16:18"
																			},
																			"nativeSrc": "11214:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11214:18:18"
																		},
																		"nativeSrc": "11214:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11214:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11184:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11184:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11192:18:18",
																		"nodeType": "YulLiteral",
																		"src": "11192:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11181:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11181:2:18"
																},
																"nativeSrc": "11181:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11181:30:18"
															},
															"nativeSrc": "11178:56:18",
															"nodeType": "YulIf",
															"src": "11178:56:18"
														},
														{
															"nativeSrc": "11244:37:18",
															"nodeType": "YulAssignment",
															"src": "11244:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11274:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11274:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "11252:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "11252:21:18"
																},
																"nativeSrc": "11252:29:18",
																"nodeType": "YulFunctionCall",
																"src": "11252:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11244:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11244:4:18"
																}
															]
														},
														{
															"nativeSrc": "11318:23:18",
															"nodeType": "YulAssignment",
															"src": "11318:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11330:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11330:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11336:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11336:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11326:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11326:3:18"
																},
																"nativeSrc": "11326:15:18",
																"nodeType": "YulFunctionCall",
																"src": "11326:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11318:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11318:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "11041:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11091:6:18",
														"nodeType": "YulTypedName",
														"src": "11091:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11102:4:18",
														"nodeType": "YulTypedName",
														"src": "11102:4:18",
														"type": ""
													}
												],
												"src": "11041:307:18"
											},
											{
												"body": {
													"nativeSrc": "11437:340:18",
													"nodeType": "YulBlock",
													"src": "11437:340:18",
													"statements": [
														{
															"nativeSrc": "11447:74:18",
															"nodeType": "YulAssignment",
															"src": "11447:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11513:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11513:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "11472:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "11472:40:18"
																		},
																		"nativeSrc": "11472:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11472:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11456:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "11456:15:18"
																},
																"nativeSrc": "11456:65:18",
																"nodeType": "YulFunctionCall",
																"src": "11456:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11447:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11447:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11537:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11537:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11544:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11530:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11530:6:18"
																},
																"nativeSrc": "11530:21:18",
																"nodeType": "YulFunctionCall",
																"src": "11530:21:18"
															},
															"nativeSrc": "11530:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "11530:21:18"
														},
														{
															"nativeSrc": "11560:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11560:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11575:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11575:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11582:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11582:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11571:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11571:3:18"
																},
																"nativeSrc": "11571:16:18",
																"nodeType": "YulFunctionCall",
																"src": "11571:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11564:3:18",
																	"nodeType": "YulTypedName",
																	"src": "11564:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11625:83:18",
																"nodeType": "YulBlock",
																"src": "11625:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11627:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "11627:77:18"
																			},
																			"nativeSrc": "11627:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11627:79:18"
																		},
																		"nativeSrc": "11627:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11627:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11606:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11606:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11611:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11611:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11602:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11602:3:18"
																		},
																		"nativeSrc": "11602:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11602:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11620:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11620:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11599:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11599:2:18"
																},
																"nativeSrc": "11599:25:18",
																"nodeType": "YulFunctionCall",
																"src": "11599:25:18"
															},
															"nativeSrc": "11596:112:18",
															"nodeType": "YulIf",
															"src": "11596:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11754:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11754:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11759:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11759:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11764:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11764:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11717:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "11717:36:18"
																},
																"nativeSrc": "11717:54:18",
																"nodeType": "YulFunctionCall",
																"src": "11717:54:18"
															},
															"nativeSrc": "11717:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "11717:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "11354:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11410:3:18",
														"nodeType": "YulTypedName",
														"src": "11410:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11415:6:18",
														"nodeType": "YulTypedName",
														"src": "11415:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11423:3:18",
														"nodeType": "YulTypedName",
														"src": "11423:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11431:5:18",
														"nodeType": "YulTypedName",
														"src": "11431:5:18",
														"type": ""
													}
												],
												"src": "11354:423:18"
											},
											{
												"body": {
													"nativeSrc": "11857:277:18",
													"nodeType": "YulBlock",
													"src": "11857:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11906:83:18",
																"nodeType": "YulBlock",
																"src": "11906:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11908:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "11908:77:18"
																			},
																			"nativeSrc": "11908:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11908:79:18"
																		},
																		"nativeSrc": "11908:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11908:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11885:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11885:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11893:4:18",
																						"nodeType": "YulLiteral",
																						"src": "11893:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11881:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11881:3:18"
																				},
																				"nativeSrc": "11881:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11881:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11900:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11900:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11877:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11877:3:18"
																		},
																		"nativeSrc": "11877:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11877:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11870:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11870:6:18"
																},
																"nativeSrc": "11870:35:18",
																"nodeType": "YulFunctionCall",
																"src": "11870:35:18"
															},
															"nativeSrc": "11867:122:18",
															"nodeType": "YulIf",
															"src": "11867:122:18"
														},
														{
															"nativeSrc": "11998:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11998:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12025:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12025:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12012:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "12012:12:18"
																},
																"nativeSrc": "12012:20:18",
																"nodeType": "YulFunctionCall",
																"src": "12012:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12002:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12002:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12041:87:18",
															"nodeType": "YulAssignment",
															"src": "12041:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12101:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12101:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12109:4:18",
																				"nodeType": "YulLiteral",
																				"src": "12109:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12097:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12097:3:18"
																		},
																		"nativeSrc": "12097:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12097:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12116:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12116:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12124:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12124:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "12050:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "12050:46:18"
																},
																"nativeSrc": "12050:78:18",
																"nodeType": "YulFunctionCall",
																"src": "12050:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12041:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12041:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11796:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11835:6:18",
														"nodeType": "YulTypedName",
														"src": "11835:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11843:3:18",
														"nodeType": "YulTypedName",
														"src": "11843:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11851:5:18",
														"nodeType": "YulTypedName",
														"src": "11851:5:18",
														"type": ""
													}
												],
												"src": "11796:338:18"
											},
											{
												"body": {
													"nativeSrc": "12266:817:18",
													"nodeType": "YulBlock",
													"src": "12266:817:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12313:83:18",
																"nodeType": "YulBlock",
																"src": "12313:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12315:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12315:77:18"
																			},
																			"nativeSrc": "12315:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12315:79:18"
																		},
																		"nativeSrc": "12315:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12315:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12287:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12287:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12296:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12296:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12283:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12283:3:18"
																		},
																		"nativeSrc": "12283:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12283:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12308:3:18",
																		"nodeType": "YulLiteral",
																		"src": "12308:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12279:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12279:3:18"
																},
																"nativeSrc": "12279:33:18",
																"nodeType": "YulFunctionCall",
																"src": "12279:33:18"
															},
															"nativeSrc": "12276:120:18",
															"nodeType": "YulIf",
															"src": "12276:120:18"
														},
														{
															"nativeSrc": "12406:117:18",
															"nodeType": "YulBlock",
															"src": "12406:117:18",
															"statements": [
																{
																	"nativeSrc": "12421:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12421:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12435:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12435:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12425:6:18",
																			"nodeType": "YulTypedName",
																			"src": "12425:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12450:63:18",
																	"nodeType": "YulAssignment",
																	"src": "12450:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12485:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12485:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12496:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12496:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12481:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12481:3:18"
																				},
																				"nativeSrc": "12481:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12481:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12505:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12505:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12460:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "12460:20:18"
																		},
																		"nativeSrc": "12460:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12460:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12450:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12450:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12533:118:18",
															"nodeType": "YulBlock",
															"src": "12533:118:18",
															"statements": [
																{
																	"nativeSrc": "12548:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12548:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12562:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12562:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12552:6:18",
																			"nodeType": "YulTypedName",
																			"src": "12552:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12578:63:18",
																	"nodeType": "YulAssignment",
																	"src": "12578:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12613:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12613:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12624:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12624:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12609:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12609:3:18"
																				},
																				"nativeSrc": "12609:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12609:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12633:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12633:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12588:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "12588:20:18"
																		},
																		"nativeSrc": "12588:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12588:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12578:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12578:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12661:118:18",
															"nodeType": "YulBlock",
															"src": "12661:118:18",
															"statements": [
																{
																	"nativeSrc": "12676:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12676:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12690:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12690:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12680:6:18",
																			"nodeType": "YulTypedName",
																			"src": "12680:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12706:63:18",
																	"nodeType": "YulAssignment",
																	"src": "12706:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12741:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12741:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12752:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12752:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12737:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12737:3:18"
																				},
																				"nativeSrc": "12737:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12737:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12761:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12761:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12716:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "12716:20:18"
																		},
																		"nativeSrc": "12716:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12716:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12706:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12706:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12789:287:18",
															"nodeType": "YulBlock",
															"src": "12789:287:18",
															"statements": [
																{
																	"nativeSrc": "12804:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12804:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12835:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12835:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12846:2:18",
																						"nodeType": "YulLiteral",
																						"src": "12846:2:18",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12831:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12831:3:18"
																				},
																				"nativeSrc": "12831:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12831:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12818:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "12818:12:18"
																		},
																		"nativeSrc": "12818:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12818:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12808:6:18",
																			"nodeType": "YulTypedName",
																			"src": "12808:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12897:83:18",
																		"nodeType": "YulBlock",
																		"src": "12897:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12899:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "12899:77:18"
																					},
																					"nativeSrc": "12899:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12899:79:18"
																				},
																				"nativeSrc": "12899:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "12899:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12869:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12869:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12877:18:18",
																				"nodeType": "YulLiteral",
																				"src": "12877:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12866:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "12866:2:18"
																		},
																		"nativeSrc": "12866:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12866:30:18"
																	},
																	"nativeSrc": "12863:117:18",
																	"nodeType": "YulIf",
																	"src": "12863:117:18"
																},
																{
																	"nativeSrc": "12994:72:18",
																	"nodeType": "YulAssignment",
																	"src": "12994:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13038:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13038:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13049:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13049:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13034:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13034:3:18"
																				},
																				"nativeSrc": "13034:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13034:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13058:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13058:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "13004:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "13004:29:18"
																		},
																		"nativeSrc": "13004:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13004:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12994:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12994:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "12140:943:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12212:9:18",
														"nodeType": "YulTypedName",
														"src": "12212:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12223:7:18",
														"nodeType": "YulTypedName",
														"src": "12223:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12235:6:18",
														"nodeType": "YulTypedName",
														"src": "12235:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12243:6:18",
														"nodeType": "YulTypedName",
														"src": "12243:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12251:6:18",
														"nodeType": "YulTypedName",
														"src": "12251:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12259:6:18",
														"nodeType": "YulTypedName",
														"src": "12259:6:18",
														"type": ""
													}
												],
												"src": "12140:943:18"
											},
											{
												"body": {
													"nativeSrc": "13172:391:18",
													"nodeType": "YulBlock",
													"src": "13172:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13218:83:18",
																"nodeType": "YulBlock",
																"src": "13218:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13220:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "13220:77:18"
																			},
																			"nativeSrc": "13220:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13220:79:18"
																		},
																		"nativeSrc": "13220:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13220:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13193:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13193:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13202:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13202:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13189:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:18"
																		},
																		"nativeSrc": "13189:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13214:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13214:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13185:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13185:3:18"
																},
																"nativeSrc": "13185:32:18",
																"nodeType": "YulFunctionCall",
																"src": "13185:32:18"
															},
															"nativeSrc": "13182:119:18",
															"nodeType": "YulIf",
															"src": "13182:119:18"
														},
														{
															"nativeSrc": "13311:117:18",
															"nodeType": "YulBlock",
															"src": "13311:117:18",
															"statements": [
																{
																	"nativeSrc": "13326:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13326:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13340:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13340:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13330:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13330:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13355:63:18",
																	"nodeType": "YulAssignment",
																	"src": "13355:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13390:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13390:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13401:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13401:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13386:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13386:3:18"
																				},
																				"nativeSrc": "13386:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13386:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13410:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13410:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13365:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "13365:20:18"
																		},
																		"nativeSrc": "13365:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13365:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13355:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13355:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13438:118:18",
															"nodeType": "YulBlock",
															"src": "13438:118:18",
															"statements": [
																{
																	"nativeSrc": "13453:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13453:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13467:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13467:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13457:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13457:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13483:63:18",
																	"nodeType": "YulAssignment",
																	"src": "13483:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13518:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13518:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13529:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13529:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13514:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13514:3:18"
																				},
																				"nativeSrc": "13514:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13514:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13538:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13538:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13493:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "13493:20:18"
																		},
																		"nativeSrc": "13493:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13493:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13483:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13483:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13089:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13134:9:18",
														"nodeType": "YulTypedName",
														"src": "13134:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13145:7:18",
														"nodeType": "YulTypedName",
														"src": "13145:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13157:6:18",
														"nodeType": "YulTypedName",
														"src": "13157:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13165:6:18",
														"nodeType": "YulTypedName",
														"src": "13165:6:18",
														"type": ""
													}
												],
												"src": "13089:474:18"
											},
											{
												"body": {
													"nativeSrc": "13597:152:18",
													"nodeType": "YulBlock",
													"src": "13597:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13614:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13614:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13617:77:18",
																		"nodeType": "YulLiteral",
																		"src": "13617:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13607:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13607:6:18"
																},
																"nativeSrc": "13607:88:18",
																"nodeType": "YulFunctionCall",
																"src": "13607:88:18"
															},
															"nativeSrc": "13607:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "13607:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13711:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13711:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13714:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13714:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13704:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13704:6:18"
																},
																"nativeSrc": "13704:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13704:15:18"
															},
															"nativeSrc": "13704:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13704:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13735:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13735:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13738:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13738:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13728:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13728:6:18"
																},
																"nativeSrc": "13728:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13728:15:18"
															},
															"nativeSrc": "13728:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13728:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13569:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "13569:180:18"
											},
											{
												"body": {
													"nativeSrc": "13806:269:18",
													"nodeType": "YulBlock",
													"src": "13806:269:18",
													"statements": [
														{
															"nativeSrc": "13816:22:18",
															"nodeType": "YulAssignment",
															"src": "13816:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13830:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "13830:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13836:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13836:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13826:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13826:3:18"
																},
																"nativeSrc": "13826:12:18",
																"nodeType": "YulFunctionCall",
																"src": "13826:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13816:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13816:6:18"
																}
															]
														},
														{
															"nativeSrc": "13847:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13847:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13877:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "13877:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13883:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13883:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13873:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13873:3:18"
																},
																"nativeSrc": "13873:12:18",
																"nodeType": "YulFunctionCall",
																"src": "13873:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13851:18:18",
																	"nodeType": "YulTypedName",
																	"src": "13851:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13924:51:18",
																"nodeType": "YulBlock",
																"src": "13924:51:18",
																"statements": [
																	{
																		"nativeSrc": "13938:27:18",
																		"nodeType": "YulAssignment",
																		"src": "13938:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13952:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "13952:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13960:4:18",
																					"nodeType": "YulLiteral",
																					"src": "13960:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13948:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13948:3:18"
																			},
																			"nativeSrc": "13948:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13948:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13938:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13938:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13904:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "13904:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13897:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13897:6:18"
																},
																"nativeSrc": "13897:26:18",
																"nodeType": "YulFunctionCall",
																"src": "13897:26:18"
															},
															"nativeSrc": "13894:81:18",
															"nodeType": "YulIf",
															"src": "13894:81:18"
														},
														{
															"body": {
																"nativeSrc": "14027:42:18",
																"nodeType": "YulBlock",
																"src": "14027:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14041:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "14041:16:18"
																			},
																			"nativeSrc": "14041:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14041:18:18"
																		},
																		"nativeSrc": "14041:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14041:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13991:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "13991:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14014:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14014:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14022:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14022:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14011:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "14011:2:18"
																		},
																		"nativeSrc": "14011:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14011:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13988:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "13988:2:18"
																},
																"nativeSrc": "13988:38:18",
																"nodeType": "YulFunctionCall",
																"src": "13988:38:18"
															},
															"nativeSrc": "13985:84:18",
															"nodeType": "YulIf",
															"src": "13985:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13755:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13790:4:18",
														"nodeType": "YulTypedName",
														"src": "13790:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13799:6:18",
														"nodeType": "YulTypedName",
														"src": "13799:6:18",
														"type": ""
													}
												],
												"src": "13755:320:18"
											},
											{
												"body": {
													"nativeSrc": "14235:288:18",
													"nodeType": "YulBlock",
													"src": "14235:288:18",
													"statements": [
														{
															"nativeSrc": "14245:26:18",
															"nodeType": "YulAssignment",
															"src": "14245:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14257:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14257:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14268:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14268:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14253:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14253:3:18"
																},
																"nativeSrc": "14253:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14253:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14245:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14245:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14325:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14325:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14338:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14338:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14349:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14349:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14334:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14334:3:18"
																		},
																		"nativeSrc": "14334:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14334:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14281:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14281:43:18"
																},
																"nativeSrc": "14281:71:18",
																"nodeType": "YulFunctionCall",
																"src": "14281:71:18"
															},
															"nativeSrc": "14281:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "14281:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14406:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14406:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14419:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14419:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14430:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14430:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14415:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14415:3:18"
																		},
																		"nativeSrc": "14415:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14415:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14362:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14362:43:18"
																},
																"nativeSrc": "14362:72:18",
																"nodeType": "YulFunctionCall",
																"src": "14362:72:18"
															},
															"nativeSrc": "14362:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "14362:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14488:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14488:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14501:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14501:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14512:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14512:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14497:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14497:3:18"
																		},
																		"nativeSrc": "14497:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14497:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14444:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14444:43:18"
																},
																"nativeSrc": "14444:72:18",
																"nodeType": "YulFunctionCall",
																"src": "14444:72:18"
															},
															"nativeSrc": "14444:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "14444:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "14081:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14191:9:18",
														"nodeType": "YulTypedName",
														"src": "14191:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14203:6:18",
														"nodeType": "YulTypedName",
														"src": "14203:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14211:6:18",
														"nodeType": "YulTypedName",
														"src": "14211:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14219:6:18",
														"nodeType": "YulTypedName",
														"src": "14219:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14230:4:18",
														"nodeType": "YulTypedName",
														"src": "14230:4:18",
														"type": ""
													}
												],
												"src": "14081:442:18"
											},
											{
												"body": {
													"nativeSrc": "14557:152:18",
													"nodeType": "YulBlock",
													"src": "14557:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14574:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14574:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14577:77:18",
																		"nodeType": "YulLiteral",
																		"src": "14577:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14567:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14567:6:18"
																},
																"nativeSrc": "14567:88:18",
																"nodeType": "YulFunctionCall",
																"src": "14567:88:18"
															},
															"nativeSrc": "14567:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "14567:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14671:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14671:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14674:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14674:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14664:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14664:6:18"
																},
																"nativeSrc": "14664:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14664:15:18"
															},
															"nativeSrc": "14664:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14664:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14695:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14695:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14698:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14698:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14688:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14688:6:18"
																},
																"nativeSrc": "14688:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14688:15:18"
															},
															"nativeSrc": "14688:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14688:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14529:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "14529:180:18"
											},
											{
												"body": {
													"nativeSrc": "14763:362:18",
													"nodeType": "YulBlock",
													"src": "14763:362:18",
													"statements": [
														{
															"nativeSrc": "14773:25:18",
															"nodeType": "YulAssignment",
															"src": "14773:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14796:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "14796:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14778:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "14778:17:18"
																},
																"nativeSrc": "14778:20:18",
																"nodeType": "YulFunctionCall",
																"src": "14778:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14773:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "14773:1:18"
																}
															]
														},
														{
															"nativeSrc": "14807:25:18",
															"nodeType": "YulAssignment",
															"src": "14807:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14830:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "14830:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14812:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "14812:17:18"
																},
																"nativeSrc": "14812:20:18",
																"nodeType": "YulFunctionCall",
																"src": "14812:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14807:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "14807:1:18"
																}
															]
														},
														{
															"nativeSrc": "14841:28:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14841:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14864:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "14864:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14867:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "14867:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14860:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14860:3:18"
																},
																"nativeSrc": "14860:9:18",
																"nodeType": "YulFunctionCall",
																"src": "14860:9:18"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14845:11:18",
																	"nodeType": "YulTypedName",
																	"src": "14845:11:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14878:41:18",
															"nodeType": "YulAssignment",
															"src": "14878:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14907:11:18",
																		"nodeType": "YulIdentifier",
																		"src": "14907:11:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14889:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "14889:17:18"
																},
																"nativeSrc": "14889:30:18",
																"nodeType": "YulFunctionCall",
																"src": "14889:30:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14878:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "14878:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15096:22:18",
																"nodeType": "YulBlock",
																"src": "15096:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15098:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "15098:16:18"
																			},
																			"nativeSrc": "15098:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15098:18:18"
																		},
																		"nativeSrc": "15098:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15098:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15029:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "15029:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15022:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "15022:6:18"
																				},
																				"nativeSrc": "15022:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15022:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15052:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "15052:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15059:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "15059:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15068:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "15068:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15055:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "15055:3:18"
																						},
																						"nativeSrc": "15055:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "15055:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15049:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "15049:2:18"
																				},
																				"nativeSrc": "15049:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15049:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15002:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "15002:2:18"
																		},
																		"nativeSrc": "15002:83:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15002:83:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14982:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14982:6:18"
																},
																"nativeSrc": "14982:113:18",
																"nodeType": "YulFunctionCall",
																"src": "14982:113:18"
															},
															"nativeSrc": "14979:139:18",
															"nodeType": "YulIf",
															"src": "14979:139:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14715:410:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14746:1:18",
														"nodeType": "YulTypedName",
														"src": "14746:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14749:1:18",
														"nodeType": "YulTypedName",
														"src": "14749:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14755:7:18",
														"nodeType": "YulTypedName",
														"src": "14755:7:18",
														"type": ""
													}
												],
												"src": "14715:410:18"
											},
											{
												"body": {
													"nativeSrc": "15159:152:18",
													"nodeType": "YulBlock",
													"src": "15159:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15176:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15176:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15179:77:18",
																		"nodeType": "YulLiteral",
																		"src": "15179:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15169:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15169:6:18"
																},
																"nativeSrc": "15169:88:18",
																"nodeType": "YulFunctionCall",
																"src": "15169:88:18"
															},
															"nativeSrc": "15169:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "15169:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15273:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15273:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15276:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15276:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15266:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15266:6:18"
																},
																"nativeSrc": "15266:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15266:15:18"
															},
															"nativeSrc": "15266:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15266:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15297:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15297:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15300:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15300:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15290:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15290:6:18"
																},
																"nativeSrc": "15290:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15290:15:18"
															},
															"nativeSrc": "15290:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15290:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15131:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "15131:180:18"
											},
											{
												"body": {
													"nativeSrc": "15359:143:18",
													"nodeType": "YulBlock",
													"src": "15359:143:18",
													"statements": [
														{
															"nativeSrc": "15369:25:18",
															"nodeType": "YulAssignment",
															"src": "15369:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15392:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15392:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15374:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "15374:17:18"
																},
																"nativeSrc": "15374:20:18",
																"nodeType": "YulFunctionCall",
																"src": "15374:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15369:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "15369:1:18"
																}
															]
														},
														{
															"nativeSrc": "15403:25:18",
															"nodeType": "YulAssignment",
															"src": "15403:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15426:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15426:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15408:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "15408:17:18"
																},
																"nativeSrc": "15408:20:18",
																"nodeType": "YulFunctionCall",
																"src": "15408:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15403:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "15403:1:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15450:22:18",
																"nodeType": "YulBlock",
																"src": "15450:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15452:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "15452:16:18"
																			},
																			"nativeSrc": "15452:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15452:18:18"
																		},
																		"nativeSrc": "15452:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15452:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15447:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15447:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15440:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15440:6:18"
																},
																"nativeSrc": "15440:9:18",
																"nodeType": "YulFunctionCall",
																"src": "15440:9:18"
															},
															"nativeSrc": "15437:35:18",
															"nodeType": "YulIf",
															"src": "15437:35:18"
														},
														{
															"nativeSrc": "15482:14:18",
															"nodeType": "YulAssignment",
															"src": "15482:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15491:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15491:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15494:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15494:1:18"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15487:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15487:3:18"
																},
																"nativeSrc": "15487:9:18",
																"nodeType": "YulFunctionCall",
																"src": "15487:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15482:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "15482:1:18"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15317:185:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15348:1:18",
														"nodeType": "YulTypedName",
														"src": "15348:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15351:1:18",
														"nodeType": "YulTypedName",
														"src": "15351:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15357:1:18",
														"nodeType": "YulTypedName",
														"src": "15357:1:18",
														"type": ""
													}
												],
												"src": "15317:185:18"
											},
											{
												"body": {
													"nativeSrc": "15562:87:18",
													"nodeType": "YulBlock",
													"src": "15562:87:18",
													"statements": [
														{
															"nativeSrc": "15572:11:18",
															"nodeType": "YulAssignment",
															"src": "15572:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "15580:3:18",
																"nodeType": "YulIdentifier",
																"src": "15580:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15572:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15572:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15600:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15600:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15603:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15603:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:18"
																},
																"nativeSrc": "15593:14:18",
																"nodeType": "YulFunctionCall",
																"src": "15593:14:18"
															},
															"nativeSrc": "15593:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "15593:14:18"
														},
														{
															"nativeSrc": "15616:26:18",
															"nodeType": "YulAssignment",
															"src": "15616:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15634:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15634:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15637:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15637:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15624:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "15624:9:18"
																},
																"nativeSrc": "15624:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15624:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15616:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15616:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "15508:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15549:3:18",
														"nodeType": "YulTypedName",
														"src": "15549:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15557:4:18",
														"nodeType": "YulTypedName",
														"src": "15557:4:18",
														"type": ""
													}
												],
												"src": "15508:141:18"
											},
											{
												"body": {
													"nativeSrc": "15699:49:18",
													"nodeType": "YulBlock",
													"src": "15699:49:18",
													"statements": [
														{
															"nativeSrc": "15709:33:18",
															"nodeType": "YulAssignment",
															"src": "15709:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15727:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "15727:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15734:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15734:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15723:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15723:3:18"
																		},
																		"nativeSrc": "15723:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15723:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15739:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15739:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15719:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15719:3:18"
																},
																"nativeSrc": "15719:23:18",
																"nodeType": "YulFunctionCall",
																"src": "15719:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15709:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15709:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15655:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15682:5:18",
														"nodeType": "YulTypedName",
														"src": "15682:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15692:6:18",
														"nodeType": "YulTypedName",
														"src": "15692:6:18",
														"type": ""
													}
												],
												"src": "15655:93:18"
											},
											{
												"body": {
													"nativeSrc": "15807:54:18",
													"nodeType": "YulBlock",
													"src": "15807:54:18",
													"statements": [
														{
															"nativeSrc": "15817:37:18",
															"nodeType": "YulAssignment",
															"src": "15817:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15842:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15848:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "15848:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15838:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15838:3:18"
																},
																"nativeSrc": "15838:16:18",
																"nodeType": "YulFunctionCall",
																"src": "15838:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15817:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "15817:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15754:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15782:4:18",
														"nodeType": "YulTypedName",
														"src": "15782:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15788:5:18",
														"nodeType": "YulTypedName",
														"src": "15788:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15798:8:18",
														"nodeType": "YulTypedName",
														"src": "15798:8:18",
														"type": ""
													}
												],
												"src": "15754:107:18"
											},
											{
												"body": {
													"nativeSrc": "15943:317:18",
													"nodeType": "YulBlock",
													"src": "15943:317:18",
													"statements": [
														{
															"nativeSrc": "15953:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15953:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "15974:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "15974:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15986:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15986:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15970:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15970:3:18"
																},
																"nativeSrc": "15970:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15970:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15957:9:18",
																	"nodeType": "YulTypedName",
																	"src": "15957:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15997:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15997:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16028:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16028:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16039:66:18",
																		"nodeType": "YulLiteral",
																		"src": "16039:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16009:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "16009:18:18"
																},
																"nativeSrc": "16009:97:18",
																"nodeType": "YulFunctionCall",
																"src": "16009:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16001:4:18",
																	"nodeType": "YulTypedName",
																	"src": "16001:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16115:51:18",
															"nodeType": "YulAssignment",
															"src": "16115:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16146:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16146:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16157:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "16157:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16127:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "16127:18:18"
																},
																"nativeSrc": "16127:39:18",
																"nodeType": "YulFunctionCall",
																"src": "16127:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16115:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "16115:8:18"
																}
															]
														},
														{
															"nativeSrc": "16175:30:18",
															"nodeType": "YulAssignment",
															"src": "16175:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16188:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "16188:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16199:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "16199:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16195:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16195:3:18"
																		},
																		"nativeSrc": "16195:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16195:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16184:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16184:3:18"
																},
																"nativeSrc": "16184:21:18",
																"nodeType": "YulFunctionCall",
																"src": "16184:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16175:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "16175:5:18"
																}
															]
														},
														{
															"nativeSrc": "16214:40:18",
															"nodeType": "YulAssignment",
															"src": "16214:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16227:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "16227:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16238:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "16238:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16248:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "16248:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16234:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16234:3:18"
																		},
																		"nativeSrc": "16234:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16234:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16224:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "16224:2:18"
																},
																"nativeSrc": "16224:30:18",
																"nodeType": "YulFunctionCall",
																"src": "16224:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16214:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16214:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15867:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15904:5:18",
														"nodeType": "YulTypedName",
														"src": "15904:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15911:10:18",
														"nodeType": "YulTypedName",
														"src": "15911:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15923:8:18",
														"nodeType": "YulTypedName",
														"src": "15923:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15936:6:18",
														"nodeType": "YulTypedName",
														"src": "15936:6:18",
														"type": ""
													}
												],
												"src": "15867:393:18"
											},
											{
												"body": {
													"nativeSrc": "16298:28:18",
													"nodeType": "YulBlock",
													"src": "16298:28:18",
													"statements": [
														{
															"nativeSrc": "16308:12:18",
															"nodeType": "YulAssignment",
															"src": "16308:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "16315:5:18",
																"nodeType": "YulIdentifier",
																"src": "16315:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16308:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16308:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16266:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16284:5:18",
														"nodeType": "YulTypedName",
														"src": "16284:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16294:3:18",
														"nodeType": "YulTypedName",
														"src": "16294:3:18",
														"type": ""
													}
												],
												"src": "16266:60:18"
											},
											{
												"body": {
													"nativeSrc": "16392:82:18",
													"nodeType": "YulBlock",
													"src": "16392:82:18",
													"statements": [
														{
															"nativeSrc": "16402:66:18",
															"nodeType": "YulAssignment",
															"src": "16402:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16460:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "16460:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16442:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "16442:17:18"
																				},
																				"nativeSrc": "16442:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16442:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16433:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "16433:8:18"
																		},
																		"nativeSrc": "16433:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16433:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16415:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "16415:17:18"
																},
																"nativeSrc": "16415:53:18",
																"nodeType": "YulFunctionCall",
																"src": "16415:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16402:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "16402:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16332:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16372:5:18",
														"nodeType": "YulTypedName",
														"src": "16372:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16382:9:18",
														"nodeType": "YulTypedName",
														"src": "16382:9:18",
														"type": ""
													}
												],
												"src": "16332:142:18"
											},
											{
												"body": {
													"nativeSrc": "16527:28:18",
													"nodeType": "YulBlock",
													"src": "16527:28:18",
													"statements": [
														{
															"nativeSrc": "16537:12:18",
															"nodeType": "YulAssignment",
															"src": "16537:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "16544:5:18",
																"nodeType": "YulIdentifier",
																"src": "16544:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16537:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16537:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "16480:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16513:5:18",
														"nodeType": "YulTypedName",
														"src": "16513:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16523:3:18",
														"nodeType": "YulTypedName",
														"src": "16523:3:18",
														"type": ""
													}
												],
												"src": "16480:75:18"
											},
											{
												"body": {
													"nativeSrc": "16637:193:18",
													"nodeType": "YulBlock",
													"src": "16637:193:18",
													"statements": [
														{
															"nativeSrc": "16647:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16647:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "16702:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "16702:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "16671:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "16671:30:18"
																},
																"nativeSrc": "16671:39:18",
																"nodeType": "YulFunctionCall",
																"src": "16671:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16651:16:18",
																	"nodeType": "YulTypedName",
																	"src": "16651:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16726:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16726:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16766:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "16766:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16760:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "16760:5:18"
																				},
																				"nativeSrc": "16760:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16760:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16773:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16773:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "16805:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "16805:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "16781:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "16781:23:18"
																				},
																				"nativeSrc": "16781:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16781:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "16732:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "16732:27:18"
																		},
																		"nativeSrc": "16732:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16732:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16719:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16719:6:18"
																},
																"nativeSrc": "16719:105:18",
																"nodeType": "YulFunctionCall",
																"src": "16719:105:18"
															},
															"nativeSrc": "16719:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "16719:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "16561:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16614:4:18",
														"nodeType": "YulTypedName",
														"src": "16614:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16620:6:18",
														"nodeType": "YulTypedName",
														"src": "16620:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16628:7:18",
														"nodeType": "YulTypedName",
														"src": "16628:7:18",
														"type": ""
													}
												],
												"src": "16561:269:18"
											},
											{
												"body": {
													"nativeSrc": "16885:24:18",
													"nodeType": "YulBlock",
													"src": "16885:24:18",
													"statements": [
														{
															"nativeSrc": "16895:8:18",
															"nodeType": "YulAssignment",
															"src": "16895:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "16902:1:18",
																"nodeType": "YulLiteral",
																"src": "16902:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16895:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16895:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16836:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16881:3:18",
														"nodeType": "YulTypedName",
														"src": "16881:3:18",
														"type": ""
													}
												],
												"src": "16836:73:18"
											},
											{
												"body": {
													"nativeSrc": "16968:136:18",
													"nodeType": "YulBlock",
													"src": "16968:136:18",
													"statements": [
														{
															"nativeSrc": "16978:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16978:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "16992:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "16992:30:18"
																},
																"nativeSrc": "16992:32:18",
																"nodeType": "YulFunctionCall",
																"src": "16992:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "16982:6:18",
																	"nodeType": "YulTypedName",
																	"src": "16982:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17077:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17077:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17083:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17083:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17091:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17091:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17033:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "17033:43:18"
																},
																"nativeSrc": "17033:65:18",
																"nodeType": "YulFunctionCall",
																"src": "17033:65:18"
															},
															"nativeSrc": "17033:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "17033:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16915:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16954:4:18",
														"nodeType": "YulTypedName",
														"src": "16954:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16960:6:18",
														"nodeType": "YulTypedName",
														"src": "16960:6:18",
														"type": ""
													}
												],
												"src": "16915:189:18"
											},
											{
												"body": {
													"nativeSrc": "17160:136:18",
													"nodeType": "YulBlock",
													"src": "17160:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "17227:63:18",
																"nodeType": "YulBlock",
																"src": "17227:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17271:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "17271:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17278:1:18",
																					"nodeType": "YulLiteral",
																					"src": "17278:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17241:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "17241:29:18"
																			},
																			"nativeSrc": "17241:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17241:39:18"
																		},
																		"nativeSrc": "17241:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17241:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17180:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17180:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17187:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17187:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17177:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "17177:2:18"
																},
																"nativeSrc": "17177:14:18",
																"nodeType": "YulFunctionCall",
																"src": "17177:14:18"
															},
															"nativeSrc": "17170:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17192:26:18",
																"nodeType": "YulBlock",
																"src": "17192:26:18",
																"statements": [
																	{
																		"nativeSrc": "17194:22:18",
																		"nodeType": "YulAssignment",
																		"src": "17194:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17207:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "17207:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17214:1:18",
																					"nodeType": "YulLiteral",
																					"src": "17214:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17203:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "17203:3:18"
																			},
																			"nativeSrc": "17203:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17203:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17194:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "17194:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17174:2:18",
																"nodeType": "YulBlock",
																"src": "17174:2:18",
																"statements": []
															},
															"src": "17170:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17110:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17148:5:18",
														"nodeType": "YulTypedName",
														"src": "17148:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17155:3:18",
														"nodeType": "YulTypedName",
														"src": "17155:3:18",
														"type": ""
													}
												],
												"src": "17110:186:18"
											},
											{
												"body": {
													"nativeSrc": "17381:464:18",
													"nodeType": "YulBlock",
													"src": "17381:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "17407:431:18",
																"nodeType": "YulBlock",
																"src": "17407:431:18",
																"statements": [
																	{
																		"nativeSrc": "17421:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17421:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17469:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "17469:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17437:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "17437:31:18"
																			},
																			"nativeSrc": "17437:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17437:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17425:8:18",
																				"nodeType": "YulTypedName",
																				"src": "17425:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17488:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17488:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "17511:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "17511:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "17539:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "17539:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "17521:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "17521:17:18"
																					},
																					"nativeSrc": "17521:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "17521:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17507:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "17507:3:18"
																			},
																			"nativeSrc": "17507:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17507:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "17492:11:18",
																				"nodeType": "YulTypedName",
																				"src": "17492:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17708:27:18",
																			"nodeType": "YulBlock",
																			"src": "17708:27:18",
																			"statements": [
																				{
																					"nativeSrc": "17710:23:18",
																					"nodeType": "YulAssignment",
																					"src": "17710:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "17725:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "17725:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "17710:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "17710:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "17692:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "17692:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17704:2:18",
																					"nodeType": "YulLiteral",
																					"src": "17704:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "17689:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "17689:2:18"
																			},
																			"nativeSrc": "17689:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17689:18:18"
																		},
																		"nativeSrc": "17686:49:18",
																		"nodeType": "YulIf",
																		"src": "17686:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "17777:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "17777:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "17794:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "17794:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17822:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "17822:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "17804:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "17804:17:18"
																							},
																							"nativeSrc": "17804:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "17804:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17790:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "17790:3:18"
																					},
																					"nativeSrc": "17790:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "17790:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "17748:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "17748:28:18"
																			},
																			"nativeSrc": "17748:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17748:80:18"
																		},
																		"nativeSrc": "17748:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17748:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17398:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17398:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17403:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17403:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17395:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "17395:2:18"
																},
																"nativeSrc": "17395:11:18",
																"nodeType": "YulFunctionCall",
																"src": "17395:11:18"
															},
															"nativeSrc": "17392:446:18",
															"nodeType": "YulIf",
															"src": "17392:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17302:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17357:5:18",
														"nodeType": "YulTypedName",
														"src": "17357:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17364:3:18",
														"nodeType": "YulTypedName",
														"src": "17364:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17369:10:18",
														"nodeType": "YulTypedName",
														"src": "17369:10:18",
														"type": ""
													}
												],
												"src": "17302:543:18"
											},
											{
												"body": {
													"nativeSrc": "17914:54:18",
													"nodeType": "YulBlock",
													"src": "17914:54:18",
													"statements": [
														{
															"nativeSrc": "17924:37:18",
															"nodeType": "YulAssignment",
															"src": "17924:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17949:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17949:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17955:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17955:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17945:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17945:3:18"
																},
																"nativeSrc": "17945:16:18",
																"nodeType": "YulFunctionCall",
																"src": "17945:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17924:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "17924:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17851:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17889:4:18",
														"nodeType": "YulTypedName",
														"src": "17889:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17895:5:18",
														"nodeType": "YulTypedName",
														"src": "17895:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17905:8:18",
														"nodeType": "YulTypedName",
														"src": "17905:8:18",
														"type": ""
													}
												],
												"src": "17851:117:18"
											},
											{
												"body": {
													"nativeSrc": "18025:118:18",
													"nodeType": "YulBlock",
													"src": "18025:118:18",
													"statements": [
														{
															"nativeSrc": "18035:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18035:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18084:1:18",
																						"nodeType": "YulLiteral",
																						"src": "18084:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18087:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "18087:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18080:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18080:3:18"
																				},
																				"nativeSrc": "18080:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18080:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18099:1:18",
																						"nodeType": "YulLiteral",
																						"src": "18099:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18095:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18095:3:18"
																				},
																				"nativeSrc": "18095:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18095:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18051:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "18051:28:18"
																		},
																		"nativeSrc": "18051:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18051:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18047:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18047:3:18"
																},
																"nativeSrc": "18047:56:18",
																"nodeType": "YulFunctionCall",
																"src": "18047:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18039:4:18",
																	"nodeType": "YulTypedName",
																	"src": "18039:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18112:25:18",
															"nodeType": "YulAssignment",
															"src": "18112:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18126:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18126:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18132:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18132:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18122:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18122:3:18"
																},
																"nativeSrc": "18122:15:18",
																"nodeType": "YulFunctionCall",
																"src": "18122:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18112:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18112:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "17974:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18002:4:18",
														"nodeType": "YulTypedName",
														"src": "18002:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18008:5:18",
														"nodeType": "YulTypedName",
														"src": "18008:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18018:6:18",
														"nodeType": "YulTypedName",
														"src": "18018:6:18",
														"type": ""
													}
												],
												"src": "17974:169:18"
											},
											{
												"body": {
													"nativeSrc": "18229:214:18",
													"nodeType": "YulBlock",
													"src": "18229:214:18",
													"statements": [
														{
															"nativeSrc": "18362:37:18",
															"nodeType": "YulAssignment",
															"src": "18362:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18389:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18389:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18395:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18395:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18370:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "18370:18:18"
																},
																"nativeSrc": "18370:29:18",
																"nodeType": "YulFunctionCall",
																"src": "18370:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18362:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18362:4:18"
																}
															]
														},
														{
															"nativeSrc": "18408:29:18",
															"nodeType": "YulAssignment",
															"src": "18408:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18419:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18419:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18429:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18429:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18432:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "18432:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18425:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18425:3:18"
																		},
																		"nativeSrc": "18425:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18425:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18416:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "18416:2:18"
																},
																"nativeSrc": "18416:21:18",
																"nodeType": "YulFunctionCall",
																"src": "18416:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18408:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18408:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18148:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18210:4:18",
														"nodeType": "YulTypedName",
														"src": "18210:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18216:3:18",
														"nodeType": "YulTypedName",
														"src": "18216:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18224:4:18",
														"nodeType": "YulTypedName",
														"src": "18224:4:18",
														"type": ""
													}
												],
												"src": "18148:295:18"
											},
											{
												"body": {
													"nativeSrc": "18540:1303:18",
													"nodeType": "YulBlock",
													"src": "18540:1303:18",
													"statements": [
														{
															"nativeSrc": "18551:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18551:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "18598:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18598:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18565:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "18565:32:18"
																},
																"nativeSrc": "18565:37:18",
																"nodeType": "YulFunctionCall",
																"src": "18565:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "18555:6:18",
																	"nodeType": "YulTypedName",
																	"src": "18555:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18687:22:18",
																"nodeType": "YulBlock",
																"src": "18687:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18689:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "18689:16:18"
																			},
																			"nativeSrc": "18689:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "18689:18:18"
																		},
																		"nativeSrc": "18689:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "18689:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18659:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18659:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18667:18:18",
																		"nodeType": "YulLiteral",
																		"src": "18667:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18656:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "18656:2:18"
																},
																"nativeSrc": "18656:30:18",
																"nodeType": "YulFunctionCall",
																"src": "18656:30:18"
															},
															"nativeSrc": "18653:56:18",
															"nodeType": "YulIf",
															"src": "18653:56:18"
														},
														{
															"nativeSrc": "18719:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18719:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "18765:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "18765:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "18759:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "18759:5:18"
																		},
																		"nativeSrc": "18759:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18759:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "18733:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "18733:25:18"
																},
																"nativeSrc": "18733:38:18",
																"nodeType": "YulFunctionCall",
																"src": "18733:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "18723:6:18",
																	"nodeType": "YulTypedName",
																	"src": "18723:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18864:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18864:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18870:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18870:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18878:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18878:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18818:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "18818:45:18"
																},
																"nativeSrc": "18818:67:18",
																"nodeType": "YulFunctionCall",
																"src": "18818:67:18"
															},
															"nativeSrc": "18818:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "18818:67:18"
														},
														{
															"nativeSrc": "18895:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18895:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "18912:1:18",
																"nodeType": "YulLiteral",
																"src": "18912:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18899:9:18",
																	"nodeType": "YulTypedName",
																	"src": "18899:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18923:17:18",
															"nodeType": "YulAssignment",
															"src": "18923:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "18936:4:18",
																"nodeType": "YulLiteral",
																"src": "18936:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18923:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "18923:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18987:611:18",
																		"nodeType": "YulBlock",
																		"src": "18987:611:18",
																		"statements": [
																			{
																				"nativeSrc": "19001:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19001:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19020:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "19020:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19032:4:18",
																									"nodeType": "YulLiteral",
																									"src": "19032:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19028:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "19028:3:18"
																							},
																							"nativeSrc": "19028:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "19028:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19016:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "19016:3:18"
																					},
																					"nativeSrc": "19016:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "19016:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19005:7:18",
																						"nodeType": "YulTypedName",
																						"src": "19005:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19052:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19052:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19098:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "19098:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19066:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "19066:31:18"
																					},
																					"nativeSrc": "19066:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "19066:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19056:6:18",
																						"nodeType": "YulTypedName",
																						"src": "19056:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19116:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19116:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19125:1:18",
																					"nodeType": "YulLiteral",
																					"src": "19125:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19120:1:18",
																						"nodeType": "YulTypedName",
																						"src": "19120:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19184:163:18",
																					"nodeType": "YulBlock",
																					"src": "19184:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19209:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "19209:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19227:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "19227:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19232:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "19232:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19223:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "19223:3:18"
																												},
																												"nativeSrc": "19223:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "19223:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "19217:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "19217:5:18"
																										},
																										"nativeSrc": "19217:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "19217:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19202:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "19202:6:18"
																								},
																								"nativeSrc": "19202:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19202:42:18"
																							},
																							"nativeSrc": "19202:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "19202:42:18"
																						},
																						{
																							"nativeSrc": "19261:24:18",
																							"nodeType": "YulAssignment",
																							"src": "19261:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19275:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "19275:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19283:1:18",
																										"nodeType": "YulLiteral",
																										"src": "19283:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19271:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "19271:3:18"
																								},
																								"nativeSrc": "19271:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19271:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19261:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "19261:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19302:31:18",
																							"nodeType": "YulAssignment",
																							"src": "19302:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19319:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "19319:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19330:2:18",
																										"nodeType": "YulLiteral",
																										"src": "19330:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19315:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "19315:3:18"
																								},
																								"nativeSrc": "19315:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19315:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19302:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "19302:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19150:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "19150:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19153:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "19153:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19147:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "19147:2:18"
																					},
																					"nativeSrc": "19147:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "19147:14:18"
																				},
																				"nativeSrc": "19139:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19162:21:18",
																					"nodeType": "YulBlock",
																					"src": "19162:21:18",
																					"statements": [
																						{
																							"nativeSrc": "19164:17:18",
																							"nodeType": "YulAssignment",
																							"src": "19164:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19173:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "19173:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19176:4:18",
																										"nodeType": "YulLiteral",
																										"src": "19176:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19169:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "19169:3:18"
																								},
																								"nativeSrc": "19169:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19169:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19164:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "19164:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19143:3:18",
																					"nodeType": "YulBlock",
																					"src": "19143:3:18",
																					"statements": []
																				},
																				"src": "19139:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "19383:156:18",
																					"nodeType": "YulBlock",
																					"src": "19383:156:18",
																					"statements": [
																						{
																							"nativeSrc": "19401:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19401:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19428:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "19428:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19433:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "19433:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19424:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "19424:3:18"
																										},
																										"nativeSrc": "19424:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "19424:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19418:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "19418:5:18"
																								},
																								"nativeSrc": "19418:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19418:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19405:9:18",
																									"nodeType": "YulTypedName",
																									"src": "19405:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19468:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "19468:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "19495:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "19495:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "19510:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "19510:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "19518:4:18",
																														"nodeType": "YulLiteral",
																														"src": "19518:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "19506:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "19506:3:18"
																												},
																												"nativeSrc": "19506:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "19506:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "19476:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "19476:18:18"
																										},
																										"nativeSrc": "19476:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "19476:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19461:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "19461:6:18"
																								},
																								"nativeSrc": "19461:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19461:64:18"
																							},
																							"nativeSrc": "19461:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "19461:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19366:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "19366:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19375:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "19375:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19363:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "19363:2:18"
																					},
																					"nativeSrc": "19363:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "19363:19:18"
																				},
																				"nativeSrc": "19360:179:18",
																				"nodeType": "YulIf",
																				"src": "19360:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19559:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "19559:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "19573:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "19573:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "19581:1:18",
																											"nodeType": "YulLiteral",
																											"src": "19581:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "19569:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "19569:3:18"
																									},
																									"nativeSrc": "19569:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "19569:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19585:1:18",
																									"nodeType": "YulLiteral",
																									"src": "19585:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19565:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "19565:3:18"
																							},
																							"nativeSrc": "19565:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "19565:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19552:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "19552:6:18"
																					},
																					"nativeSrc": "19552:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "19552:36:18"
																				},
																				"nativeSrc": "19552:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "19552:36:18"
																			}
																		]
																	},
																	"nativeSrc": "18980:618:18",
																	"nodeType": "YulCase",
																	"src": "18980:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18985:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18985:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19615:222:18",
																		"nodeType": "YulBlock",
																		"src": "19615:222:18",
																		"statements": [
																			{
																				"nativeSrc": "19629:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19629:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19642:1:18",
																					"nodeType": "YulLiteral",
																					"src": "19642:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "19633:5:18",
																						"nodeType": "YulTypedName",
																						"src": "19633:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19666:67:18",
																					"nodeType": "YulBlock",
																					"src": "19666:67:18",
																					"statements": [
																						{
																							"nativeSrc": "19684:35:18",
																							"nodeType": "YulAssignment",
																							"src": "19684:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19703:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "19703:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19708:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "19708:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19699:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "19699:3:18"
																										},
																										"nativeSrc": "19699:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "19699:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "19693:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "19693:5:18"
																								},
																								"nativeSrc": "19693:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "19693:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "19684:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "19684:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19659:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "19659:6:18"
																				},
																				"nativeSrc": "19656:77:18",
																				"nodeType": "YulIf",
																				"src": "19656:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19753:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "19753:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "19812:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "19812:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19819:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "19819:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "19759:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "19759:52:18"
																							},
																							"nativeSrc": "19759:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "19759:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19746:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "19746:6:18"
																					},
																					"nativeSrc": "19746:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "19746:81:18"
																				},
																				"nativeSrc": "19746:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "19746:81:18"
																			}
																		]
																	},
																	"nativeSrc": "19607:230:18",
																	"nodeType": "YulCase",
																	"src": "19607:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18960:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18960:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18968:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18968:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18957:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "18957:2:18"
																},
																"nativeSrc": "18957:14:18",
																"nodeType": "YulFunctionCall",
																"src": "18957:14:18"
															},
															"nativeSrc": "18950:887:18",
															"nodeType": "YulSwitch",
															"src": "18950:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "18448:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18529:4:18",
														"nodeType": "YulTypedName",
														"src": "18529:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "18535:3:18",
														"nodeType": "YulTypedName",
														"src": "18535:3:18",
														"type": ""
													}
												],
												"src": "18448:1395:18"
											},
											{
												"body": {
													"nativeSrc": "19955:64:18",
													"nodeType": "YulBlock",
													"src": "19955:64:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19977:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19977:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19985:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19985:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19973:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19973:3:18"
																		},
																		"nativeSrc": "19973:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19973:14:18"
																	},
																	{
																		"hexValue": "546f6b656e206973206e6f742061742073616c65",
																		"kind": "string",
																		"nativeSrc": "19989:22:18",
																		"nodeType": "YulLiteral",
																		"src": "19989:22:18",
																		"type": "",
																		"value": "Token is not at sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19966:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19966:6:18"
																},
																"nativeSrc": "19966:46:18",
																"nodeType": "YulFunctionCall",
																"src": "19966:46:18"
															},
															"nativeSrc": "19966:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "19966:46:18"
														}
													]
												},
												"name": "store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
												"nativeSrc": "19849:170:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19947:6:18",
														"nodeType": "YulTypedName",
														"src": "19947:6:18",
														"type": ""
													}
												],
												"src": "19849:170:18"
											},
											{
												"body": {
													"nativeSrc": "20171:220:18",
													"nodeType": "YulBlock",
													"src": "20171:220:18",
													"statements": [
														{
															"nativeSrc": "20181:74:18",
															"nodeType": "YulAssignment",
															"src": "20181:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20247:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20247:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20252:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20252:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20188:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "20188:58:18"
																},
																"nativeSrc": "20188:67:18",
																"nodeType": "YulFunctionCall",
																"src": "20188:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20181:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20181:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20353:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20353:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
																	"nativeSrc": "20264:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "20264:88:18"
																},
																"nativeSrc": "20264:93:18",
																"nodeType": "YulFunctionCall",
																"src": "20264:93:18"
															},
															"nativeSrc": "20264:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "20264:93:18"
														},
														{
															"nativeSrc": "20366:19:18",
															"nodeType": "YulAssignment",
															"src": "20366:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20377:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20377:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20382:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20382:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20373:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20373:3:18"
																},
																"nativeSrc": "20373:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20373:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20366:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20366:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20025:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20159:3:18",
														"nodeType": "YulTypedName",
														"src": "20159:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20167:3:18",
														"nodeType": "YulTypedName",
														"src": "20167:3:18",
														"type": ""
													}
												],
												"src": "20025:366:18"
											},
											{
												"body": {
													"nativeSrc": "20568:248:18",
													"nodeType": "YulBlock",
													"src": "20568:248:18",
													"statements": [
														{
															"nativeSrc": "20578:26:18",
															"nodeType": "YulAssignment",
															"src": "20578:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20590:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20590:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20601:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20601:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20586:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20586:3:18"
																},
																"nativeSrc": "20586:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20586:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20578:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20578:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20625:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20625:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20636:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20636:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20621:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20621:3:18"
																		},
																		"nativeSrc": "20621:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20621:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20644:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20644:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20650:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20650:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20640:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20640:3:18"
																		},
																		"nativeSrc": "20640:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20640:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20614:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20614:6:18"
																},
																"nativeSrc": "20614:47:18",
																"nodeType": "YulFunctionCall",
																"src": "20614:47:18"
															},
															"nativeSrc": "20614:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "20614:47:18"
														},
														{
															"nativeSrc": "20670:139:18",
															"nodeType": "YulAssignment",
															"src": "20670:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20804:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20804:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20678:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "20678:124:18"
																},
																"nativeSrc": "20678:131:18",
																"nodeType": "YulFunctionCall",
																"src": "20678:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20670:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20670:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20397:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20548:9:18",
														"nodeType": "YulTypedName",
														"src": "20548:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20563:4:18",
														"nodeType": "YulTypedName",
														"src": "20563:4:18",
														"type": ""
													}
												],
												"src": "20397:419:18"
											},
											{
												"body": {
													"nativeSrc": "20928:67:18",
													"nodeType": "YulBlock",
													"src": "20928:67:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20950:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "20950:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20958:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20958:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20946:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20946:3:18"
																		},
																		"nativeSrc": "20946:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20946:14:18"
																	},
																	{
																		"hexValue": "43616e6e6f742062757920796f7572206f776e204e4654",
																		"kind": "string",
																		"nativeSrc": "20962:25:18",
																		"nodeType": "YulLiteral",
																		"src": "20962:25:18",
																		"type": "",
																		"value": "Cannot buy your own NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20939:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20939:6:18"
																},
																"nativeSrc": "20939:49:18",
																"nodeType": "YulFunctionCall",
																"src": "20939:49:18"
															},
															"nativeSrc": "20939:49:18",
															"nodeType": "YulExpressionStatement",
															"src": "20939:49:18"
														}
													]
												},
												"name": "store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
												"nativeSrc": "20822:173:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20920:6:18",
														"nodeType": "YulTypedName",
														"src": "20920:6:18",
														"type": ""
													}
												],
												"src": "20822:173:18"
											},
											{
												"body": {
													"nativeSrc": "21147:220:18",
													"nodeType": "YulBlock",
													"src": "21147:220:18",
													"statements": [
														{
															"nativeSrc": "21157:74:18",
															"nodeType": "YulAssignment",
															"src": "21157:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21223:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21223:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21228:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21228:2:18",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21164:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "21164:58:18"
																},
																"nativeSrc": "21164:67:18",
																"nodeType": "YulFunctionCall",
																"src": "21164:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21157:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21157:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21329:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21329:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
																	"nativeSrc": "21240:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "21240:88:18"
																},
																"nativeSrc": "21240:93:18",
																"nodeType": "YulFunctionCall",
																"src": "21240:93:18"
															},
															"nativeSrc": "21240:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "21240:93:18"
														},
														{
															"nativeSrc": "21342:19:18",
															"nodeType": "YulAssignment",
															"src": "21342:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21353:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21353:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21358:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21358:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21349:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21349:3:18"
																},
																"nativeSrc": "21349:12:18",
																"nodeType": "YulFunctionCall",
																"src": "21349:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21342:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21342:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21001:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21135:3:18",
														"nodeType": "YulTypedName",
														"src": "21135:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21143:3:18",
														"nodeType": "YulTypedName",
														"src": "21143:3:18",
														"type": ""
													}
												],
												"src": "21001:366:18"
											},
											{
												"body": {
													"nativeSrc": "21544:248:18",
													"nodeType": "YulBlock",
													"src": "21544:248:18",
													"statements": [
														{
															"nativeSrc": "21554:26:18",
															"nodeType": "YulAssignment",
															"src": "21554:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21566:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21566:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21577:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21577:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21562:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21562:3:18"
																},
																"nativeSrc": "21562:18:18",
																"nodeType": "YulFunctionCall",
																"src": "21562:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21554:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21554:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21601:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21601:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21612:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21612:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21597:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21597:3:18"
																		},
																		"nativeSrc": "21597:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21597:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21620:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "21620:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21626:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21626:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21616:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21616:3:18"
																		},
																		"nativeSrc": "21616:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21616:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21590:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21590:6:18"
																},
																"nativeSrc": "21590:47:18",
																"nodeType": "YulFunctionCall",
																"src": "21590:47:18"
															},
															"nativeSrc": "21590:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "21590:47:18"
														},
														{
															"nativeSrc": "21646:139:18",
															"nodeType": "YulAssignment",
															"src": "21646:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21780:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21780:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21654:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "21654:124:18"
																},
																"nativeSrc": "21654:131:18",
																"nodeType": "YulFunctionCall",
																"src": "21654:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21646:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21646:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21373:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21524:9:18",
														"nodeType": "YulTypedName",
														"src": "21524:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21539:4:18",
														"nodeType": "YulTypedName",
														"src": "21539:4:18",
														"type": ""
													}
												],
												"src": "21373:419:18"
											},
											{
												"body": {
													"nativeSrc": "21904:61:18",
													"nodeType": "YulBlock",
													"src": "21904:61:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21926:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "21926:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21934:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21934:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21922:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21922:3:18"
																		},
																		"nativeSrc": "21922:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21922:14:18"
																	},
																	{
																		"hexValue": "537570706c792045786163742066756e64",
																		"kind": "string",
																		"nativeSrc": "21938:19:18",
																		"nodeType": "YulLiteral",
																		"src": "21938:19:18",
																		"type": "",
																		"value": "Supply Exact fund"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21915:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21915:6:18"
																},
																"nativeSrc": "21915:43:18",
																"nodeType": "YulFunctionCall",
																"src": "21915:43:18"
															},
															"nativeSrc": "21915:43:18",
															"nodeType": "YulExpressionStatement",
															"src": "21915:43:18"
														}
													]
												},
												"name": "store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
												"nativeSrc": "21798:167:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21896:6:18",
														"nodeType": "YulTypedName",
														"src": "21896:6:18",
														"type": ""
													}
												],
												"src": "21798:167:18"
											},
											{
												"body": {
													"nativeSrc": "22117:220:18",
													"nodeType": "YulBlock",
													"src": "22117:220:18",
													"statements": [
														{
															"nativeSrc": "22127:74:18",
															"nodeType": "YulAssignment",
															"src": "22127:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22193:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22193:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22198:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22198:2:18",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22134:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "22134:58:18"
																},
																"nativeSrc": "22134:67:18",
																"nodeType": "YulFunctionCall",
																"src": "22134:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22127:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22127:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22299:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22299:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
																	"nativeSrc": "22210:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "22210:88:18"
																},
																"nativeSrc": "22210:93:18",
																"nodeType": "YulFunctionCall",
																"src": "22210:93:18"
															},
															"nativeSrc": "22210:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "22210:93:18"
														},
														{
															"nativeSrc": "22312:19:18",
															"nodeType": "YulAssignment",
															"src": "22312:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22323:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22323:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22328:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22328:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22319:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22319:3:18"
																},
																"nativeSrc": "22319:12:18",
																"nodeType": "YulFunctionCall",
																"src": "22319:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22312:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22312:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21971:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22105:3:18",
														"nodeType": "YulTypedName",
														"src": "22105:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22113:3:18",
														"nodeType": "YulTypedName",
														"src": "22113:3:18",
														"type": ""
													}
												],
												"src": "21971:366:18"
											},
											{
												"body": {
													"nativeSrc": "22514:248:18",
													"nodeType": "YulBlock",
													"src": "22514:248:18",
													"statements": [
														{
															"nativeSrc": "22524:26:18",
															"nodeType": "YulAssignment",
															"src": "22524:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22536:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "22536:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22547:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22547:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22532:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22532:3:18"
																},
																"nativeSrc": "22532:18:18",
																"nodeType": "YulFunctionCall",
																"src": "22532:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22524:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22524:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22571:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22571:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22582:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22582:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22567:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22567:3:18"
																		},
																		"nativeSrc": "22567:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22567:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22590:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22590:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22596:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22596:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22586:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22586:3:18"
																		},
																		"nativeSrc": "22586:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22586:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22560:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22560:6:18"
																},
																"nativeSrc": "22560:47:18",
																"nodeType": "YulFunctionCall",
																"src": "22560:47:18"
															},
															"nativeSrc": "22560:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "22560:47:18"
														},
														{
															"nativeSrc": "22616:139:18",
															"nodeType": "YulAssignment",
															"src": "22616:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22750:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22750:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22624:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "22624:124:18"
																},
																"nativeSrc": "22624:131:18",
																"nodeType": "YulFunctionCall",
																"src": "22624:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22616:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22616:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22343:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22494:9:18",
														"nodeType": "YulTypedName",
														"src": "22494:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22509:4:18",
														"nodeType": "YulTypedName",
														"src": "22509:4:18",
														"type": ""
													}
												],
												"src": "22343:419:18"
											},
											{
												"body": {
													"nativeSrc": "22813:149:18",
													"nodeType": "YulBlock",
													"src": "22813:149:18",
													"statements": [
														{
															"nativeSrc": "22823:25:18",
															"nodeType": "YulAssignment",
															"src": "22823:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22846:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22846:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22828:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "22828:17:18"
																},
																"nativeSrc": "22828:20:18",
																"nodeType": "YulFunctionCall",
																"src": "22828:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22823:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "22823:1:18"
																}
															]
														},
														{
															"nativeSrc": "22857:25:18",
															"nodeType": "YulAssignment",
															"src": "22857:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22880:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22880:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22862:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "22862:17:18"
																},
																"nativeSrc": "22862:20:18",
																"nodeType": "YulFunctionCall",
																"src": "22862:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22857:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "22857:1:18"
																}
															]
														},
														{
															"nativeSrc": "22891:17:18",
															"nodeType": "YulAssignment",
															"src": "22891:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22903:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22903:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22906:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22906:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "22899:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22899:3:18"
																},
																"nativeSrc": "22899:9:18",
																"nodeType": "YulFunctionCall",
																"src": "22899:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "22891:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22891:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22933:22:18",
																"nodeType": "YulBlock",
																"src": "22933:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22935:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "22935:16:18"
																			},
																			"nativeSrc": "22935:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22935:18:18"
																		},
																		"nativeSrc": "22935:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "22935:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "22924:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22924:4:18"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "22930:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22930:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22921:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "22921:2:18"
																},
																"nativeSrc": "22921:11:18",
																"nodeType": "YulFunctionCall",
																"src": "22921:11:18"
															},
															"nativeSrc": "22918:37:18",
															"nodeType": "YulIf",
															"src": "22918:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "22768:194:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22799:1:18",
														"nodeType": "YulTypedName",
														"src": "22799:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22802:1:18",
														"nodeType": "YulTypedName",
														"src": "22802:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "22808:4:18",
														"nodeType": "YulTypedName",
														"src": "22808:4:18",
														"type": ""
													}
												],
												"src": "22768:194:18"
											},
											{
												"body": {
													"nativeSrc": "23074:70:18",
													"nodeType": "YulBlock",
													"src": "23074:70:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23096:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "23096:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23104:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23104:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23092:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23092:3:18"
																		},
																		"nativeSrc": "23092:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23092:14:18"
																	},
																	{
																		"hexValue": "596f75722061726520417574686f72697a6520746f2073656c6c",
																		"kind": "string",
																		"nativeSrc": "23108:28:18",
																		"nodeType": "YulLiteral",
																		"src": "23108:28:18",
																		"type": "",
																		"value": "Your are Authorize to sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23085:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23085:6:18"
																},
																"nativeSrc": "23085:52:18",
																"nodeType": "YulFunctionCall",
																"src": "23085:52:18"
															},
															"nativeSrc": "23085:52:18",
															"nodeType": "YulExpressionStatement",
															"src": "23085:52:18"
														}
													]
												},
												"name": "store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
												"nativeSrc": "22968:176:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23066:6:18",
														"nodeType": "YulTypedName",
														"src": "23066:6:18",
														"type": ""
													}
												],
												"src": "22968:176:18"
											},
											{
												"body": {
													"nativeSrc": "23296:220:18",
													"nodeType": "YulBlock",
													"src": "23296:220:18",
													"statements": [
														{
															"nativeSrc": "23306:74:18",
															"nodeType": "YulAssignment",
															"src": "23306:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23372:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23372:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23377:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23377:2:18",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23313:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "23313:58:18"
																},
																"nativeSrc": "23313:67:18",
																"nodeType": "YulFunctionCall",
																"src": "23313:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23306:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23306:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23478:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23478:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
																	"nativeSrc": "23389:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "23389:88:18"
																},
																"nativeSrc": "23389:93:18",
																"nodeType": "YulFunctionCall",
																"src": "23389:93:18"
															},
															"nativeSrc": "23389:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "23389:93:18"
														},
														{
															"nativeSrc": "23491:19:18",
															"nodeType": "YulAssignment",
															"src": "23491:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23502:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23502:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23507:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23507:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23498:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23498:3:18"
																},
																"nativeSrc": "23498:12:18",
																"nodeType": "YulFunctionCall",
																"src": "23498:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23491:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23491:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23150:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23284:3:18",
														"nodeType": "YulTypedName",
														"src": "23284:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23292:3:18",
														"nodeType": "YulTypedName",
														"src": "23292:3:18",
														"type": ""
													}
												],
												"src": "23150:366:18"
											},
											{
												"body": {
													"nativeSrc": "23693:248:18",
													"nodeType": "YulBlock",
													"src": "23693:248:18",
													"statements": [
														{
															"nativeSrc": "23703:26:18",
															"nodeType": "YulAssignment",
															"src": "23703:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23715:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "23715:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23726:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23726:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23711:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23711:3:18"
																},
																"nativeSrc": "23711:18:18",
																"nodeType": "YulFunctionCall",
																"src": "23711:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23703:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23703:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23750:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23750:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23761:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23761:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23746:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23746:3:18"
																		},
																		"nativeSrc": "23746:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23746:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23769:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "23769:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23775:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23775:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23765:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23765:3:18"
																		},
																		"nativeSrc": "23765:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23765:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23739:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23739:6:18"
																},
																"nativeSrc": "23739:47:18",
																"nodeType": "YulFunctionCall",
																"src": "23739:47:18"
															},
															"nativeSrc": "23739:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "23739:47:18"
														},
														{
															"nativeSrc": "23795:139:18",
															"nodeType": "YulAssignment",
															"src": "23795:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23929:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23929:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23803:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "23803:124:18"
																},
																"nativeSrc": "23803:131:18",
																"nodeType": "YulFunctionCall",
																"src": "23803:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23795:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23795:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23522:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23673:9:18",
														"nodeType": "YulTypedName",
														"src": "23673:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23688:4:18",
														"nodeType": "YulTypedName",
														"src": "23688:4:18",
														"type": ""
													}
												],
												"src": "23522:419:18"
											},
											{
												"body": {
													"nativeSrc": "24061:34:18",
													"nodeType": "YulBlock",
													"src": "24061:34:18",
													"statements": [
														{
															"nativeSrc": "24071:18:18",
															"nodeType": "YulAssignment",
															"src": "24071:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "24086:3:18",
																"nodeType": "YulIdentifier",
																"src": "24086:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24071:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "24071:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23947:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24033:3:18",
														"nodeType": "YulTypedName",
														"src": "24033:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24038:6:18",
														"nodeType": "YulTypedName",
														"src": "24038:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24049:11:18",
														"nodeType": "YulTypedName",
														"src": "24049:11:18",
														"type": ""
													}
												],
												"src": "23947:148:18"
											},
											{
												"body": {
													"nativeSrc": "24211:280:18",
													"nodeType": "YulBlock",
													"src": "24211:280:18",
													"statements": [
														{
															"nativeSrc": "24221:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "24221:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24268:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "24268:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "24235:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "24235:32:18"
																},
																"nativeSrc": "24235:39:18",
																"nodeType": "YulFunctionCall",
																"src": "24235:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24225:6:18",
																	"nodeType": "YulTypedName",
																	"src": "24225:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24283:96:18",
															"nodeType": "YulAssignment",
															"src": "24283:96:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24367:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24367:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24372:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24372:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24290:76:18",
																	"nodeType": "YulIdentifier",
																	"src": "24290:76:18"
																},
																"nativeSrc": "24290:89:18",
																"nodeType": "YulFunctionCall",
																"src": "24290:89:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24283:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24283:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24427:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "24427:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24434:4:18",
																				"nodeType": "YulLiteral",
																				"src": "24434:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24423:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24423:3:18"
																		},
																		"nativeSrc": "24423:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24423:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24441:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24441:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24446:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24446:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "24388:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "24388:34:18"
																},
																"nativeSrc": "24388:65:18",
																"nodeType": "YulFunctionCall",
																"src": "24388:65:18"
															},
															"nativeSrc": "24388:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "24388:65:18"
														},
														{
															"nativeSrc": "24462:23:18",
															"nodeType": "YulAssignment",
															"src": "24462:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24473:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24473:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24478:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24469:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24469:3:18"
																},
																"nativeSrc": "24469:16:18",
																"nodeType": "YulFunctionCall",
																"src": "24469:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24462:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24462:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "24101:390:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24192:5:18",
														"nodeType": "YulTypedName",
														"src": "24192:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24199:3:18",
														"nodeType": "YulTypedName",
														"src": "24199:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24207:3:18",
														"nodeType": "YulTypedName",
														"src": "24207:3:18",
														"type": ""
													}
												],
												"src": "24101:390:18"
											},
											{
												"body": {
													"nativeSrc": "24681:251:18",
													"nodeType": "YulBlock",
													"src": "24681:251:18",
													"statements": [
														{
															"nativeSrc": "24692:102:18",
															"nodeType": "YulAssignment",
															"src": "24692:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24781:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24781:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24790:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24790:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24699:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "24699:81:18"
																},
																"nativeSrc": "24699:95:18",
																"nodeType": "YulFunctionCall",
																"src": "24699:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24692:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24692:3:18"
																}
															]
														},
														{
															"nativeSrc": "24804:102:18",
															"nodeType": "YulAssignment",
															"src": "24804:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24893:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24893:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24902:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24902:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24811:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "24811:81:18"
																},
																"nativeSrc": "24811:95:18",
																"nodeType": "YulFunctionCall",
																"src": "24811:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24804:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24804:3:18"
																}
															]
														},
														{
															"nativeSrc": "24916:10:18",
															"nodeType": "YulAssignment",
															"src": "24916:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "24923:3:18",
																"nodeType": "YulIdentifier",
																"src": "24923:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24916:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24916:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "24497:435:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24652:3:18",
														"nodeType": "YulTypedName",
														"src": "24652:3:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24658:6:18",
														"nodeType": "YulTypedName",
														"src": "24658:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24666:6:18",
														"nodeType": "YulTypedName",
														"src": "24666:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24677:3:18",
														"nodeType": "YulTypedName",
														"src": "24677:3:18",
														"type": ""
													}
												],
												"src": "24497:435:18"
											},
											{
												"body": {
													"nativeSrc": "24996:40:18",
													"nodeType": "YulBlock",
													"src": "24996:40:18",
													"statements": [
														{
															"nativeSrc": "25007:22:18",
															"nodeType": "YulAssignment",
															"src": "25007:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25023:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "25023:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25017:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "25017:5:18"
																},
																"nativeSrc": "25017:12:18",
																"nodeType": "YulFunctionCall",
																"src": "25017:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "25007:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25007:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "24938:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24979:5:18",
														"nodeType": "YulTypedName",
														"src": "24979:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "24989:6:18",
														"nodeType": "YulTypedName",
														"src": "24989:6:18",
														"type": ""
													}
												],
												"src": "24938:98:18"
											},
											{
												"body": {
													"nativeSrc": "25137:73:18",
													"nodeType": "YulBlock",
													"src": "25137:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25154:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25154:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25159:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25159:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25147:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25147:6:18"
																},
																"nativeSrc": "25147:19:18",
																"nodeType": "YulFunctionCall",
																"src": "25147:19:18"
															},
															"nativeSrc": "25147:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "25147:19:18"
														},
														{
															"nativeSrc": "25175:29:18",
															"nodeType": "YulAssignment",
															"src": "25175:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25194:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25194:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25199:4:18",
																		"nodeType": "YulLiteral",
																		"src": "25199:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25190:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25190:3:18"
																},
																"nativeSrc": "25190:14:18",
																"nodeType": "YulFunctionCall",
																"src": "25190:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "25175:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "25175:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "25042:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25109:3:18",
														"nodeType": "YulTypedName",
														"src": "25109:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "25114:6:18",
														"nodeType": "YulTypedName",
														"src": "25114:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "25125:11:18",
														"nodeType": "YulTypedName",
														"src": "25125:11:18",
														"type": ""
													}
												],
												"src": "25042:168:18"
											},
											{
												"body": {
													"nativeSrc": "25306:283:18",
													"nodeType": "YulBlock",
													"src": "25306:283:18",
													"statements": [
														{
															"nativeSrc": "25316:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "25316:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25362:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "25362:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "25330:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "25330:31:18"
																},
																"nativeSrc": "25330:38:18",
																"nodeType": "YulFunctionCall",
																"src": "25330:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "25320:6:18",
																	"nodeType": "YulTypedName",
																	"src": "25320:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25377:77:18",
															"nodeType": "YulAssignment",
															"src": "25377:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25442:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25442:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25447:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25447:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25384:57:18",
																	"nodeType": "YulIdentifier",
																	"src": "25384:57:18"
																},
																"nativeSrc": "25384:70:18",
																"nodeType": "YulFunctionCall",
																"src": "25384:70:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25377:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25377:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25502:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "25502:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25509:4:18",
																				"nodeType": "YulLiteral",
																				"src": "25509:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25498:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25498:3:18"
																		},
																		"nativeSrc": "25498:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25498:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25516:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25516:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25521:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25521:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "25463:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "25463:34:18"
																},
																"nativeSrc": "25463:65:18",
																"nodeType": "YulFunctionCall",
																"src": "25463:65:18"
															},
															"nativeSrc": "25463:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "25463:65:18"
														},
														{
															"nativeSrc": "25537:46:18",
															"nodeType": "YulAssignment",
															"src": "25537:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25548:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25548:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "25575:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "25575:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "25553:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "25553:21:18"
																		},
																		"nativeSrc": "25553:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25553:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25544:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25544:3:18"
																},
																"nativeSrc": "25544:39:18",
																"nodeType": "YulFunctionCall",
																"src": "25544:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25537:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25537:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "25216:373:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25287:5:18",
														"nodeType": "YulTypedName",
														"src": "25287:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25294:3:18",
														"nodeType": "YulTypedName",
														"src": "25294:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25302:3:18",
														"nodeType": "YulTypedName",
														"src": "25302:3:18",
														"type": ""
													}
												],
												"src": "25216:373:18"
											},
											{
												"body": {
													"nativeSrc": "25795:440:18",
													"nodeType": "YulBlock",
													"src": "25795:440:18",
													"statements": [
														{
															"nativeSrc": "25805:27:18",
															"nodeType": "YulAssignment",
															"src": "25805:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25817:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "25817:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25828:3:18",
																		"nodeType": "YulLiteral",
																		"src": "25828:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25813:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25813:3:18"
																},
																"nativeSrc": "25813:19:18",
																"nodeType": "YulFunctionCall",
																"src": "25813:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25805:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25805:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25886:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25886:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25899:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25899:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25910:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25910:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25895:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25895:3:18"
																		},
																		"nativeSrc": "25895:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25895:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25842:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "25842:43:18"
																},
																"nativeSrc": "25842:71:18",
																"nodeType": "YulFunctionCall",
																"src": "25842:71:18"
															},
															"nativeSrc": "25842:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "25842:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25967:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25967:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25980:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25980:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25991:2:18",
																				"nodeType": "YulLiteral",
																				"src": "25991:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25976:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25976:3:18"
																		},
																		"nativeSrc": "25976:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25976:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25923:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "25923:43:18"
																},
																"nativeSrc": "25923:72:18",
																"nodeType": "YulFunctionCall",
																"src": "25923:72:18"
															},
															"nativeSrc": "25923:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "25923:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26049:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26049:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26062:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26062:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26073:2:18",
																				"nodeType": "YulLiteral",
																				"src": "26073:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26058:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26058:3:18"
																		},
																		"nativeSrc": "26058:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26058:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26005:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "26005:43:18"
																},
																"nativeSrc": "26005:72:18",
																"nodeType": "YulFunctionCall",
																"src": "26005:72:18"
															},
															"nativeSrc": "26005:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "26005:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26098:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26098:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26109:2:18",
																				"nodeType": "YulLiteral",
																				"src": "26109:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26094:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26094:3:18"
																		},
																		"nativeSrc": "26094:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26094:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26118:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "26118:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26124:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26124:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26114:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26114:3:18"
																		},
																		"nativeSrc": "26114:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26114:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26087:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26087:6:18"
																},
																"nativeSrc": "26087:48:18",
																"nodeType": "YulFunctionCall",
																"src": "26087:48:18"
															},
															"nativeSrc": "26087:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "26087:48:18"
														},
														{
															"nativeSrc": "26144:84:18",
															"nodeType": "YulAssignment",
															"src": "26144:84:18",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "26214:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26214:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "26223:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "26223:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26152:61:18",
																	"nodeType": "YulIdentifier",
																	"src": "26152:61:18"
																},
																"nativeSrc": "26152:76:18",
																"nodeType": "YulFunctionCall",
																"src": "26152:76:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26144:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26144:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "25595:640:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25743:9:18",
														"nodeType": "YulTypedName",
														"src": "25743:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "25755:6:18",
														"nodeType": "YulTypedName",
														"src": "25755:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25763:6:18",
														"nodeType": "YulTypedName",
														"src": "25763:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25771:6:18",
														"nodeType": "YulTypedName",
														"src": "25771:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25779:6:18",
														"nodeType": "YulTypedName",
														"src": "25779:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25790:4:18",
														"nodeType": "YulTypedName",
														"src": "25790:4:18",
														"type": ""
													}
												],
												"src": "25595:640:18"
											},
											{
												"body": {
													"nativeSrc": "26303:79:18",
													"nodeType": "YulBlock",
													"src": "26303:79:18",
													"statements": [
														{
															"nativeSrc": "26313:22:18",
															"nodeType": "YulAssignment",
															"src": "26313:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "26328:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26328:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26322:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26322:5:18"
																},
																"nativeSrc": "26322:13:18",
																"nodeType": "YulFunctionCall",
																"src": "26322:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "26313:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26313:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26370:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "26370:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "26344:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "26344:25:18"
																},
																"nativeSrc": "26344:32:18",
																"nodeType": "YulFunctionCall",
																"src": "26344:32:18"
															},
															"nativeSrc": "26344:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "26344:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "26241:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "26281:6:18",
														"nodeType": "YulTypedName",
														"src": "26281:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "26289:3:18",
														"nodeType": "YulTypedName",
														"src": "26289:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "26297:5:18",
														"nodeType": "YulTypedName",
														"src": "26297:5:18",
														"type": ""
													}
												],
												"src": "26241:141:18"
											},
											{
												"body": {
													"nativeSrc": "26464:273:18",
													"nodeType": "YulBlock",
													"src": "26464:273:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "26510:83:18",
																"nodeType": "YulBlock",
																"src": "26510:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "26512:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "26512:77:18"
																			},
																			"nativeSrc": "26512:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "26512:79:18"
																		},
																		"nativeSrc": "26512:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "26512:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26485:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "26485:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26494:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26494:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26481:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26481:3:18"
																		},
																		"nativeSrc": "26481:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26481:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26506:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26506:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26477:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26477:3:18"
																},
																"nativeSrc": "26477:32:18",
																"nodeType": "YulFunctionCall",
																"src": "26477:32:18"
															},
															"nativeSrc": "26474:119:18",
															"nodeType": "YulIf",
															"src": "26474:119:18"
														},
														{
															"nativeSrc": "26603:127:18",
															"nodeType": "YulBlock",
															"src": "26603:127:18",
															"statements": [
																{
																	"nativeSrc": "26618:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26618:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26632:1:18",
																		"nodeType": "YulLiteral",
																		"src": "26632:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "26622:6:18",
																			"nodeType": "YulTypedName",
																			"src": "26622:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "26647:73:18",
																	"nodeType": "YulAssignment",
																	"src": "26647:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "26692:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "26692:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "26703:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "26703:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26688:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "26688:3:18"
																				},
																				"nativeSrc": "26688:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "26688:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26712:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "26712:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "26657:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "26657:30:18"
																		},
																		"nativeSrc": "26657:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26657:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "26647:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "26647:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "26388:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26434:9:18",
														"nodeType": "YulTypedName",
														"src": "26434:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26445:7:18",
														"nodeType": "YulTypedName",
														"src": "26445:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26457:6:18",
														"nodeType": "YulTypedName",
														"src": "26457:6:18",
														"type": ""
													}
												],
												"src": "26388:349:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token is not at sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot buy your own NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Supply Exact fund\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your are Authorize to sell\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610180575f3560e01c806370a08231116100d0578063a90d14e211610089578063d547cfb711610063578063d547cfb7146105a6578063e985e9c5146105d0578063f2a413b51461060c578063f8b2cb4f1461064857610180565b8063a90d14e21461051a578063b88d4fde14610542578063c87b56dd1461056a57610180565b806370a082311461040a5780637d7f1f3e146104465780638a71bb2d1461048257806395d89b41146104ac578063a22cb465146104d6578063a37365e0146104fe57610180565b80632a55205a1161013d57806355f804b31161011757806355f804b3146103425780635a51a8851461036a5780635afa3a72146103a65780636352211e146103ce57610180565b80632a55205a146102b35780633d0673d4146102f057806342842e0e1461031a57610180565b806301ffc9a71461018457806306fdde03146101c0578063081812fc146101ea578063095ea7b31461022657806323b872dd1461024e578063265aa62114610276575b5f80fd5b34801561018f575f80fd5b506101aa60048036038101906101a591906123d2565b610684565b6040516101b79190612417565b60405180910390f35b3480156101cb575f80fd5b506101d46106e4565b6040516101e191906124ba565b60405180910390f35b3480156101f5575f80fd5b50610210600480360381019061020b919061250d565b610773565b60405161021d9190612577565b60405180910390f35b348015610231575f80fd5b5061024c600480360381019061024791906125ba565b61078e565b005b348015610259575f80fd5b50610274600480360381019061026f91906125f8565b6107a4565b005b348015610281575f80fd5b5061029c6004803603810190610297919061250d565b6108a3565b6040516102aa929190612657565b60405180910390f35b3480156102be575f80fd5b506102d960048036038101906102d4919061267e565b6108e2565b6040516102e7929190612657565b60405180910390f35b3480156102fb575f80fd5b50610304610930565b60405161031191906126bc565b60405180910390f35b348015610325575f80fd5b50610340600480360381019061033b91906125f8565b610940565b005b34801561034d575f80fd5b5061036860048036038101906103639190612801565b61095f565b005b348015610375575f80fd5b50610390600480360381019061038b919061250d565b610972565b60405161039d91906126bc565b60405180910390f35b3480156103b1575f80fd5b506103cc60048036038101906103c79190612848565b6109fd565b005b3480156103d9575f80fd5b506103f460048036038101906103ef919061250d565b610b1d565b6040516104019190612577565b60405180910390f35b348015610415575f80fd5b50610430600480360381019061042b91906128a2565b610b2e565b60405161043d91906126bc565b60405180910390f35b348015610451575f80fd5b5061046c6004803603810190610467919061250d565b610be4565b6040516104799190612417565b60405180910390f35b34801561048d575f80fd5b50610496610c52565b6040516104a391906126bc565b60405180910390f35b3480156104b7575f80fd5b506104c0610c58565b6040516104cd91906124ba565b60405180910390f35b3480156104e1575f80fd5b506104fc60048036038101906104f791906128f7565b610ce8565b005b6105186004803603810190610513919061250d565b610cfe565b005b348015610525575f80fd5b50610540600480360381019061053b919061250d565b610f58565b005b34801561054d575f80fd5b50610568600480360381019061056391906129d3565b611035565b005b348015610575575f80fd5b50610590600480360381019061058b919061250d565b611052565b60405161059d91906124ba565b60405180910390f35b3480156105b1575f80fd5b506105ba61115d565b6040516105c791906124ba565b60405180910390f35b3480156105db575f80fd5b506105f660048036038101906105f19190612a53565b6111e9565b6040516106039190612417565b60405180910390f35b348015610617575f80fd5b50610632600480360381019061062d919061250d565b611277565b60405161063f9190612417565b60405180910390f35b348015610653575f80fd5b5061066e600480360381019061066991906128a2565b6112e5565b60405161067b91906126bc565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106dd57506106dc82611305565b5b9050919050565b60605f80546106f290612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461071e90612abe565b80156107695780601f1061074057610100808354040283529160200191610769565b820191905f5260205f20905b81548152906001019060200180831161074c57829003601f168201915b5050505050905090565b5f61077d826113e6565b506107878261146c565b9050919050565b6107a0828261079b6114a5565b6114ac565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610814575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161080b9190612577565b60405180910390fd5b5f61082783836108226114a5565b6114be565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461089d578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161089493929190612aee565b60405180910390fd5b50505050565b600d602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b5f805f6064600954856108f59190612b50565b6108ff9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168192509250509250929050565b5f61093b60076116c9565b905090565b61095a83838360405180602001604052805f815250611035565b505050565b806008908161096e9190612d8b565b5050565b5f80600d5f8481526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151915050919050565b5f610a0860076116c9565b9050610a1433826116d5565b610a1e81846116f2565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250600d5f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505f600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550610b18600761174c565b505050565b5f610b27826113e6565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b9f575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610b969190612577565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f80610bef83610b1d565b9050600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b60095481565b606060018054610c6790612abe565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9390612abe565b8015610cde5780601f10610cb557610100808354040283529160200191610cde565b820191905f5260205f20905b815481529060010190602001808311610cc157829003601f168201915b5050505050905090565b610cfa610cf36114a5565b8383611760565b5050565b5f610d0882610b1d565b905060011515600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16151514610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da090612ea4565b60405180910390fd5b5f3390505f600d5f8581526020019081526020015f206001015490508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90612f0c565b60405180910390fd5b803414610e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6c90612f74565b60405180910390fd5b610e808383866118c9565b5f606460095483610e919190612b50565b610e9b9190612bbe565b9050600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f01573d5f803e3d5ffd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc8284610f289190612f92565b90811502906040515f60405180830381858888f19350505050158015610f50573d5f803e3d5ffd5b505050505050565b610f6181610b1d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc59061300f565b60405180910390fd5b6001600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6110408484846107a4565b61104c84848484611a31565b50505050565b606061105d826113e6565b505f60065f8481526020019081526020015f20805461107b90612abe565b80601f01602080910402602001604051908101604052809291908181526020018280546110a790612abe565b80156110f25780601f106110c9576101008083540402835291602001916110f2565b820191905f5260205f20905b8154815290600101906020018083116110d557829003601f168201915b505050505090505f611102611be3565b90505f815103611116578192505050611158565b5f8251111561114a578082604051602001611132929190613067565b60405160208183030381529060405292505050611158565b61115384611bf9565b925050505b919050565b6008805461116a90612abe565b80601f016020809104026020016040519081016040528092919081815260200182805461119690612abe565b80156111e15780601f106111b8576101008083540402835291602001916111e1565b820191905f5260205f20905b8154815290600101906020018083116111c457829003601f168201915b505050505081565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f8061128283610b1d565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f9054906101000a900460ff16915050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806113cf57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806113df57506113de82611c5f565b5b9050919050565b5f806113f183611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361146357826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161145a91906126bc565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6114b98383836001611d01565b505050565b5f806114c984611cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461150a57611509818486611ec0565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611595576115495f855f80611d01565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461161457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b6116ee828260405180602001604052805f815250611f83565b5050565b8060065f8481526020019081526020015f2090816117109190612d8b565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161174091906126bc565b60405180910390a15050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117d057816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016117c79190612577565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118bc9190612417565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611939575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119309190612577565b60405180910390fd5b5f61194583835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b757816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ae91906126bc565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a2b578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401611a2293929190612aee565b60405180910390fd5b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611bdd578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611a746114a5565b8685856040518563ffffffff1660e01b8152600401611a9694939291906130dc565b6020604051808303815f875af1925050508015611ad157506040513d601f19601f82011682018060405250810190611ace919061313a565b60015b611b52573d805f8114611aff576040519150601f19603f3d011682016040523d82523d5f602084013e611b04565b606091505b505f815103611b4a57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b419190612577565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611bdb57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611bd29190612577565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b6060611c04826113e6565b505f611c0e611be3565b90505f815111611c2c5760405180602001604052805f815250611c57565b80611c3684611f9e565b604051602001611c47929190613067565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611d3957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611e6b575f611d48846113e6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611db257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611dc55750611dc381846111e9565b155b15611e0757826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611dfe9190612577565b60405180910390fd5b8115611e6957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611ecb838383612068565b611f7e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f3f57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611f3691906126bc565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611f75929190612657565b60405180910390fd5b505050565b611f8d8383612128565b611f995f848484611a31565b505050565b60605f6001611fac8461221b565b0190505f8167ffffffffffffffff811115611fca57611fc96126dd565b5b6040519080825280601f01601f191660200182016040528015611ffc5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561205d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161205257612051612b91565b5b0494505f8503612009575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561211f57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806120e057506120df84846111e9565b5b8061211e57508273ffffffffffffffffffffffffffffffffffffffff166121068361146c565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612198575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161218f9190612577565b60405180910390fd5b5f6121a483835f6114be565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612216575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161220d9190612577565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612277577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161226d5761226c612b91565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106122b4576d04ee2d6d415b85acef810000000083816122aa576122a9612b91565b5b0492506020810190505b662386f26fc1000083106122e357662386f26fc1000083816122d9576122d8612b91565b5b0492506010810190505b6305f5e100831061230c576305f5e100838161230257612301612b91565b5b0492506008810190505b612710831061233157612710838161232757612326612b91565b5b0492506004810190505b60648310612354576064838161234a57612349612b91565b5b0492506002810190505b600a8310612363576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123b18161237d565b81146123bb575f80fd5b50565b5f813590506123cc816123a8565b92915050565b5f602082840312156123e7576123e6612375565b5b5f6123f4848285016123be565b91505092915050565b5f8115159050919050565b612411816123fd565b82525050565b5f60208201905061242a5f830184612408565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561246757808201518184015260208101905061244c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61248c82612430565b612496818561243a565b93506124a681856020860161244a565b6124af81612472565b840191505092915050565b5f6020820190508181035f8301526124d28184612482565b905092915050565b5f819050919050565b6124ec816124da565b81146124f6575f80fd5b50565b5f81359050612507816124e3565b92915050565b5f6020828403121561252257612521612375565b5b5f61252f848285016124f9565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61256182612538565b9050919050565b61257181612557565b82525050565b5f60208201905061258a5f830184612568565b92915050565b61259981612557565b81146125a3575f80fd5b50565b5f813590506125b481612590565b92915050565b5f80604083850312156125d0576125cf612375565b5b5f6125dd858286016125a6565b92505060206125ee858286016124f9565b9150509250929050565b5f805f6060848603121561260f5761260e612375565b5b5f61261c868287016125a6565b935050602061262d868287016125a6565b925050604061263e868287016124f9565b9150509250925092565b612651816124da565b82525050565b5f60408201905061266a5f830185612568565b6126776020830184612648565b9392505050565b5f806040838503121561269457612693612375565b5b5f6126a1858286016124f9565b92505060206126b2858286016124f9565b9150509250929050565b5f6020820190506126cf5f830184612648565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61271382612472565b810181811067ffffffffffffffff82111715612732576127316126dd565b5b80604052505050565b5f61274461236c565b9050612750828261270a565b919050565b5f67ffffffffffffffff82111561276f5761276e6126dd565b5b61277882612472565b9050602081019050919050565b828183375f83830152505050565b5f6127a56127a084612755565b61273b565b9050828152602081018484840111156127c1576127c06126d9565b5b6127cc848285612785565b509392505050565b5f82601f8301126127e8576127e76126d5565b5b81356127f8848260208601612793565b91505092915050565b5f6020828403121561281657612815612375565b5b5f82013567ffffffffffffffff81111561283357612832612379565b5b61283f848285016127d4565b91505092915050565b5f806040838503121561285e5761285d612375565b5b5f83013567ffffffffffffffff81111561287b5761287a612379565b5b612887858286016127d4565b9250506020612898858286016124f9565b9150509250929050565b5f602082840312156128b7576128b6612375565b5b5f6128c4848285016125a6565b91505092915050565b6128d6816123fd565b81146128e0575f80fd5b50565b5f813590506128f1816128cd565b92915050565b5f806040838503121561290d5761290c612375565b5b5f61291a858286016125a6565b925050602061292b858286016128e3565b9150509250929050565b5f67ffffffffffffffff82111561294f5761294e6126dd565b5b61295882612472565b9050602081019050919050565b5f61297761297284612935565b61273b565b905082815260208101848484011115612993576129926126d9565b5b61299e848285612785565b509392505050565b5f82601f8301126129ba576129b96126d5565b5b81356129ca848260208601612965565b91505092915050565b5f805f80608085870312156129eb576129ea612375565b5b5f6129f8878288016125a6565b9450506020612a09878288016125a6565b9350506040612a1a878288016124f9565b925050606085013567ffffffffffffffff811115612a3b57612a3a612379565b5b612a47878288016129a6565b91505092959194509250565b5f8060408385031215612a6957612a68612375565b5b5f612a76858286016125a6565b9250506020612a87858286016125a6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612ad557607f821691505b602082108103612ae857612ae7612a91565b5b50919050565b5f606082019050612b015f830186612568565b612b0e6020830185612648565b612b1b6040830184612568565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612b5a826124da565b9150612b65836124da565b9250828202612b73816124da565b91508282048414831517612b8a57612b89612b23565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612bc8826124da565b9150612bd3836124da565b925082612be357612be2612b91565b5b828204905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612c4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c0f565b612c548683612c0f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612c8f612c8a612c85846124da565b612c6c565b6124da565b9050919050565b5f819050919050565b612ca883612c75565b612cbc612cb482612c96565b848454612c1b565b825550505050565b5f90565b612cd0612cc4565b612cdb818484612c9f565b505050565b5b81811015612cfe57612cf35f82612cc8565b600181019050612ce1565b5050565b601f821115612d4357612d1481612bee565b612d1d84612c00565b81016020851015612d2c578190505b612d40612d3885612c00565b830182612ce0565b50505b505050565b5f82821c905092915050565b5f612d635f1984600802612d48565b1980831691505092915050565b5f612d7b8383612d54565b9150826002028217905092915050565b612d9482612430565b67ffffffffffffffff811115612dad57612dac6126dd565b5b612db78254612abe565b612dc2828285612d02565b5f60209050601f831160018114612df3575f8415612de1578287015190505b612deb8582612d70565b865550612e52565b601f198416612e0186612bee565b5f5b82811015612e2857848901518255600182019150602085019450602081019050612e03565b86831015612e455784890151612e41601f891682612d54565b8355505b6001600288020188555050505b505050505050565b7f546f6b656e206973206e6f742061742073616c650000000000000000000000005f82015250565b5f612e8e60148361243a565b9150612e9982612e5a565b602082019050919050565b5f6020820190508181035f830152612ebb81612e82565b9050919050565b7f43616e6e6f742062757920796f7572206f776e204e46540000000000000000005f82015250565b5f612ef660178361243a565b9150612f0182612ec2565b602082019050919050565b5f6020820190508181035f830152612f2381612eea565b9050919050565b7f537570706c792045786163742066756e640000000000000000000000000000005f82015250565b5f612f5e60118361243a565b9150612f6982612f2a565b602082019050919050565b5f6020820190508181035f830152612f8b81612f52565b9050919050565b5f612f9c826124da565b9150612fa7836124da565b9250828203905081811115612fbf57612fbe612b23565b5b92915050565b7f596f75722061726520417574686f72697a6520746f2073656c6c0000000000005f82015250565b5f612ff9601a8361243a565b915061300482612fc5565b602082019050919050565b5f6020820190508181035f83015261302681612fed565b9050919050565b5f81905092915050565b5f61304182612430565b61304b818561302d565b935061305b81856020860161244a565b80840191505092915050565b5f6130728285613037565b915061307e8284613037565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6130ae8261308a565b6130b88185613094565b93506130c881856020860161244a565b6130d181612472565b840191505092915050565b5f6080820190506130ef5f830187612568565b6130fc6020830186612568565b6131096040830185612648565b818103606083015261311b81846130a4565b905095945050505050565b5f81519050613134816123a8565b92915050565b5f6020828403121561314f5761314e612375565b5b5f61315c84828501613126565b9150509291505056fea26469706673582212203d93fe0637cda1104ee0513e327b409f091b38c42803bcee7f8795ba464bc6b964736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA90D14E2 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD547CFB7 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xF2A413B5 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x648 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0xA90D14E2 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x56A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x7D7F1F3E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x8A71BB2D EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xA37365E0 EQ PUSH2 0x4FE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x5A51A885 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x5AFA3A72 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x3D0673D4 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x31A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x265AA621 EQ PUSH2 0x276 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x2801 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0xF58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x29D3 JUMP JUMPDEST PUSH2 0x1035 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BA PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2A53 JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x632 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x250D JUMP JUMPDEST PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x66E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6DD JUMPI POP PUSH2 0x6DC DUP3 PUSH2 0x1305 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x6F2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71E SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x740 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x77D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH2 0x787 DUP3 PUSH2 0x146C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A0 DUP3 DUP3 PUSH2 0x79B PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x814 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x827 DUP4 DUP4 PUSH2 0x822 PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89D JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP6 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x93B PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x95A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1035 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x8 SWAP1 DUP2 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA08 PUSH1 0x7 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 POP PUSH2 0xA14 CALLER DUP3 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0xA1E DUP2 DUP5 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0xD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH0 PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB18 PUSH1 0x7 PUSH2 0x174C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB27 DUP3 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEF DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC67 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC93 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCB5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCFA PUSH2 0xCF3 PUSH2 0x14A5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1760 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD08 DUP3 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0xD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP1 PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP4 DUP4 DUP7 PUSH2 0x18C9 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP4 PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x2BBE JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF01 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 DUP5 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF50 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xB1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP1 PUSH2 0x300F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1040 DUP5 DUP5 DUP5 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x104C DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x105D DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x107B SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A7 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x1102 PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1116 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x114A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1132 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x1153 DUP5 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x116A SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1196 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1282 DUP4 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x13CF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x13DF JUMPI POP PUSH2 0x13DE DUP3 PUSH2 0x1C5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F1 DUP4 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1463 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145A SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14B9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14C9 DUP5 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150A JUMPI PUSH2 0x1509 DUP2 DUP5 DUP7 PUSH2 0x1EC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1595 JUMPI PUSH2 0x1549 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1614 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1F83 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1710 SWAP2 SWAP1 PUSH2 0x2D8B JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C7 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x18BC SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1939 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1930 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1945 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A2B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A22 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1BDD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1A74 PUSH2 0x14A5 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1AD1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACE SWAP2 SWAP1 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B52 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1AFF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1B4A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1BDB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C04 DUP3 PUSH2 0x13E6 JUMP JUMPDEST POP PUSH0 PUSH2 0x1C0E PUSH2 0x1BE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1C2C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH2 0x1C36 DUP5 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C47 SWAP3 SWAP2 SWAP1 PUSH2 0x3067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1D39 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1E6B JUMPI PUSH0 PUSH2 0x1D48 DUP5 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DB2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1DC5 JUMPI POP PUSH2 0x1DC3 DUP2 DUP5 PUSH2 0x11E9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1E69 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECB DUP4 DUP4 DUP4 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x1F7E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F36 SWAP2 SWAP1 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F75 SWAP3 SWAP2 SWAP1 PUSH2 0x2657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F8D DUP4 DUP4 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x1F99 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1A31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1FAC DUP5 PUSH2 0x221B JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCA JUMPI PUSH2 0x1FC9 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x205D JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2052 JUMPI PUSH2 0x2051 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x2009 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x211F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x20E0 JUMPI POP PUSH2 0x20DF DUP5 DUP5 PUSH2 0x11E9 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x211E JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2106 DUP4 PUSH2 0x146C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2198 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218F SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21A4 DUP4 DUP4 PUSH0 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2216 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220D SWAP2 SWAP1 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2277 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x226D JUMPI PUSH2 0x226C PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x22B4 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x22E3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x230C JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2302 JUMPI PUSH2 0x2301 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2331 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2327 JUMPI PUSH2 0x2326 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2354 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x234A JUMPI PUSH2 0x2349 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2363 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B1 DUP2 PUSH2 0x237D JUMP JUMPDEST DUP2 EQ PUSH2 0x23BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23CC DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E7 JUMPI PUSH2 0x23E6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F4 DUP5 DUP3 DUP6 ADD PUSH2 0x23BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2411 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242A PUSH0 DUP4 ADD DUP5 PUSH2 0x2408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2467 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x244C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x248C DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x2496 DUP2 DUP6 PUSH2 0x243A JUMP JUMPDEST SWAP4 POP PUSH2 0x24A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x24AF DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24D2 DUP2 DUP5 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24EC DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP2 EQ PUSH2 0x24F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2507 DUP2 PUSH2 0x24E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252F DUP5 DUP3 DUP6 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2561 DUP3 PUSH2 0x2538 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2571 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x258A PUSH0 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2599 DUP2 PUSH2 0x2557 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B4 DUP2 PUSH2 0x2590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25CF PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25DD DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25EE DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x261C DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x262D DUP7 DUP3 DUP8 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x263E DUP7 DUP3 DUP8 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2651 DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x266A PUSH0 DUP4 ADD DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2677 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A1 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26B2 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26CF PUSH0 DUP4 ADD DUP5 PUSH2 0x2648 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2713 DUP3 PUSH2 0x2472 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2732 JUMPI PUSH2 0x2731 PUSH2 0x26DD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2744 PUSH2 0x236C JUMP JUMPDEST SWAP1 POP PUSH2 0x2750 DUP3 DUP3 PUSH2 0x270A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x276F JUMPI PUSH2 0x276E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2778 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27A5 PUSH2 0x27A0 DUP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27C1 JUMPI PUSH2 0x27C0 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x27CC DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27E8 JUMPI PUSH2 0x27E7 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2816 JUMPI PUSH2 0x2815 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2833 JUMPI PUSH2 0x2832 PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x283F DUP5 DUP3 DUP6 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285D PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287B JUMPI PUSH2 0x287A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2887 DUP6 DUP3 DUP7 ADD PUSH2 0x27D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2898 DUP6 DUP3 DUP7 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B7 JUMPI PUSH2 0x28B6 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C4 DUP5 DUP3 DUP6 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D6 DUP2 PUSH2 0x23FD JUMP JUMPDEST DUP2 EQ PUSH2 0x28E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F1 DUP2 PUSH2 0x28CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290D JUMPI PUSH2 0x290C PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291A DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292B DUP6 DUP3 DUP7 ADD PUSH2 0x28E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2958 DUP3 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2977 PUSH2 0x2972 DUP5 PUSH2 0x2935 JUMP JUMPDEST PUSH2 0x273B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x26D9 JUMP JUMPDEST JUMPDEST PUSH2 0x299E DUP5 DUP3 DUP6 PUSH2 0x2785 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x26D5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29CA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x29EB JUMPI PUSH2 0x29EA PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F8 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2A09 DUP8 DUP3 DUP9 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2A1A DUP8 DUP3 DUP9 ADD PUSH2 0x24F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A3B JUMPI PUSH2 0x2A3A PUSH2 0x2379 JUMP JUMPDEST JUMPDEST PUSH2 0x2A47 DUP8 DUP3 DUP9 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A69 JUMPI PUSH2 0x2A68 PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A76 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A87 DUP6 DUP3 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2AD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AE8 JUMPI PUSH2 0x2AE7 PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B01 PUSH0 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x2B0E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST PUSH2 0x2B1B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2568 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2B5A DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B65 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B73 DUP2 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B8A JUMPI PUSH2 0x2B89 PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BC8 DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BD3 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BE3 JUMPI PUSH2 0x2BE2 PUSH2 0x2B91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2C4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2C0F JUMP JUMPDEST PUSH2 0x2C54 DUP7 DUP4 PUSH2 0x2C0F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C8F PUSH2 0x2C8A PUSH2 0x2C85 DUP5 PUSH2 0x24DA JUMP JUMPDEST PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x24DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CA8 DUP4 PUSH2 0x2C75 JUMP JUMPDEST PUSH2 0x2CBC PUSH2 0x2CB4 DUP3 PUSH2 0x2C96 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C1B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2CD0 PUSH2 0x2CC4 JUMP JUMPDEST PUSH2 0x2CDB DUP2 DUP5 DUP5 PUSH2 0x2C9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CFE JUMPI PUSH2 0x2CF3 PUSH0 DUP3 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2CE1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D14 DUP2 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x2D1D DUP5 PUSH2 0x2C00 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2D2C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2D40 PUSH2 0x2D38 DUP6 PUSH2 0x2C00 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2CE0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D63 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2D48 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B DUP4 DUP4 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x26DD JUMP JUMPDEST JUMPDEST PUSH2 0x2DB7 DUP3 SLOAD PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x2DC2 DUP3 DUP3 DUP6 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DF3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2DE1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2DEB DUP6 DUP3 PUSH2 0x2D70 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2E01 DUP7 PUSH2 0x2BEE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E28 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E03 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2E45 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2E41 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2D54 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206973206E6F742061742073616C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8E PUSH1 0x14 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2E99 DUP3 PUSH2 0x2E5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EBB DUP2 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E204E4654000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EF6 PUSH1 0x17 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F01 DUP3 PUSH2 0x2EC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F23 DUP2 PUSH2 0x2EEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537570706C792045786163742066756E64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F5E PUSH1 0x11 DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2F69 DUP3 PUSH2 0x2F2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8B DUP2 PUSH2 0x2F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F9C DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA7 DUP4 PUSH2 0x24DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2FBF JUMPI PUSH2 0x2FBE PUSH2 0x2B23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75722061726520417574686F72697A6520746F2073656C6C000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF9 PUSH1 0x1A DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x3004 DUP3 PUSH2 0x2FC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3026 DUP2 PUSH2 0x2FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3041 DUP3 PUSH2 0x2430 JUMP JUMPDEST PUSH2 0x304B DUP2 DUP6 PUSH2 0x302D JUMP JUMPDEST SWAP4 POP PUSH2 0x305B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3072 DUP3 DUP6 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP PUSH2 0x307E DUP3 DUP5 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30AE DUP3 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x30B8 DUP2 DUP6 PUSH2 0x3094 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x244A JUMP JUMPDEST PUSH2 0x30D1 DUP2 PUSH2 0x2472 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x30EF PUSH0 DUP4 ADD DUP8 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x30FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x3109 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2648 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x311B DUP2 DUP5 PUSH2 0x30A4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3134 DUP2 PUSH2 0x23A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314F JUMPI PUSH2 0x314E PUSH2 0x2375 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x315C DUP5 DUP3 DUP6 ADD PUSH2 0x3126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP4 INVALID MOD CALLDATACOPY 0xCD LOG1 LT 0x4E 0xE0 MLOAD RETURNDATACOPY ORIGIN PUSH28 0x409F091B38C42803BCEE7F8795BA464BC6B964736F6C634300081500 CALLER ",
							"sourceMap": "435:3092:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;928:35:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3242:282;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2292:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1072:109:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2023:145;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1189:338;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1713:148:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;623:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2401:833:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1535:170;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;590:26:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1869:146:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2176:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:207:8;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:5:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;928:35:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3242:282::-;3327:16;3345:21;3379:17;3429:3;3408:17;;3400:5;:25;;;;:::i;:::-;3399:33;;;;:::i;:::-;3379:53;;3451:13;;;;;;;;;;;3466:9;3443:33;;;;;3242:282;;;;;:::o;2292:101::-;2337:4;2360:25;:15;:23;:25::i;:::-;2353:32;;2292:101;:::o;4787:132:5:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1072:109:17:-;1158:15;1143:12;:30;;;;;;:::i;:::-;;1072:109;:::o;2023:145::-;2079:4;2098:15;2116:4;:14;2121:8;2116:14;;;;;;;;;;;2098:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2148:4;:10;;;2141:17;;;2023:145;;;:::o;1189:338::-;1260:15;1278:25;:15;:23;:25::i;:::-;1260:43;;1314:30;1324:10;1336:7;1314:9;:30::i;:::-;1355:31;1368:7;1377:8;1355:12;:31::i;:::-;1413:22;;;;;;;;1417:10;1413:22;;;;;;1429:5;1413:22;;;1398:4;:13;1403:7;1398:13;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1475:5;1446:6;:19;1454:10;1446:19;;;;;;;;;;;;;;;:28;1466:7;1446:28;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1490:27;:15;:25;:27::i;:::-;1249:278;1189:338;;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;1713:148:17:-;1767:4;1784:11;1797:17;1805:8;1797:7;:17::i;:::-;1784:30;;1832:6;:11;1839:3;1832:11;;;;;;;;;;;;;;;:21;1844:8;1832:21;;;;;;;;;;;;;;;;;;;;;1825:28;;;1713:148;;;:::o;623:37::-;;;;:::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;2401:833:17:-;2471:18;2492:16;2500:7;2492;:16::i;:::-;2471:37;;2557:4;2527:34;;:6;:18;2534:10;2527:18;;;;;;;;;;;;;;;:27;2546:7;2527:27;;;;;;;;;;;;;;;;;;;;;:34;;;2519:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2599:13;2615:10;2599:26;;2636:13;2652:4;:13;2657:7;2652:13;;;;;;;;;;;:19;;;2636:35;;2704:5;2690:19;;:10;:19;;;2682:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2769:5;2756:9;:18;2748:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2851:37;2861:10;2873:5;2880:7;2851:9;:37::i;:::-;2951:17;3001:3;2980:17;;2972:5;:25;;;;:::i;:::-;2971:33;;;;:::i;:::-;2951:53;;3046:13;;;;;;;;;;;3038:31;;:42;3070:9;3038:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3185:10;3177:28;;:47;3214:9;3206:5;:17;;;;:::i;:::-;3177:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:784;;;;2401:833;:::o;1535:170::-;1607:16;1615:7;1607;:16::i;:::-;1593:30;;:10;:30;;;1585:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1693:4;1665:6;:18;1672:10;1665:18;;;;;;;;;;;;;;;:27;1684:7;1665:27;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1535:170;:::o;4985:208:5:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:8:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;590:26:17:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3928:153:5:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1869:146:17:-;1924:4;1941:10;1954:16;1962:7;1954;:16::i;:::-;1941:29;;1988:6;:10;1995:2;1988:10;;;;;;;;;;;;;;;:19;1999:7;1988:19;;;;;;;;;;;;;;;;;;;;;1981:26;;;1869:146;;;:::o;2176:108::-;2230:7;2265:3;:11;;;2258:18;;2176:108;;;:::o;1561:300:5:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;14418:120:5:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;827:112:11:-;892:7;918;:14;;;911:21;;827:112;;;:::o;10633:100:5:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;1922:167:8:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;945:123:11:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;15591:312:5:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;12013:460::-;12112:1;12098:16;;:2;:16;;;12094:87;;12167:1;12137:33;;;;;;;;;;;:::i;:::-;;;;;;;;12094:87;12190:21;12214:32;12222:2;12226:7;12243:1;12214:7;:32::i;:::-;12190:56;;12285:1;12260:27;;:13;:27;;;12256:211;;12333:7;12310:31;;;;;;;;;;;:::i;:::-;;;;;;;;12256:211;12379:4;12362:21;;:13;:21;;;12358:109;;12427:4;12433:7;12442:13;12406:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;12358:109;12084:389;12013:460;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;762:146:13:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:5:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;637:698:12:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;6376:272:5:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;12214:916:15:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:118::-;5602:24;5620:5;5602:24;:::i;:::-;5597:3;5590:37;5515:118;;:::o;5639:332::-;5760:4;5798:2;5787:9;5783:18;5775:26;;5811:71;5879:1;5868:9;5864:17;5855:6;5811:71;:::i;:::-;5892:72;5960:2;5949:9;5945:18;5936:6;5892:72;:::i;:::-;5639:332;;;;;:::o;5977:474::-;6045:6;6053;6102:2;6090:9;6081:7;6077:23;6073:32;6070:119;;;6108:79;;:::i;:::-;6070:119;6228:1;6253:53;6298:7;6289:6;6278:9;6274:22;6253:53;:::i;:::-;6243:63;;6199:117;6355:2;6381:53;6426:7;6417:6;6406:9;6402:22;6381:53;:::i;:::-;6371:63;;6326:118;5977:474;;;;;:::o;6457:222::-;6550:4;6588:2;6577:9;6573:18;6565:26;;6601:71;6669:1;6658:9;6654:17;6645:6;6601:71;:::i;:::-;6457:222;;;;:::o;6685:117::-;6794:1;6791;6784:12;6808:117;6917:1;6914;6907:12;6931:180;6979:77;6976:1;6969:88;7076:4;7073:1;7066:15;7100:4;7097:1;7090:15;7117:281;7200:27;7222:4;7200:27;:::i;:::-;7192:6;7188:40;7330:6;7318:10;7315:22;7294:18;7282:10;7279:34;7276:62;7273:88;;;7341:18;;:::i;:::-;7273:88;7381:10;7377:2;7370:22;7160:238;7117:281;;:::o;7404:129::-;7438:6;7465:20;;:::i;:::-;7455:30;;7494:33;7522:4;7514:6;7494:33;:::i;:::-;7404:129;;;:::o;7539:308::-;7601:4;7691:18;7683:6;7680:30;7677:56;;;7713:18;;:::i;:::-;7677:56;7751:29;7773:6;7751:29;:::i;:::-;7743:37;;7835:4;7829;7825:15;7817:23;;7539:308;;;:::o;7853:146::-;7950:6;7945:3;7940;7927:30;7991:1;7982:6;7977:3;7973:16;7966:27;7853:146;;;:::o;8005:425::-;8083:5;8108:66;8124:49;8166:6;8124:49;:::i;:::-;8108:66;:::i;:::-;8099:75;;8197:6;8190:5;8183:21;8235:4;8228:5;8224:16;8273:3;8264:6;8259:3;8255:16;8252:25;8249:112;;;8280:79;;:::i;:::-;8249:112;8370:54;8417:6;8412:3;8407;8370:54;:::i;:::-;8089:341;8005:425;;;;;:::o;8450:340::-;8506:5;8555:3;8548:4;8540:6;8536:17;8532:27;8522:122;;8563:79;;:::i;:::-;8522:122;8680:6;8667:20;8705:79;8780:3;8772:6;8765:4;8757:6;8753:17;8705:79;:::i;:::-;8696:88;;8512:278;8450:340;;;;:::o;8796:509::-;8865:6;8914:2;8902:9;8893:7;8889:23;8885:32;8882:119;;;8920:79;;:::i;:::-;8882:119;9068:1;9057:9;9053:17;9040:31;9098:18;9090:6;9087:30;9084:117;;;9120:79;;:::i;:::-;9084:117;9225:63;9280:7;9271:6;9260:9;9256:22;9225:63;:::i;:::-;9215:73;;9011:287;8796:509;;;;:::o;9311:654::-;9389:6;9397;9446:2;9434:9;9425:7;9421:23;9417:32;9414:119;;;9452:79;;:::i;:::-;9414:119;9600:1;9589:9;9585:17;9572:31;9630:18;9622:6;9619:30;9616:117;;;9652:79;;:::i;:::-;9616:117;9757:63;9812:7;9803:6;9792:9;9788:22;9757:63;:::i;:::-;9747:73;;9543:287;9869:2;9895:53;9940:7;9931:6;9920:9;9916:22;9895:53;:::i;:::-;9885:63;;9840:118;9311:654;;;;;:::o;9971:329::-;10030:6;10079:2;10067:9;10058:7;10054:23;10050:32;10047:119;;;10085:79;;:::i;:::-;10047:119;10205:1;10230:53;10275:7;10266:6;10255:9;10251:22;10230:53;:::i;:::-;10220:63;;10176:117;9971:329;;;;:::o;10306:116::-;10376:21;10391:5;10376:21;:::i;:::-;10369:5;10366:32;10356:60;;10412:1;10409;10402:12;10356:60;10306:116;:::o;10428:133::-;10471:5;10509:6;10496:20;10487:29;;10525:30;10549:5;10525:30;:::i;:::-;10428:133;;;;:::o;10567:468::-;10632:6;10640;10689:2;10677:9;10668:7;10664:23;10660:32;10657:119;;;10695:79;;:::i;:::-;10657:119;10815:1;10840:53;10885:7;10876:6;10865:9;10861:22;10840:53;:::i;:::-;10830:63;;10786:117;10942:2;10968:50;11010:7;11001:6;10990:9;10986:22;10968:50;:::i;:::-;10958:60;;10913:115;10567:468;;;;;:::o;11041:307::-;11102:4;11192:18;11184:6;11181:30;11178:56;;;11214:18;;:::i;:::-;11178:56;11252:29;11274:6;11252:29;:::i;:::-;11244:37;;11336:4;11330;11326:15;11318:23;;11041:307;;;:::o;11354:423::-;11431:5;11456:65;11472:48;11513:6;11472:48;:::i;:::-;11456:65;:::i;:::-;11447:74;;11544:6;11537:5;11530:21;11582:4;11575:5;11571:16;11620:3;11611:6;11606:3;11602:16;11599:25;11596:112;;;11627:79;;:::i;:::-;11596:112;11717:54;11764:6;11759:3;11754;11717:54;:::i;:::-;11437:340;11354:423;;;;;:::o;11796:338::-;11851:5;11900:3;11893:4;11885:6;11881:17;11877:27;11867:122;;11908:79;;:::i;:::-;11867:122;12025:6;12012:20;12050:78;12124:3;12116:6;12109:4;12101:6;12097:17;12050:78;:::i;:::-;12041:87;;11857:277;11796:338;;;;:::o;12140:943::-;12235:6;12243;12251;12259;12308:3;12296:9;12287:7;12283:23;12279:33;12276:120;;;12315:79;;:::i;:::-;12276:120;12435:1;12460:53;12505:7;12496:6;12485:9;12481:22;12460:53;:::i;:::-;12450:63;;12406:117;12562:2;12588:53;12633:7;12624:6;12613:9;12609:22;12588:53;:::i;:::-;12578:63;;12533:118;12690:2;12716:53;12761:7;12752:6;12741:9;12737:22;12716:53;:::i;:::-;12706:63;;12661:118;12846:2;12835:9;12831:18;12818:32;12877:18;12869:6;12866:30;12863:117;;;12899:79;;:::i;:::-;12863:117;13004:62;13058:7;13049:6;13038:9;13034:22;13004:62;:::i;:::-;12994:72;;12789:287;12140:943;;;;;;;:::o;13089:474::-;13157:6;13165;13214:2;13202:9;13193:7;13189:23;13185:32;13182:119;;;13220:79;;:::i;:::-;13182:119;13340:1;13365:53;13410:7;13401:6;13390:9;13386:22;13365:53;:::i;:::-;13355:63;;13311:117;13467:2;13493:53;13538:7;13529:6;13518:9;13514:22;13493:53;:::i;:::-;13483:63;;13438:118;13089:474;;;;;:::o;13569:180::-;13617:77;13614:1;13607:88;13714:4;13711:1;13704:15;13738:4;13735:1;13728:15;13755:320;13799:6;13836:1;13830:4;13826:12;13816:22;;13883:1;13877:4;13873:12;13904:18;13894:81;;13960:4;13952:6;13948:17;13938:27;;13894:81;14022:2;14014:6;14011:14;13991:18;13988:38;13985:84;;14041:18;;:::i;:::-;13985:84;13806:269;13755:320;;;:::o;14081:442::-;14230:4;14268:2;14257:9;14253:18;14245:26;;14281:71;14349:1;14338:9;14334:17;14325:6;14281:71;:::i;:::-;14362:72;14430:2;14419:9;14415:18;14406:6;14362:72;:::i;:::-;14444;14512:2;14501:9;14497:18;14488:6;14444:72;:::i;:::-;14081:442;;;;;;:::o;14529:180::-;14577:77;14574:1;14567:88;14674:4;14671:1;14664:15;14698:4;14695:1;14688:15;14715:410;14755:7;14778:20;14796:1;14778:20;:::i;:::-;14773:25;;14812:20;14830:1;14812:20;:::i;:::-;14807:25;;14867:1;14864;14860:9;14889:30;14907:11;14889:30;:::i;:::-;14878:41;;15068:1;15059:7;15055:15;15052:1;15049:22;15029:1;15022:9;15002:83;14979:139;;15098:18;;:::i;:::-;14979:139;14763:362;14715:410;;;;:::o;15131:180::-;15179:77;15176:1;15169:88;15276:4;15273:1;15266:15;15300:4;15297:1;15290:15;15317:185;15357:1;15374:20;15392:1;15374:20;:::i;:::-;15369:25;;15408:20;15426:1;15408:20;:::i;:::-;15403:25;;15447:1;15437:35;;15452:18;;:::i;:::-;15437:35;15494:1;15491;15487:9;15482:14;;15317:185;;;;:::o;15508:141::-;15557:4;15580:3;15572:11;;15603:3;15600:1;15593:14;15637:4;15634:1;15624:18;15616:26;;15508:141;;;:::o;15655:93::-;15692:6;15739:2;15734;15727:5;15723:14;15719:23;15709:33;;15655:93;;;:::o;15754:107::-;15798:8;15848:5;15842:4;15838:16;15817:37;;15754:107;;;;:::o;15867:393::-;15936:6;15986:1;15974:10;15970:18;16009:97;16039:66;16028:9;16009:97;:::i;:::-;16127:39;16157:8;16146:9;16127:39;:::i;:::-;16115:51;;16199:4;16195:9;16188:5;16184:21;16175:30;;16248:4;16238:8;16234:19;16227:5;16224:30;16214:40;;15943:317;;15867:393;;;;;:::o;16266:60::-;16294:3;16315:5;16308:12;;16266:60;;;:::o;16332:142::-;16382:9;16415:53;16433:34;16442:24;16460:5;16442:24;:::i;:::-;16433:34;:::i;:::-;16415:53;:::i;:::-;16402:66;;16332:142;;;:::o;16480:75::-;16523:3;16544:5;16537:12;;16480:75;;;:::o;16561:269::-;16671:39;16702:7;16671:39;:::i;:::-;16732:91;16781:41;16805:16;16781:41;:::i;:::-;16773:6;16766:4;16760:11;16732:91;:::i;:::-;16726:4;16719:105;16637:193;16561:269;;;:::o;16836:73::-;16881:3;16836:73;:::o;16915:189::-;16992:32;;:::i;:::-;17033:65;17091:6;17083;17077:4;17033:65;:::i;:::-;16968:136;16915:189;;:::o;17110:186::-;17170:120;17187:3;17180:5;17177:14;17170:120;;;17241:39;17278:1;17271:5;17241:39;:::i;:::-;17214:1;17207:5;17203:13;17194:22;;17170:120;;;17110:186;;:::o;17302:543::-;17403:2;17398:3;17395:11;17392:446;;;17437:38;17469:5;17437:38;:::i;:::-;17521:29;17539:10;17521:29;:::i;:::-;17511:8;17507:44;17704:2;17692:10;17689:18;17686:49;;;17725:8;17710:23;;17686:49;17748:80;17804:22;17822:3;17804:22;:::i;:::-;17794:8;17790:37;17777:11;17748:80;:::i;:::-;17407:431;;17392:446;17302:543;;;:::o;17851:117::-;17905:8;17955:5;17949:4;17945:16;17924:37;;17851:117;;;;:::o;17974:169::-;18018:6;18051:51;18099:1;18095:6;18087:5;18084:1;18080:13;18051:51;:::i;:::-;18047:56;18132:4;18126;18122:15;18112:25;;18025:118;17974:169;;;;:::o;18148:295::-;18224:4;18370:29;18395:3;18389:4;18370:29;:::i;:::-;18362:37;;18432:3;18429:1;18425:11;18419:4;18416:21;18408:29;;18148:295;;;;:::o;18448:1395::-;18565:37;18598:3;18565:37;:::i;:::-;18667:18;18659:6;18656:30;18653:56;;;18689:18;;:::i;:::-;18653:56;18733:38;18765:4;18759:11;18733:38;:::i;:::-;18818:67;18878:6;18870;18864:4;18818:67;:::i;:::-;18912:1;18936:4;18923:17;;18968:2;18960:6;18957:14;18985:1;18980:618;;;;19642:1;19659:6;19656:77;;;19708:9;19703:3;19699:19;19693:26;19684:35;;19656:77;19759:67;19819:6;19812:5;19759:67;:::i;:::-;19753:4;19746:81;19615:222;18950:887;;18980:618;19032:4;19028:9;19020:6;19016:22;19066:37;19098:4;19066:37;:::i;:::-;19125:1;19139:208;19153:7;19150:1;19147:14;19139:208;;;19232:9;19227:3;19223:19;19217:26;19209:6;19202:42;19283:1;19275:6;19271:14;19261:24;;19330:2;19319:9;19315:18;19302:31;;19176:4;19173:1;19169:12;19164:17;;19139:208;;;19375:6;19366:7;19363:19;19360:179;;;19433:9;19428:3;19424:19;19418:26;19476:48;19518:4;19510:6;19506:17;19495:9;19476:48;:::i;:::-;19468:6;19461:64;19383:156;19360:179;19585:1;19581;19573:6;19569:14;19565:22;19559:4;19552:36;18987:611;;;18950:887;;18540:1303;;;18448:1395;;:::o;19849:170::-;19989:22;19985:1;19977:6;19973:14;19966:46;19849:170;:::o;20025:366::-;20167:3;20188:67;20252:2;20247:3;20188:67;:::i;:::-;20181:74;;20264:93;20353:3;20264:93;:::i;:::-;20382:2;20377:3;20373:12;20366:19;;20025:366;;;:::o;20397:419::-;20563:4;20601:2;20590:9;20586:18;20578:26;;20650:9;20644:4;20640:20;20636:1;20625:9;20621:17;20614:47;20678:131;20804:4;20678:131;:::i;:::-;20670:139;;20397:419;;;:::o;20822:173::-;20962:25;20958:1;20950:6;20946:14;20939:49;20822:173;:::o;21001:366::-;21143:3;21164:67;21228:2;21223:3;21164:67;:::i;:::-;21157:74;;21240:93;21329:3;21240:93;:::i;:::-;21358:2;21353:3;21349:12;21342:19;;21001:366;;;:::o;21373:419::-;21539:4;21577:2;21566:9;21562:18;21554:26;;21626:9;21620:4;21616:20;21612:1;21601:9;21597:17;21590:47;21654:131;21780:4;21654:131;:::i;:::-;21646:139;;21373:419;;;:::o;21798:167::-;21938:19;21934:1;21926:6;21922:14;21915:43;21798:167;:::o;21971:366::-;22113:3;22134:67;22198:2;22193:3;22134:67;:::i;:::-;22127:74;;22210:93;22299:3;22210:93;:::i;:::-;22328:2;22323:3;22319:12;22312:19;;21971:366;;;:::o;22343:419::-;22509:4;22547:2;22536:9;22532:18;22524:26;;22596:9;22590:4;22586:20;22582:1;22571:9;22567:17;22560:47;22624:131;22750:4;22624:131;:::i;:::-;22616:139;;22343:419;;;:::o;22768:194::-;22808:4;22828:20;22846:1;22828:20;:::i;:::-;22823:25;;22862:20;22880:1;22862:20;:::i;:::-;22857:25;;22906:1;22903;22899:9;22891:17;;22930:1;22924:4;22921:11;22918:37;;;22935:18;;:::i;:::-;22918:37;22768:194;;;;:::o;22968:176::-;23108:28;23104:1;23096:6;23092:14;23085:52;22968:176;:::o;23150:366::-;23292:3;23313:67;23377:2;23372:3;23313:67;:::i;:::-;23306:74;;23389:93;23478:3;23389:93;:::i;:::-;23507:2;23502:3;23498:12;23491:19;;23150:366;;;:::o;23522:419::-;23688:4;23726:2;23715:9;23711:18;23703:26;;23775:9;23769:4;23765:20;23761:1;23750:9;23746:17;23739:47;23803:131;23929:4;23803:131;:::i;:::-;23795:139;;23522:419;;;:::o;23947:148::-;24049:11;24086:3;24071:18;;23947:148;;;;:::o;24101:390::-;24207:3;24235:39;24268:5;24235:39;:::i;:::-;24290:89;24372:6;24367:3;24290:89;:::i;:::-;24283:96;;24388:65;24446:6;24441:3;24434:4;24427:5;24423:16;24388:65;:::i;:::-;24478:6;24473:3;24469:16;24462:23;;24211:280;24101:390;;;;:::o;24497:435::-;24677:3;24699:95;24790:3;24781:6;24699:95;:::i;:::-;24692:102;;24811:95;24902:3;24893:6;24811:95;:::i;:::-;24804:102;;24923:3;24916:10;;24497:435;;;;;:::o;24938:98::-;24989:6;25023:5;25017:12;25007:22;;24938:98;;;:::o;25042:168::-;25125:11;25159:6;25154:3;25147:19;25199:4;25194:3;25190:14;25175:29;;25042:168;;;;:::o;25216:373::-;25302:3;25330:38;25362:5;25330:38;:::i;:::-;25384:70;25447:6;25442:3;25384:70;:::i;:::-;25377:77;;25463:65;25521:6;25516:3;25509:4;25502:5;25498:16;25463:65;:::i;:::-;25553:29;25575:6;25553:29;:::i;:::-;25548:3;25544:39;25537:46;;25306:283;25216:373;;;;:::o;25595:640::-;25790:4;25828:3;25817:9;25813:19;25805:27;;25842:71;25910:1;25899:9;25895:17;25886:6;25842:71;:::i;:::-;25923:72;25991:2;25980:9;25976:18;25967:6;25923:72;:::i;:::-;26005;26073:2;26062:9;26058:18;26049:6;26005:72;:::i;:::-;26124:9;26118:4;26114:20;26109:2;26098:9;26094:18;26087:48;26152:76;26223:4;26214:6;26152:76;:::i;:::-;26144:84;;25595:640;;;;;;;:::o;26241:141::-;26297:5;26328:6;26322:13;26313:22;;26344:32;26370:5;26344:32;:::i;:::-;26241:141;;;;:::o;26388:349::-;26457:6;26506:2;26494:9;26485:7;26481:23;26477:32;26474:119;;;26512:79;;:::i;:::-;26474:119;26632:1;26657:63;26712:7;26703:6;26692:9;26688:22;26657:63;:::i;:::-;26647:73;;26603:127;26388:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2539800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BuyNFT(uint256)": "infinite",
								"KnowPrice(uint256)": "infinite",
								"SellNft(uint256)": "infinite",
								"SoldNft(uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"baseTokenURI()": "infinite",
								"getApproved(uint256)": "infinite",
								"getBalance(address)": "3357",
								"getTotalToken()": "2547",
								"isApprovedForAll(address,address)": "infinite",
								"isSellNft(uint256)": "infinite",
								"mintNFT(string,uint256)": "infinite",
								"name()": "infinite",
								"nfts(uint256)": "infinite",
								"ownerOf(uint256)": "infinite",
								"royaltyInfo(uint256,uint256)": "infinite",
								"royaltyPercentage()": "2492",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 435,
									"end": 3527,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 658,
									"end": 660,
									"name": "PUSH",
									"source": 17,
									"value": "A"
								},
								{
									"begin": 623,
									"end": 660,
									"name": "PUSH",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 623,
									"end": 660,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 972,
									"end": 1062,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4D79204E66740000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4D4E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1044,
									"end": 1054,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1042,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "A"
								},
								{
									"begin": 1029,
									"end": 1042,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1054,
									"modifierDepth": 1,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 18,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "tag",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 3527,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d93fe0637cda1104ee0513e327b409f091b38c42803bcee7f8795ba464bc6b964736f6c63430008150033",
									".code": [
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "A90D14E2"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "D547CFB7"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "D547CFB7"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "F2A413B5"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "F8B2CB4F"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "A90D14E2"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "7D7F1F3E"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "8A71BB2D"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "A37365E0"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "2A55205A"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "55F804B3"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "55F804B3"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "5A51A885"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "5AFA3A72"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "2A55205A"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "3D0673D4"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "81812FC"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "265AA621"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 435,
											"end": 3527,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 928,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 928,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 928,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 928,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 3242,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "tag",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 3242,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "tag",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3242,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 1072,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1072,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2023,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 2023,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 2023,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 1189,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "tag",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1189,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1713,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 1713,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1713,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 623,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 623,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2401,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "tag",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 2401,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "tag",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1535,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "tag",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1535,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 590,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 590,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "tag",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1869,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1869,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "tag",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1869,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "tag",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 2176,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 2176,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 2176,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 8,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 928,
											"end": 963,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 963,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 928,
											"end": 963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3327,
											"end": 3343,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3366,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3379,
											"end": 3396,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3432,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3405,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 3400,
											"end": 3425,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3425,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 3400,
											"end": 3425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3400,
											"end": 3425,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 3400,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3399,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 3399,
											"end": 3432,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3399,
											"end": 3432,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3399,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 3399,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3399,
											"end": 3432,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 3399,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3379,
											"end": 3432,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3379,
											"end": 3432,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3464,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3476,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3242,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2337,
											"end": 2341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 2360,
											"end": 2375,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 2360,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 2360,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2353,
											"end": 2385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1158,
											"end": 1173,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1155,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 1143,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "tag",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1173,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1072,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2120,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2129,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2152,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2141,
											"end": 2158,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2141,
											"end": 2158,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2141,
											"end": 2158,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 1278,
											"end": 1293,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 1278,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1303,
											"name": "tag",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 1278,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1260,
											"end": 1303,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1314,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 1324,
											"end": 1334,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1314,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 1314,
											"end": 1344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1314,
											"end": 1344,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 1314,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1377,
											"end": 1385,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 1355,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 1355,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1429,
											"end": 1434,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1402,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1410,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1411,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1398,
											"end": 1435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1473,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1446,
											"end": 1480,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1490,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 1490,
											"end": 1505,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 1490,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 1490,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1490,
											"end": 1517,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 1490,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1249,
											"end": 1527,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1189,
											"end": 1527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1771,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1795,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1797,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1797,
											"end": 1814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1797,
											"end": 1814,
											"name": "tag",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 1797,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1842,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1852,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1853,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1853,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1853,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 623,
											"end": 660,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 623,
											"end": 660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 2492,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "tag",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2544,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2545,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2553,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2527,
											"end": 2554,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 2519,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "tag",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 2519,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2625,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2599,
											"end": 2625,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2599,
											"end": 2625,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2636,
											"end": 2649,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2664,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2671,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2652,
											"end": 2671,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2652,
											"end": 2671,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2636,
											"end": 2671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2704,
											"end": 2709,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2690,
											"end": 2709,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2709,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2690,
											"end": 2700,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2690,
											"end": 2709,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2709,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2690,
											"end": 2709,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 2682,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "tag",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 2682,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2774,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2756,
											"end": 2765,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 2748,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "tag",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 2748,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2851,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 2861,
											"end": 2871,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2851,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 2851,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2851,
											"end": 2888,
											"name": "tag",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 2851,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2951,
											"end": 2968,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3004,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 2980,
											"end": 2997,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 2980,
											"end": 2997,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 2972,
											"end": 2997,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2997,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 2972,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2997,
											"name": "tag",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 2972,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 2971,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "tag",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 2971,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2951,
											"end": 3004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2951,
											"end": 3004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3059,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3069,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3069,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "PUSH",
											"source": 17,
											"value": "8FC"
										},
										{
											"begin": 3070,
											"end": 3079,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3038,
											"end": 3080,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "PUSH",
											"source": 17,
											"value": "8FC"
										},
										{
											"begin": 3214,
											"end": 3223,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3206,
											"end": 3223,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3223,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 3206,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3206,
											"end": 3223,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3206,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3177,
											"end": 3224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2450,
											"end": 3234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2450,
											"end": 3234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2450,
											"end": 3234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2450,
											"end": 3234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 3234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1607,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 1615,
											"end": 1622,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1607,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1607,
											"end": 1623,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 1607,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1593,
											"end": 1603,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 1585,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "tag",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 1585,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1693,
											"end": 1697,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1682,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1683,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1697,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 590,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 590,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 590,
											"end": 616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 590,
											"end": 616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1951,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1954,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1954,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1954,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1954,
											"end": 1970,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 1954,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1941,
											"end": 1970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1994,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 1997,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2006,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1988,
											"end": 2007,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1981,
											"end": 2007,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1981,
											"end": 2007,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1981,
											"end": 2007,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 2015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2230,
											"end": 2237,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2268,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "BALANCE",
											"source": 17
										},
										{
											"begin": 2258,
											"end": 2276,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2258,
											"end": 2276,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2176,
											"end": 2284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12098,
											"end": 12114,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 12137,
											"end": 12170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12170,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 12094,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12243,
											"end": 12244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 12214,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12260,
											"end": 12273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12260,
											"end": 12287,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12333,
											"end": 12340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 12310,
											"end": 12341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12341,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 12256,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12379,
											"end": 12383,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12362,
											"end": 12375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12362,
											"end": 12383,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12427,
											"end": 12431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 12455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 12406,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12456,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 12358,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12084,
											"end": 12473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 12,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 5620,
											"end": 5625,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 5602,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "tag",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5590,
											"end": 5627,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5760,
											"end": 5764,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5796,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5775,
											"end": 5801,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5775,
											"end": 5801,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5877,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5855,
											"end": 5861,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 5811,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 5811,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 5960,
											"end": 5962,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5936,
											"end": 5942,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 5892,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 5892,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5971,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5639,
											"end": 5971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6102,
											"end": 6104,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6081,
											"end": 6088,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6077,
											"end": 6100,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6073,
											"end": 6105,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 6108,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "tag",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 6108,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 6070,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 6298,
											"end": 6305,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6278,
											"end": 6287,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 6253,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6199,
											"end": 6316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 6426,
											"end": 6433,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6402,
											"end": 6424,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 6381,
											"end": 6434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 6381,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6371,
											"end": 6434,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6371,
											"end": 6434,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6326,
											"end": 6444,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 6451,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5977,
											"end": 6451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6550,
											"end": 6554,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6590,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6586,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6573,
											"end": 6591,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6667,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6654,
											"end": 6671,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 6601,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 6601,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6457,
											"end": 6679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6457,
											"end": 6679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 6685,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6794,
											"end": 6795,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6792,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6784,
											"end": 6796,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6808,
											"end": 6925,
											"name": "tag",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 6808,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6915,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6931,
											"end": 7111,
											"name": "tag",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 6931,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6979,
											"end": 7056,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6976,
											"end": 6977,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 7057,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7076,
											"end": 7080,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7097,
											"end": 7098,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7105,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "tag",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 7200,
											"end": 7227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 7200,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7188,
											"end": 7228,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7318,
											"end": 7328,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7315,
											"end": 7337,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7294,
											"end": 7312,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7292,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7279,
											"end": 7313,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7276,
											"end": 7338,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 7341,
											"end": 7359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 7273,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7381,
											"end": 7391,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7377,
											"end": 7379,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7117,
											"end": 7398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7117,
											"end": 7398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "tag",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7438,
											"end": 7444,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 7465,
											"end": 7485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 7465,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7455,
											"end": 7485,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7455,
											"end": 7485,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 7494,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 7494,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7683,
											"end": 7689,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7680,
											"end": 7710,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 7713,
											"end": 7731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 7677,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 7773,
											"end": 7779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 7751,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 7751,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7743,
											"end": 7780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7835,
											"end": 7839,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7829,
											"end": 7833,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7825,
											"end": 7840,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7817,
											"end": 7840,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7817,
											"end": 7840,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7539,
											"end": 7847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7539,
											"end": 7847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "tag",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7950,
											"end": 7956,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7940,
											"end": 7943,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7927,
											"end": 7957,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 7991,
											"end": 7992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7977,
											"end": 7980,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7973,
											"end": 7989,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7966,
											"end": 7993,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7999,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7853,
											"end": 7999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "tag",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8083,
											"end": 8088,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 8124,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 8124,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 8108,
											"end": 8174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 8108,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8099,
											"end": 8174,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8099,
											"end": 8174,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8190,
											"end": 8195,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8183,
											"end": 8204,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8235,
											"end": 8239,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8273,
											"end": 8276,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8264,
											"end": 8270,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8259,
											"end": 8262,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 8280,
											"end": 8359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 8280,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 8249,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 8417,
											"end": 8423,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8407,
											"end": 8410,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 8370,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 8370,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8089,
											"end": 8430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8005,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "tag",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8506,
											"end": 8511,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8555,
											"end": 8558,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8548,
											"end": 8552,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 8540,
											"end": 8546,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8536,
											"end": 8553,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8532,
											"end": 8559,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 8563,
											"end": 8642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 8563,
											"end": 8642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 8522,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 8780,
											"end": 8783,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8765,
											"end": 8769,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8757,
											"end": 8763,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8753,
											"end": 8770,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8696,
											"end": 8784,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8696,
											"end": 8784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8512,
											"end": 8790,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8790,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8865,
											"end": 8871,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8916,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8902,
											"end": 8911,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8893,
											"end": 8900,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8889,
											"end": 8912,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8885,
											"end": 8917,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 8920,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 8882,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9068,
											"end": 9069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9053,
											"end": 9070,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9040,
											"end": 9071,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9087,
											"end": 9117,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 9120,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 9120,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "tag",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 9084,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 9280,
											"end": 9287,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9271,
											"end": 9277,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9260,
											"end": 9269,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9256,
											"end": 9278,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 9225,
											"end": 9288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9215,
											"end": 9288,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9215,
											"end": 9288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9011,
											"end": 9298,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8796,
											"end": 9305,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8796,
											"end": 9305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9389,
											"end": 9395,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9446,
											"end": 9448,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9443,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9425,
											"end": 9432,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9421,
											"end": 9444,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9417,
											"end": 9449,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 9452,
											"end": 9531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "tag",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 9452,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 9414,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9600,
											"end": 9601,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9598,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9585,
											"end": 9602,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9572,
											"end": 9603,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9628,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9619,
											"end": 9649,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 9652,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 9652,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 9616,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 9788,
											"end": 9810,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 9757,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 9757,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9543,
											"end": 9830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9869,
											"end": 9871,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9931,
											"end": 9937,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 9916,
											"end": 9938,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 9895,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 9895,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9885,
											"end": 9948,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9885,
											"end": 9948,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9840,
											"end": 9958,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9311,
											"end": 9965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9311,
											"end": 9965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10030,
											"end": 10036,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10081,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10076,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10058,
											"end": 10065,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10054,
											"end": 10077,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10050,
											"end": 10082,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 10085,
											"end": 10164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 10085,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 10047,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 10275,
											"end": 10282,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10266,
											"end": 10272,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10251,
											"end": 10273,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 10230,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 10230,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10220,
											"end": 10283,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10220,
											"end": 10283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10176,
											"end": 10293,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9971,
											"end": 10300,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9971,
											"end": 10300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10306,
											"end": 10422,
											"name": "tag",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 10306,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 10391,
											"end": 10396,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 10376,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "tag",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 10376,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10366,
											"end": 10398,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10412,
											"end": 10413,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10409,
											"end": 10410,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10402,
											"end": 10414,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "tag",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 10356,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10306,
											"end": 10422,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10306,
											"end": 10422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "tag",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10515,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10496,
											"end": 10516,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10487,
											"end": 10516,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10487,
											"end": 10516,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 10525,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10428,
											"end": 10561,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10428,
											"end": 10561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10632,
											"end": 10638,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10646,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10689,
											"end": 10691,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10677,
											"end": 10686,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10668,
											"end": 10675,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10664,
											"end": 10687,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10660,
											"end": 10692,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 10695,
											"end": 10774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "tag",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 10695,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "tag",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 10657,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10815,
											"end": 10816,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 10885,
											"end": 10892,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10876,
											"end": 10882,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10865,
											"end": 10874,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10861,
											"end": 10883,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 10840,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 10840,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10830,
											"end": 10893,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10830,
											"end": 10893,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10786,
											"end": 10903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10942,
											"end": 10944,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 11010,
											"end": 11017,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11001,
											"end": 11007,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10990,
											"end": 10999,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10986,
											"end": 11008,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 10968,
											"end": 11018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 10968,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10958,
											"end": 11018,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10958,
											"end": 11018,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10913,
											"end": 11028,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10567,
											"end": 11035,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10567,
											"end": 11035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11102,
											"end": 11106,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11184,
											"end": 11190,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11181,
											"end": 11211,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 11214,
											"end": 11232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "tag",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 11178,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 11252,
											"end": 11281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 11252,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11336,
											"end": 11340,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11330,
											"end": 11334,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11326,
											"end": 11341,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11318,
											"end": 11341,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11318,
											"end": 11341,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11041,
											"end": 11348,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11041,
											"end": 11348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "tag",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11431,
											"end": 11436,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 11513,
											"end": 11519,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 11472,
											"end": 11520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 11472,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 11456,
											"end": 11521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "tag",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 11456,
											"end": 11521,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11447,
											"end": 11521,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11447,
											"end": 11521,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11537,
											"end": 11542,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11530,
											"end": 11551,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11582,
											"end": 11586,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11575,
											"end": 11580,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11571,
											"end": 11587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11620,
											"end": 11623,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 11617,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11606,
											"end": 11609,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11602,
											"end": 11618,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11599,
											"end": 11624,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 11627,
											"end": 11706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 11627,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 11596,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 11764,
											"end": 11770,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11759,
											"end": 11762,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11754,
											"end": 11757,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 11717,
											"end": 11771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "tag",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 11717,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11437,
											"end": 11777,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11354,
											"end": 11777,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11354,
											"end": 11777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "tag",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11851,
											"end": 11856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11903,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11893,
											"end": 11897,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 11885,
											"end": 11891,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11881,
											"end": 11898,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11877,
											"end": 11904,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 11908,
											"end": 11987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 11908,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 11867,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12012,
											"end": 12032,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 12124,
											"end": 12127,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12116,
											"end": 12122,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12109,
											"end": 12113,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12101,
											"end": 12107,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12097,
											"end": 12114,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 12050,
											"end": 12128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 12050,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12041,
											"end": 12128,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12041,
											"end": 12128,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11857,
											"end": 12134,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12134,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12235,
											"end": 12241,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12243,
											"end": 12249,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12251,
											"end": 12257,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12259,
											"end": 12265,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12308,
											"end": 12311,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 12296,
											"end": 12305,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12287,
											"end": 12294,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12283,
											"end": 12306,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12279,
											"end": 12312,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 12315,
											"end": 12394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 12315,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "tag",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 12276,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 12505,
											"end": 12512,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12496,
											"end": 12502,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12485,
											"end": 12494,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 12460,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 12460,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12450,
											"end": 12513,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 12450,
											"end": 12513,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12406,
											"end": 12523,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12562,
											"end": 12564,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 12633,
											"end": 12640,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12624,
											"end": 12630,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12613,
											"end": 12622,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12609,
											"end": 12631,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 12588,
											"end": 12641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "tag",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 12588,
											"end": 12641,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12578,
											"end": 12641,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12578,
											"end": 12641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12533,
											"end": 12651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12690,
											"end": 12692,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 12761,
											"end": 12768,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12752,
											"end": 12758,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12741,
											"end": 12750,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12737,
											"end": 12759,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 12716,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "tag",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 12716,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 12769,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 12769,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12661,
											"end": 12779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12846,
											"end": 12848,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12818,
											"end": 12850,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 12877,
											"end": 12895,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12869,
											"end": 12875,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12866,
											"end": 12896,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 12899,
											"end": 12978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "tag",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 12899,
											"end": 12978,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 12863,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 13058,
											"end": 13065,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13049,
											"end": 13055,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13038,
											"end": 13047,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 13034,
											"end": 13056,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 13004,
											"end": 13066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "tag",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 13004,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12994,
											"end": 13066,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12994,
											"end": 13066,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12789,
											"end": 13076,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12140,
											"end": 13083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "tag",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13157,
											"end": 13163,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13165,
											"end": 13171,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13214,
											"end": 13216,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13202,
											"end": 13211,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13193,
											"end": 13200,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13189,
											"end": 13212,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13185,
											"end": 13217,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 13220,
											"end": 13299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 13220,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 13182,
											"end": 13301,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13340,
											"end": 13341,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 13410,
											"end": 13417,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13401,
											"end": 13407,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13390,
											"end": 13399,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13386,
											"end": 13408,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 13365,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 13365,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13355,
											"end": 13418,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13355,
											"end": 13418,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13311,
											"end": 13428,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13467,
											"end": 13469,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 13538,
											"end": 13545,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13529,
											"end": 13535,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13518,
											"end": 13527,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13514,
											"end": 13536,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 13493,
											"end": 13546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13483,
											"end": 13546,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13483,
											"end": 13546,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13438,
											"end": 13556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13563,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13569,
											"end": 13749,
											"name": "tag",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 13569,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13617,
											"end": 13694,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13614,
											"end": 13615,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13607,
											"end": 13695,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13714,
											"end": 13718,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 13704,
											"end": 13719,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13738,
											"end": 13742,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13743,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "tag",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13799,
											"end": 13805,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13836,
											"end": 13837,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 13830,
											"end": 13834,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13826,
											"end": 13838,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 13816,
											"end": 13838,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13816,
											"end": 13838,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13883,
											"end": 13884,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13877,
											"end": 13881,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13873,
											"end": 13885,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13904,
											"end": 13922,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13960,
											"end": 13964,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 13952,
											"end": 13958,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13948,
											"end": 13965,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13938,
											"end": 13965,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13938,
											"end": 13965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "tag",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 13894,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14011,
											"end": 14025,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13988,
											"end": 14026,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 14041,
											"end": 14059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 13985,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13806,
											"end": 14075,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13755,
											"end": 14075,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13755,
											"end": 14075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "tag",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14230,
											"end": 14234,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14268,
											"end": 14270,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 14257,
											"end": 14266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14253,
											"end": 14271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14245,
											"end": 14271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14245,
											"end": 14271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 14349,
											"end": 14350,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14338,
											"end": 14347,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14334,
											"end": 14351,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14325,
											"end": 14331,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 14281,
											"end": 14352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 14281,
											"end": 14352,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 14430,
											"end": 14432,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14419,
											"end": 14428,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14415,
											"end": 14433,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14406,
											"end": 14412,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 14362,
											"end": 14434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "tag",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 14362,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 14512,
											"end": 14514,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14501,
											"end": 14510,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 14444,
											"end": 14516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "tag",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 14444,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14081,
											"end": 14523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14529,
											"end": 14709,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 14529,
											"end": 14709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14577,
											"end": 14654,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14574,
											"end": 14575,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14567,
											"end": 14655,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14674,
											"end": 14678,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 14671,
											"end": 14672,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 14664,
											"end": 14679,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14698,
											"end": 14702,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14695,
											"end": 14696,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14688,
											"end": 14703,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "tag",
											"source": 18,
											"value": "196"
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14755,
											"end": 14762,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 14796,
											"end": 14797,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 14778,
											"end": 14798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "tag",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 14778,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14773,
											"end": 14798,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14773,
											"end": 14798,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 14830,
											"end": 14831,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 14812,
											"end": 14832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 14812,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14807,
											"end": 14832,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14807,
											"end": 14832,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14867,
											"end": 14868,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14864,
											"end": 14865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14860,
											"end": 14869,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 14907,
											"end": 14918,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 14889,
											"end": 14919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 14889,
											"end": 14919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14878,
											"end": 14919,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14878,
											"end": 14919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15068,
											"end": 15069,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15059,
											"end": 15066,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15055,
											"end": 15070,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15053,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15049,
											"end": 15071,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 15029,
											"end": 15030,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15022,
											"end": 15031,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 15002,
											"end": 15085,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 15098,
											"end": 15116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "tag",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 15098,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "tag",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 14979,
											"end": 15118,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14763,
											"end": 15125,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 15125,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14715,
											"end": 15125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15131,
											"end": 15311,
											"name": "tag",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 15131,
											"end": 15311,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15179,
											"end": 15256,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15176,
											"end": 15177,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15169,
											"end": 15257,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15276,
											"end": 15280,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 15273,
											"end": 15274,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 15266,
											"end": 15281,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15300,
											"end": 15304,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 15297,
											"end": 15298,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15290,
											"end": 15305,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15357,
											"end": 15358,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 15392,
											"end": 15393,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 15374,
											"end": 15394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 15374,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15369,
											"end": 15394,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15369,
											"end": 15394,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 15426,
											"end": 15427,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 15408,
											"end": 15428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "tag",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 15408,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15403,
											"end": 15428,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15403,
											"end": 15428,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15447,
											"end": 15448,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 15452,
											"end": 15470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 15452,
											"end": 15470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "tag",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 15437,
											"end": 15472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15494,
											"end": 15495,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15491,
											"end": 15492,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15487,
											"end": 15496,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 15482,
											"end": 15496,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15482,
											"end": 15496,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15317,
											"end": 15502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15317,
											"end": 15502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "tag",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15557,
											"end": 15561,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15580,
											"end": 15583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15572,
											"end": 15583,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15572,
											"end": 15583,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15603,
											"end": 15606,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15600,
											"end": 15601,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15607,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15637,
											"end": 15641,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15634,
											"end": 15635,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15624,
											"end": 15642,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 15616,
											"end": 15642,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15616,
											"end": 15642,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15508,
											"end": 15649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15508,
											"end": 15649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15692,
											"end": 15698,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15739,
											"end": 15741,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15734,
											"end": 15736,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 15727,
											"end": 15732,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15723,
											"end": 15737,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15719,
											"end": 15742,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 15709,
											"end": 15742,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15709,
											"end": 15742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15655,
											"end": 15748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "tag",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15798,
											"end": 15806,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15848,
											"end": 15853,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15842,
											"end": 15846,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15838,
											"end": 15854,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 15817,
											"end": 15854,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15817,
											"end": 15854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15754,
											"end": 15861,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15754,
											"end": 15861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "tag",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15936,
											"end": 15942,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15987,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 15974,
											"end": 15984,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15970,
											"end": 15988,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 16039,
											"end": 16105,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16028,
											"end": 16037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 16009,
											"end": 16106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "tag",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 16009,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 16157,
											"end": 16165,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 16127,
											"end": 16166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "tag",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16115,
											"end": 16166,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 16115,
											"end": 16166,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16199,
											"end": 16203,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 16195,
											"end": 16204,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 16188,
											"end": 16193,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16184,
											"end": 16205,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 16175,
											"end": 16205,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 16175,
											"end": 16205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16248,
											"end": 16252,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 16238,
											"end": 16246,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 16234,
											"end": 16253,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 16227,
											"end": 16232,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16224,
											"end": 16254,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 16214,
											"end": 16254,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16214,
											"end": 16254,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15943,
											"end": 16260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15943,
											"end": 16260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15867,
											"end": 16260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15867,
											"end": 16260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16294,
											"end": 16297,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16320,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16308,
											"end": 16320,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16308,
											"end": 16320,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16266,
											"end": 16326,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16266,
											"end": 16326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16382,
											"end": 16391,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 16460,
											"end": 16465,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 16442,
											"end": 16466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "tag",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 16442,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 16433,
											"end": 16467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "tag",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 16433,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 16415,
											"end": 16468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "tag",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 16415,
											"end": 16468,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16402,
											"end": 16468,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16402,
											"end": 16468,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16332,
											"end": 16474,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16332,
											"end": 16474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "tag",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16523,
											"end": 16526,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16544,
											"end": 16549,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16537,
											"end": 16549,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16537,
											"end": 16549,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16480,
											"end": 16555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16480,
											"end": 16555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "tag",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 16702,
											"end": 16709,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 16671,
											"end": 16710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "tag",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 16671,
											"end": 16710,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "689"
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 16805,
											"end": 16821,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 16781,
											"end": 16822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "tag",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 16781,
											"end": 16822,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16773,
											"end": 16779,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16766,
											"end": 16770,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16760,
											"end": 16771,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 16732,
											"end": 16823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "tag",
											"source": 18,
											"value": "689"
										},
										{
											"begin": 16732,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16726,
											"end": 16730,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16719,
											"end": 16824,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 16637,
											"end": 16830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16561,
											"end": 16830,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16561,
											"end": 16830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16836,
											"end": 16909,
											"name": "tag",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 16836,
											"end": 16909,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16881,
											"end": 16884,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16836,
											"end": 16909,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16836,
											"end": 16909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "tag",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 16992,
											"end": 17024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "tag",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 16992,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 17091,
											"end": 17097,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17083,
											"end": 17089,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17077,
											"end": 17081,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 17033,
											"end": 17098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "tag",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 17033,
											"end": 17098,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16968,
											"end": 17104,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16915,
											"end": 17104,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16915,
											"end": 17104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "tag",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "tag",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17187,
											"end": 17190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17180,
											"end": 17185,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17177,
											"end": 17191,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 17278,
											"end": 17279,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17271,
											"end": 17276,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 17241,
											"end": 17280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "tag",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 17241,
											"end": 17280,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17214,
											"end": 17215,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 17207,
											"end": 17212,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17203,
											"end": 17216,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17194,
											"end": 17216,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17194,
											"end": 17216,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "tag",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 17170,
											"end": 17290,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17110,
											"end": 17296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17110,
											"end": 17296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "tag",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17403,
											"end": 17405,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 17398,
											"end": 17401,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17395,
											"end": 17406,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "701"
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 17469,
											"end": 17474,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 17437,
											"end": 17475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "tag",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 17437,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 17539,
											"end": 17549,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 17521,
											"end": 17550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "tag",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 17521,
											"end": 17550,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17511,
											"end": 17519,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17507,
											"end": 17551,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17704,
											"end": 17706,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17692,
											"end": 17702,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17689,
											"end": 17707,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17725,
											"end": 17733,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17710,
											"end": 17733,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17710,
											"end": 17733,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "tag",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 17686,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 17822,
											"end": 17825,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 17804,
											"end": 17826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "tag",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 17804,
											"end": 17826,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17794,
											"end": 17802,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17790,
											"end": 17827,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17777,
											"end": 17788,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 17748,
											"end": 17828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "tag",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 17748,
											"end": 17828,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17407,
											"end": 17838,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17407,
											"end": 17838,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "tag",
											"source": 18,
											"value": "701"
										},
										{
											"begin": 17392,
											"end": 17838,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17302,
											"end": 17845,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17302,
											"end": 17845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17905,
											"end": 17913,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17955,
											"end": 17960,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17949,
											"end": 17953,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17945,
											"end": 17961,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 17924,
											"end": 17961,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17924,
											"end": 17961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17851,
											"end": 17968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17851,
											"end": 17968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "tag",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18018,
											"end": 18024,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 18099,
											"end": 18100,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18095,
											"end": 18101,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 18087,
											"end": 18092,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18084,
											"end": 18085,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 18080,
											"end": 18093,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 18051,
											"end": 18102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "tag",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 18051,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18047,
											"end": 18103,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 18132,
											"end": 18136,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 18126,
											"end": 18130,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18122,
											"end": 18137,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 18112,
											"end": 18137,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18112,
											"end": 18137,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18025,
											"end": 18143,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17974,
											"end": 18143,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17974,
											"end": 18143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "tag",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18224,
											"end": 18228,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 18395,
											"end": 18398,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18389,
											"end": 18393,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 18370,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "tag",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18362,
											"end": 18399,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18432,
											"end": 18435,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18429,
											"end": 18430,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 18425,
											"end": 18436,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 18419,
											"end": 18423,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18416,
											"end": 18437,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 18408,
											"end": 18437,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18408,
											"end": 18437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18148,
											"end": 18443,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18148,
											"end": 18443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "tag",
											"source": 18,
											"value": "206"
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 18598,
											"end": 18601,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 18565,
											"end": 18602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "tag",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 18565,
											"end": 18602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18667,
											"end": 18685,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18659,
											"end": 18665,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18656,
											"end": 18686,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 18689,
											"end": 18707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "tag",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 18689,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "tag",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 18653,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 18765,
											"end": 18769,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18759,
											"end": 18770,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 18733,
											"end": 18771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "tag",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 18733,
											"end": 18771,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 18878,
											"end": 18884,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18870,
											"end": 18876,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18864,
											"end": 18868,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 18818,
											"end": 18885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "tag",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 18818,
											"end": 18885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18912,
											"end": 18913,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18936,
											"end": 18940,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18923,
											"end": 18940,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18923,
											"end": 18940,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18968,
											"end": 18970,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 18960,
											"end": 18966,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18957,
											"end": 18971,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 18985,
											"end": 18986,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19642,
											"end": 19643,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19659,
											"end": 19665,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19708,
											"end": 19717,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19703,
											"end": 19706,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 19699,
											"end": 19718,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19693,
											"end": 19719,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 19684,
											"end": 19719,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19684,
											"end": 19719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "tag",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 19656,
											"end": 19733,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 19819,
											"end": 19825,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19812,
											"end": 19817,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 19759,
											"end": 19826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "tag",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 19759,
											"end": 19826,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19753,
											"end": 19757,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19746,
											"end": 19827,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 19615,
											"end": 19837,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "tag",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 18980,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19032,
											"end": 19036,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 19028,
											"end": 19037,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 19020,
											"end": 19026,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19016,
											"end": 19038,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 19098,
											"end": 19102,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 19066,
											"end": 19103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "tag",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 19066,
											"end": 19103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19125,
											"end": 19126,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "tag",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19153,
											"end": 19160,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19150,
											"end": 19151,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19147,
											"end": 19161,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19232,
											"end": 19241,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19227,
											"end": 19230,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 19223,
											"end": 19242,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19217,
											"end": 19243,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 19209,
											"end": 19215,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19202,
											"end": 19244,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 19283,
											"end": 19284,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 19275,
											"end": 19281,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19261,
											"end": 19285,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19261,
											"end": 19285,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19330,
											"end": 19332,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19319,
											"end": 19328,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19315,
											"end": 19333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19302,
											"end": 19333,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 19302,
											"end": 19333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19176,
											"end": 19180,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19174,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19169,
											"end": 19181,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "tag",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 19139,
											"end": 19347,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19375,
											"end": 19381,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19366,
											"end": 19373,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19363,
											"end": 19382,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19433,
											"end": 19442,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19428,
											"end": 19431,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 19424,
											"end": 19443,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19418,
											"end": 19444,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 19518,
											"end": 19522,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 19510,
											"end": 19516,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 19506,
											"end": 19523,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 19495,
											"end": 19504,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 19476,
											"end": 19524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "tag",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 19476,
											"end": 19524,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19468,
											"end": 19474,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19461,
											"end": 19525,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 19383,
											"end": 19539,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "tag",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 19360,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19585,
											"end": 19586,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 19581,
											"end": 19582,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 19573,
											"end": 19579,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 19569,
											"end": 19583,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 19565,
											"end": 19587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19559,
											"end": 19563,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 19552,
											"end": 19588,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 18987,
											"end": 19598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18987,
											"end": 19598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18987,
											"end": 19598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "tag",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18950,
											"end": 19837,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18540,
											"end": 19843,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18540,
											"end": 19843,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18540,
											"end": 19843,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18448,
											"end": 19843,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18448,
											"end": 19843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 20019,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 19849,
											"end": 20019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19989,
											"end": 20011,
											"name": "PUSH",
											"source": 18,
											"value": "546F6B656E206973206E6F742061742073616C65000000000000000000000000"
										},
										{
											"begin": 19985,
											"end": 19986,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19977,
											"end": 19983,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19973,
											"end": 19987,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19966,
											"end": 20012,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 20019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 20019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "tag",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20167,
											"end": 20170,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 20252,
											"end": 20254,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 20247,
											"end": 20250,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 20188,
											"end": 20255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "tag",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 20188,
											"end": 20255,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20181,
											"end": 20255,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20181,
											"end": 20255,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 20353,
											"end": 20356,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 20264,
											"end": 20357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "tag",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 20264,
											"end": 20357,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20382,
											"end": 20384,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20377,
											"end": 20380,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20373,
											"end": 20385,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20366,
											"end": 20385,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20366,
											"end": 20385,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20025,
											"end": 20391,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20025,
											"end": 20391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "tag",
											"source": 18,
											"value": "237"
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20563,
											"end": 20567,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20601,
											"end": 20603,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20590,
											"end": 20599,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20586,
											"end": 20604,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20578,
											"end": 20604,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20578,
											"end": 20604,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20650,
											"end": 20659,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20644,
											"end": 20648,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20640,
											"end": 20660,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20636,
											"end": 20637,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20625,
											"end": 20634,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20621,
											"end": 20638,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20614,
											"end": 20661,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "733"
										},
										{
											"begin": 20804,
											"end": 20808,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 20678,
											"end": 20809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "tag",
											"source": 18,
											"value": "733"
										},
										{
											"begin": 20678,
											"end": 20809,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20670,
											"end": 20809,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20670,
											"end": 20809,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20397,
											"end": 20816,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20397,
											"end": 20816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20822,
											"end": 20995,
											"name": "tag",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 20822,
											"end": 20995,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20962,
											"end": 20987,
											"name": "PUSH",
											"source": 18,
											"value": "43616E6E6F742062757920796F7572206F776E204E4654000000000000000000"
										},
										{
											"begin": 20958,
											"end": 20959,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20950,
											"end": 20956,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20946,
											"end": 20960,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20939,
											"end": 20988,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20822,
											"end": 20995,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20822,
											"end": 20995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "tag",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21143,
											"end": 21146,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 21228,
											"end": 21230,
											"name": "PUSH",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 21223,
											"end": 21226,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 21164,
											"end": 21231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "tag",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 21164,
											"end": 21231,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21157,
											"end": 21231,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21157,
											"end": 21231,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 21329,
											"end": 21332,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 21240,
											"end": 21333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "tag",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 21240,
											"end": 21333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21358,
											"end": 21360,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21353,
											"end": 21356,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21349,
											"end": 21361,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21342,
											"end": 21361,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21342,
											"end": 21361,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21001,
											"end": 21367,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21001,
											"end": 21367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "tag",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21539,
											"end": 21543,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21577,
											"end": 21579,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21566,
											"end": 21575,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21562,
											"end": 21580,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21554,
											"end": 21580,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21554,
											"end": 21580,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21626,
											"end": 21635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21620,
											"end": 21624,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21616,
											"end": 21636,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 21612,
											"end": 21613,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21601,
											"end": 21610,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21597,
											"end": 21614,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21590,
											"end": 21637,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "739"
										},
										{
											"begin": 21780,
											"end": 21784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 21654,
											"end": 21785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "tag",
											"source": 18,
											"value": "739"
										},
										{
											"begin": 21654,
											"end": 21785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21646,
											"end": 21785,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21646,
											"end": 21785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21373,
											"end": 21792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21373,
											"end": 21792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21798,
											"end": 21965,
											"name": "tag",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 21798,
											"end": 21965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21938,
											"end": 21957,
											"name": "PUSH",
											"source": 18,
											"value": "537570706C792045786163742066756E64000000000000000000000000000000"
										},
										{
											"begin": 21934,
											"end": 21935,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21926,
											"end": 21932,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21922,
											"end": 21936,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21915,
											"end": 21958,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21798,
											"end": 21965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21798,
											"end": 21965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22113,
											"end": 22116,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 22198,
											"end": 22200,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 22193,
											"end": 22196,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 22134,
											"end": 22201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "tag",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 22134,
											"end": 22201,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22127,
											"end": 22201,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22127,
											"end": 22201,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "743"
										},
										{
											"begin": 22299,
											"end": 22302,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 22210,
											"end": 22303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "tag",
											"source": 18,
											"value": "743"
										},
										{
											"begin": 22210,
											"end": 22303,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22328,
											"end": 22330,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22323,
											"end": 22326,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22319,
											"end": 22331,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22312,
											"end": 22331,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22312,
											"end": 22331,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21971,
											"end": 22337,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21971,
											"end": 22337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "tag",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22509,
											"end": 22513,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22547,
											"end": 22549,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22536,
											"end": 22545,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22532,
											"end": 22550,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22524,
											"end": 22550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22524,
											"end": 22550,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22596,
											"end": 22605,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22590,
											"end": 22594,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22586,
											"end": 22606,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22582,
											"end": 22583,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22571,
											"end": 22580,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22567,
											"end": 22584,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22560,
											"end": 22607,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "745"
										},
										{
											"begin": 22750,
											"end": 22754,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 22624,
											"end": 22755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "tag",
											"source": 18,
											"value": "745"
										},
										{
											"begin": 22624,
											"end": 22755,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22616,
											"end": 22755,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22616,
											"end": 22755,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22343,
											"end": 22762,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22343,
											"end": 22762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "tag",
											"source": 18,
											"value": "251"
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22808,
											"end": 22812,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "747"
										},
										{
											"begin": 22846,
											"end": 22847,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 22828,
											"end": 22848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "tag",
											"source": 18,
											"value": "747"
										},
										{
											"begin": 22828,
											"end": 22848,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22823,
											"end": 22848,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22823,
											"end": 22848,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 22880,
											"end": 22881,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 22862,
											"end": 22882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "tag",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 22862,
											"end": 22882,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22857,
											"end": 22882,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22857,
											"end": 22882,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22906,
											"end": 22907,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22903,
											"end": 22904,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22899,
											"end": 22908,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22891,
											"end": 22908,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22891,
											"end": 22908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22930,
											"end": 22931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22924,
											"end": 22928,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22921,
											"end": 22932,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 22935,
											"end": 22953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "tag",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 22935,
											"end": 22953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "tag",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 22918,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22768,
											"end": 22962,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22768,
											"end": 22962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22968,
											"end": 23144,
											"name": "tag",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 22968,
											"end": 23144,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23108,
											"end": 23136,
											"name": "PUSH",
											"source": 18,
											"value": "596F75722061726520417574686F72697A6520746F2073656C6C000000000000"
										},
										{
											"begin": 23104,
											"end": 23105,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23096,
											"end": 23102,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23092,
											"end": 23106,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23085,
											"end": 23137,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22968,
											"end": 23144,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22968,
											"end": 23144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "tag",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23292,
											"end": 23295,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "753"
										},
										{
											"begin": 23377,
											"end": 23379,
											"name": "PUSH",
											"source": 18,
											"value": "1A"
										},
										{
											"begin": 23372,
											"end": 23375,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 23313,
											"end": 23380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "tag",
											"source": 18,
											"value": "753"
										},
										{
											"begin": 23313,
											"end": 23380,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23306,
											"end": 23380,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23306,
											"end": 23380,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 23478,
											"end": 23481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "487"
										},
										{
											"begin": 23389,
											"end": 23482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "tag",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 23389,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23509,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23505,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23498,
											"end": 23510,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23491,
											"end": 23510,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23491,
											"end": 23510,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23150,
											"end": 23516,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23150,
											"end": 23516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "tag",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23688,
											"end": 23692,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23726,
											"end": 23728,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23715,
											"end": 23724,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23711,
											"end": 23729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23703,
											"end": 23729,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23703,
											"end": 23729,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23775,
											"end": 23784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23769,
											"end": 23773,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23765,
											"end": 23785,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 23761,
											"end": 23762,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23750,
											"end": 23759,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23746,
											"end": 23763,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23739,
											"end": 23786,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 23929,
											"end": 23933,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 23803,
											"end": 23934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "tag",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 23803,
											"end": 23934,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23795,
											"end": 23934,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23795,
											"end": 23934,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23522,
											"end": 23941,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23522,
											"end": 23941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "tag",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24049,
											"end": 24060,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24086,
											"end": 24089,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24071,
											"end": 24089,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24071,
											"end": 24089,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23947,
											"end": 24095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23947,
											"end": 24095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "tag",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24207,
											"end": 24210,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 24268,
											"end": 24273,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 24235,
											"end": 24274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "tag",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 24235,
											"end": 24274,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 24372,
											"end": 24378,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24367,
											"end": 24370,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 24290,
											"end": 24379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "tag",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 24290,
											"end": 24379,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24283,
											"end": 24379,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 24283,
											"end": 24379,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 24446,
											"end": 24452,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24441,
											"end": 24444,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24434,
											"end": 24438,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24427,
											"end": 24432,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 24423,
											"end": 24439,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 24388,
											"end": 24453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "tag",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 24388,
											"end": 24453,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24478,
											"end": 24484,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 24473,
											"end": 24476,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24469,
											"end": 24485,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24462,
											"end": 24485,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24462,
											"end": 24485,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24211,
											"end": 24491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "tag",
											"source": 18,
											"value": "275"
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24677,
											"end": 24680,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 24790,
											"end": 24793,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24781,
											"end": 24787,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 24699,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "tag",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 24699,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24692,
											"end": 24794,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24692,
											"end": 24794,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 24902,
											"end": 24905,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24893,
											"end": 24899,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 24811,
											"end": 24906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "tag",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 24811,
											"end": 24906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24804,
											"end": 24906,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24804,
											"end": 24906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24923,
											"end": 24926,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24916,
											"end": 24926,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24916,
											"end": 24926,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24497,
											"end": 24932,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24497,
											"end": 24932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "tag",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24989,
											"end": 24995,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25023,
											"end": 25028,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25017,
											"end": 25029,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 25007,
											"end": 25029,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25007,
											"end": 25029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24938,
											"end": 25036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24938,
											"end": 25036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "tag",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25125,
											"end": 25136,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25154,
											"end": 25157,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25147,
											"end": 25166,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25199,
											"end": 25203,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25194,
											"end": 25197,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25190,
											"end": 25204,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25175,
											"end": 25204,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25175,
											"end": 25204,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25042,
											"end": 25210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "tag",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25302,
											"end": 25305,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 25362,
											"end": 25367,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 25330,
											"end": 25368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "tag",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 25330,
											"end": 25368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 25447,
											"end": 25453,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25442,
											"end": 25445,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 25384,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "tag",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 25384,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25377,
											"end": 25454,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 25377,
											"end": 25454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 25521,
											"end": 25527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25516,
											"end": 25519,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 25509,
											"end": 25513,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25502,
											"end": 25507,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 25498,
											"end": 25514,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 25463,
											"end": 25528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "tag",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 25463,
											"end": 25528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 25575,
											"end": 25581,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 25553,
											"end": 25582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "tag",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 25553,
											"end": 25582,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25548,
											"end": 25551,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 25544,
											"end": 25583,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25537,
											"end": 25583,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25537,
											"end": 25583,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25306,
											"end": 25589,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25216,
											"end": 25589,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25216,
											"end": 25589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "tag",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25790,
											"end": 25794,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25828,
											"end": 25831,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 25817,
											"end": 25826,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25813,
											"end": 25832,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25805,
											"end": 25832,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25805,
											"end": 25832,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 25910,
											"end": 25911,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25899,
											"end": 25908,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25895,
											"end": 25912,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25886,
											"end": 25892,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 25842,
											"end": 25913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "tag",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 25842,
											"end": 25913,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 25991,
											"end": 25993,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25980,
											"end": 25989,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25976,
											"end": 25994,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25967,
											"end": 25973,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 25923,
											"end": 25995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "tag",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 25923,
											"end": 25995,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 26073,
											"end": 26075,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 26062,
											"end": 26071,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26058,
											"end": 26076,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26049,
											"end": 26055,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 26005,
											"end": 26077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "tag",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 26005,
											"end": 26077,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26124,
											"end": 26133,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26118,
											"end": 26122,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26114,
											"end": 26134,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 26109,
											"end": 26111,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 26098,
											"end": 26107,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26094,
											"end": 26112,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26087,
											"end": 26135,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 26223,
											"end": 26227,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26214,
											"end": 26220,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 26152,
											"end": 26228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "tag",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 26152,
											"end": 26228,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26144,
											"end": 26228,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26144,
											"end": 26228,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25595,
											"end": 26235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "tag",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26297,
											"end": 26302,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26328,
											"end": 26334,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26322,
											"end": 26335,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 26313,
											"end": 26335,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26313,
											"end": 26335,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "778"
										},
										{
											"begin": 26370,
											"end": 26375,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 26344,
											"end": 26376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "tag",
											"source": 18,
											"value": "778"
										},
										{
											"begin": 26344,
											"end": 26376,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26241,
											"end": 26382,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26241,
											"end": 26382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "tag",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26457,
											"end": 26463,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26506,
											"end": 26508,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26494,
											"end": 26503,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26485,
											"end": 26492,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26481,
											"end": 26504,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 26477,
											"end": 26509,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "781"
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 26512,
											"end": 26591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "tag",
											"source": 18,
											"value": "781"
										},
										{
											"begin": 26512,
											"end": 26591,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "tag",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 26474,
											"end": 26593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26632,
											"end": 26633,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "782"
										},
										{
											"begin": 26712,
											"end": 26719,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26703,
											"end": 26709,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26692,
											"end": 26701,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26688,
											"end": 26710,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 26657,
											"end": 26720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "tag",
											"source": 18,
											"value": "782"
										},
										{
											"begin": 26657,
											"end": 26720,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26647,
											"end": 26720,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26647,
											"end": 26720,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26603,
											"end": 26730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26388,
											"end": 26737,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26388,
											"end": 26737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"nftmarket.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BuyNFT(uint256)": "a37365e0",
							"KnowPrice(uint256)": "5a51a885",
							"SellNft(uint256)": "a90d14e2",
							"SoldNft(uint256)": "7d7f1f3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseTokenURI()": "d547cfb7",
							"getApproved(uint256)": "081812fc",
							"getBalance(address)": "f8b2cb4f",
							"getTotalToken()": "3d0673d4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isSellNft(uint256)": "f2a413b5",
							"mintNFT(string,uint256)": "5afa3a72",
							"name()": "06fdde03",
							"nfts(uint256)": "265aa621",
							"ownerOf(uint256)": "6352211e",
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"royaltyPercentage()": "8a71bb2d",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"BuyNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIds\",\"type\":\"uint256\"}],\"name\":\"KnowPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SellNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenids\",\"type\":\"uint256\"}],\"name\":\"SoldNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ads\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"}],\"name\":\"isSellNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nftmarket.sol\":\"NFTMarketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"nftmarket.sol\":{\"keccak256\":\"0xbf86d177eaaabffac9f42cb4577f8d19004d73e62f849c1177bf155e7d92c7f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f041fbf575a5d336f1cb5e8735fd95dbb27aeb755dc5a38bc726c6ce7970e9\",\"dweb:/ipfs/QmYkoaSG8iK1CzZpvPVSGHGnFTFhX2rpVxV3sZvYuFmNJ8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 221,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 223,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 227,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 231,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 235,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 241,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1360,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3049,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1514_storage"
							},
							{
								"astId": 3051,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "baseTokenURI",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 3054,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "royaltyPercentage",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 3056,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "contractOwner",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 3067,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "isSell",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 3073,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "isSold",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 3078,
								"contract": "nftmarket.sol:NFTMarketplace",
								"label": "nfts",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(NFT)3061_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_struct(NFT)3061_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.NFT)",
								"numberOfBytes": "32",
								"value": "t_struct(NFT)3061_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1514_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1513,
										"contract": "nftmarket.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFT)3061_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.NFT",
								"members": [
									{
										"astId": 3058,
										"contract": "nftmarket.sol:NFTMarketplace",
										"label": "creator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3060,
										"contract": "nftmarket.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> nftmarket.sol:101:26:\n    |\n101 |     function royaltyInfo(uint256 tokenId, uint256 value) external view override returns (address receiver, uint256 royaltyAmount) {\n    |                          ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3278,
					"file": "nftmarket.sol",
					"start": 3263
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1873
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 1874,
							"src": "132:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1873,
										"src": "140:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
					"exportedSymbols": {
						"IERC165": [
							1873
						],
						"IERC2981": [
							23
						]
					},
					"id": 24,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 24,
							"sourceUnit": 1874,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1873,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"476:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "476:7:1"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "476:7:1"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "194:259:1",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."
							},
							"fullyImplemented": false,
							"id": 23,
							"linearizedBaseContracts": [
								23,
								1873
							],
							"name": "IERC2981",
							"nameLocation": "464:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "490:231:1",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
									},
									"functionSelector": "2a55205a",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "735:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "764:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "756:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "789:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "781:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:58:1"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "836:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "828:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "854:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "846:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:41:1"
									},
									"scope": 23,
									"src": "726:143:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 24,
							"src": "454:417:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:765:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1873
						],
						"IERC4906": [
							47
						],
						"IERC721": [
							1314
						]
					},
					"id": 48,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 25,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 48,
							"sourceUnit": 4,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 26,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1873,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 29,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 48,
							"sourceUnit": 52,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 28,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1314,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 31,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "279:7:2"
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 33,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1314,
										"src": "288:7:2"
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 30,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 47,
							"linearizedBaseContracts": [
								47,
								1314,
								1873
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 39,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 46,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 48,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								39,
								46,
								1213,
								1222,
								1231
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1314
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 49,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 52,
							"sourceUnit": 1315,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1314,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							188
						],
						"IERC20Errors": [
							93
						],
						"IERC721Errors": [
							141
						]
					},
					"id": 189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 53,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 63,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 68,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 73,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 82,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 87,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 92,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 189,
							"src": "278:1764:4",
							"usedErrors": [
								63,
								68,
								73,
								82,
								87,
								92
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 94,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 99,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 104,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 113,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 118,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 123,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 130,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 135,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 140,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 189,
							"src": "2186:2092:4",
							"usedErrors": [
								99,
								104,
								113,
								118,
								123,
								130,
								135,
								140
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 142,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 188,
							"linearizedBaseContracts": [
								188
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 153,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 158,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 163,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 170,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 175,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 180,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 187,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 189,
							"src": "4424:2107:4",
							"usedErrors": [
								153,
								158,
								163,
								170,
								175,
								180,
								187
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1508
						],
						"ERC165": [
							1861
						],
						"ERC721": [
							1197
						],
						"IERC165": [
							1873
						],
						"IERC721": [
							1314
						],
						"IERC721Errors": [
							141
						],
						"IERC721Metadata": [
							1486
						],
						"IERC721Receiver": [
							1332
						],
						"Strings": [
							1837
						]
					},
					"id": 1198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1315,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 191,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1314,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1333,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 193,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1332,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1487,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 195,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1486,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1509,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 197,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1508,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1838,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 199,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1837,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 1862,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 201,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1873,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 202,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1861,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1198,
							"sourceUnit": 189,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 204,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 141,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 207,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1508,
										"src": "804:7:5"
									},
									"id": 208,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 209,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1861,
										"src": "813:6:5"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 211,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1314,
										"src": "821:7:5"
									},
									"id": 212,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 213,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "830:15:5"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 215,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 141,
										"src": "847:13:5"
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 206,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1197,
							"linearizedBaseContracts": [
								1197,
								141,
								1486,
								1314,
								1861,
								1873,
								1508
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 219,
									"libraryName": {
										"id": 217,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1837,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 220,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 223,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 222,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 227,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 226,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 225,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 230,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 228,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 229,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 235,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 234,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 232,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 240,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 236,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 239,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 237,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 238,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 250,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 253,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 254,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 258,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 245,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1197,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1860,
										1872
									],
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 269,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 271,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1314,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1314_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1314_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 270,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1314",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 277,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1486,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1486_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1486_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 276,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1486",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 284,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 282,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1197_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1860,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 268,
												"id": 287,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 265,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 263,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1861,
												"src": "1637:6:5"
											},
											{
												"id": 264,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1873,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 260,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1197,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1239
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 298,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 304,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 303,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 309,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 312,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 314,
													"indexExpression": {
														"id": 313,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 315,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1197,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1247
									],
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 324,
												"id": 328,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1197,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1471
									],
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 336,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 221,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 335,
												"id": 337,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1197,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1477
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 345,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 344,
												"id": 346,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1197,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1485
									],
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 356,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 360,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 362,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 367,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 365,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 375,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 376,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1650,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 372,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 355,
												"id": 382,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1197,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 389,
												"id": 391,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1197,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1287
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 404,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 401,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1066
														],
														"referencedDeclaration": 1000,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1197,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 416,
												"id": 424,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1197,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 435,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 434,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1197,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 452,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 454,
														"indexExpression": {
															"id": 453,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 456,
													"indexExpression": {
														"id": 455,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1197,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 469,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 470,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 476,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 475,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 484,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"id": 487,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 489,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 486,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 493,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 494,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 498,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 499,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1197,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 515,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															523,
															549
														],
														"referencedDeclaration": 549,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1197,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1259
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 541,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1197,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 557,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 559,
													"indexExpression": {
														"id": 558,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 556,
												"id": 560,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1197,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 570,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 572,
													"indexExpression": {
														"id": 571,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 569,
												"id": 573,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1197,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 587,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 588,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 593,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 594,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 597,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 598,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 596,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 602,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 601,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 604,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 607,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 586,
												"id": 609,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1197,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 622,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 623,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 624,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 621,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 627,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 628,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 643,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 639,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 640,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 638,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 130,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 642,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 644,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 637,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 634,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 633,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 104,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 636,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1197,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 662,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 656,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 658,
																"indexExpression": {
																	"id": 657,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 661,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 652,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1197,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 676,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"arguments": [
														{
															"id": 679,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 683,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 695,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 689,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 690,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 691,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 688,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 696,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 697,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 703,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 707,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 708,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 702,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1000,
																		1066
																	],
																	"referencedDeclaration": 1066,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 721,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 715,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 717,
																			"indexExpression": {
																				"id": 716,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 677,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 720,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 725,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 736,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 730,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 732,
																			"indexExpression": {
																				"id": 731,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 735,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 739,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 741,
														"indexExpression": {
															"id": 740,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 746,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 751,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 677,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 675,
												"id": 752,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1197,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 762,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 763,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 776,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 769,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 768,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 774,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 777,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"id": 780,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 782,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 779,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 794,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 800,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1197,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 812,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															819,
															845
														],
														"referencedDeclaration": 845,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1197,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 830,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 829,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 835,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 841,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 834,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 825,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1197,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 854,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 859,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 866,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 872,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 871,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 874,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1197,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 888,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 889,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 902,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 901,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 895,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 894,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 900,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 937,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 913,
												"initialValue": {
													"arguments": [
														{
															"id": 906,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 908,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 905,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 914,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 915,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 925,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 926,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 935,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 934,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 929,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 930,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 931,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 904,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 928,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 933,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 921,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 920,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 923,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1197,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 948,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															956,
															982
														],
														"referencedDeclaration": 982,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1197,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 974,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1197,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 993,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 992,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1000,
															1066
														],
														"referencedDeclaration": 1066,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1197,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1013,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1014,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1058,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1057,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1021
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1021,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1057,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1020,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1025,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1023,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1022,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1026,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1027,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1032,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1033,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1037,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1038,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1007,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1036,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1047,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1046,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1043,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1007,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1042,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 135,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1045,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1048,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1056,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1055,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1050,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1051,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1003,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1052,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1049,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1222,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1054,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1059,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"id": 1060,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1062,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1197,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1077,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1083,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1082,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1085,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1088,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1091,
															"indexExpression": {
																"id": 1089,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1092,
														"indexExpression": {
															"id": 1090,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1093,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1097,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1096,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1197,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1131,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"arguments": [
														{
															"id": 1114,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1113,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1124,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1123,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1126,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1129,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1112,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1110,
												"id": 1130,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1197,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1144,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1194,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1173,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1162,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1160,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1163,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1332,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1332_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1331,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1165,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1172,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1171,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1168,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1137,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1167,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 123,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1169,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1170,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1174,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1161,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1160,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1174,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1159,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1190,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1178,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1176,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1179,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1188,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1176,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1176,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1187,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1189,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1186,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1183,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1137,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1182,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 123,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1184,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1185,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1191,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1177,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1176,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1191,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1175,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1153,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1155,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1156,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1157,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1150,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1149,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1332,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1332_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1332",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1331,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1192,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1140,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1197,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1198,
							"src": "776:16926:5",
							"usedErrors": [
								99,
								104,
								113,
								118,
								123,
								130,
								135,
								140
							],
							"usedEvents": [
								1213,
								1222,
								1231
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1873
						],
						"IERC721": [
							1314
						]
					},
					"id": 1315,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1199,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1315,
							"sourceUnit": 1874,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1200,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1873,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1203,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "287:7:6"
									},
									"id": 1204,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1202,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1314,
							"linearizedBaseContracts": [
								1314,
								1873
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1213,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1222,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1314,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1314,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1314,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1314,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1314,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1314,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1314,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1314,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1314,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1315,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1213,
								1222,
								1231
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1332
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1316,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1317,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1332,
							"linearizedBaseContracts": [
								1332
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1332,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1333,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1197
						],
						"ERC721URIStorage": [
							1458
						],
						"IERC165": [
							1873
						],
						"IERC4906": [
							47
						],
						"Strings": [
							1837
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1198,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1335,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1197,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1838,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1337,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1837,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 48,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1339,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 47,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 4,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1341,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1873,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1344,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 47,
										"src": "469:8:8"
									},
									"id": 1345,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1346,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1197,
										"src": "479:6:8"
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1343,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								1197,
								141,
								1486,
								47,
								1314,
								1861,
								1873,
								1508
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1350,
									"libraryName": {
										"id": 1348,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1837,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1356,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1458,
									"src": "706:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1351,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1354,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1353,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1352,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1360,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1458,
									"src": "817:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1359,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:8",
										"keyType": {
											"id": 1357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1358,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										289,
										1872
									],
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "1045:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1371,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "1062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1372,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "1077:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1376,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "1125:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1374,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1458_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 289,
															"src": "1101:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1379,
												"nodeType": "Return",
												"src": "1055:82:8"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1367,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1365,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1197,
												"src": "1013:6:8"
											},
											{
												"id": 1366,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1873,
												"src": "1021:7:8"
											}
										],
										"src": "1004:25:8"
									},
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "964:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:8"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "1039:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:8"
									},
									"scope": 1458,
									"src": "937:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										384
									],
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "1298:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1391,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1390,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "1308:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:8"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1437,
														"src": "1341:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1394,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1399,
												"initialValue": {
													"baseExpression": {
														"id": 1396,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "1367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1398,
													"indexExpression": {
														"id": 1397,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "1378:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:8"
											},
											{
												"assignments": [
													1401
												],
												"declarations": [
													{
														"constant": false,
														"id": 1401,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1437,
														"src": "1396:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1400,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1402,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1417:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1407,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "1506:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1405,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "1496:70:8",
												"trueBody": {
													"id": 1414,
													"nodeType": "Block",
													"src": "1525:41:8",
													"statements": [
														{
															"expression": {
																"id": 1412,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "1546:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1389,
															"id": 1413,
															"nodeType": "Return",
															"src": "1539:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1418,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "1671:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1416,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "1661:95:8",
												"trueBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "1694:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1426,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "1729:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1427,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "1735:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1423,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1389,
															"id": 1429,
															"nodeType": "Return",
															"src": "1708:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "1788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1432,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1458_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 384,
														"src": "1773:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1389,
												"id": 1436,
												"nodeType": "Return",
												"src": "1766:30:8"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1386,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:8"
									},
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1228:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:8"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:8"
									},
									"scope": 1458,
									"src": "1210:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "2003:86:8",
										"statements": [
											{
												"expression": {
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1446,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "2013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1448,
														"indexExpression": {
															"id": 1447,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "2024:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1449,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "2035:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "2074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1452,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "2059:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "2054:28:8"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1961:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:8"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1458,
									"src": "1922:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1459,
							"src": "431:1660:8",
							"usedErrors": [
								99,
								104,
								113,
								118,
								123,
								130,
								135,
								140
							],
							"usedEvents": [
								39,
								46,
								1213,
								1222,
								1231
							]
						}
					],
					"src": "128:1964:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1314
						],
						"IERC721Metadata": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1487,
							"sourceUnit": 1315,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1314,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1314,
										"src": "357:7:9"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1486,
							"linearizedBaseContracts": [
								1486,
								1314,
								1873
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1486,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1486,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1486,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1487,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1213,
								1222,
								1231
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1508
						]
					},
					"id": 1509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1489,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1508,
							"linearizedBaseContracts": [
								1508
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1496,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1508,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1503,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1502,
												"id": 1505,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1508,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1509,
							"src": "624:235:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1582
						]
					},
					"id": 1583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1511,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:11",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1582,
							"linearizedBaseContracts": [
								1582
							],
							"name": "Counters",
							"nameLocation": "432:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1514,
									"members": [
										{
											"constant": false,
											"id": 1513,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1514,
											"src": "786:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1512,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:11",
									"nodeType": "StructDefinition",
									"scope": 1582,
									"src": "447:374:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "901:38:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1522,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "918:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1513,
													"src": "918:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1521,
												"id": 1524,
												"nodeType": "Return",
												"src": "911:21:11"
											}
										]
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "844:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1515,
														"name": "Counter",
														"nameLocations": [
															"844:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1514,
														"src": "844:7:11"
													},
													"referencedDeclaration": 1514,
													"src": "844:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:11"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "892:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:11"
									},
									"scope": 1582,
									"src": "827:112:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "998:70:11",
										"statements": [
											{
												"id": 1538,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:11",
												"statements": [
													{
														"expression": {
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1532,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1032:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1513,
																"src": "1032:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1537,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:11"
													}
												]
											}
										]
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "964:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1527,
														"name": "Counter",
														"nameLocations": [
															"964:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1514,
														"src": "964:7:11"
													},
													"referencedDeclaration": 1514,
													"src": "964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:11"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:11"
									},
									"scope": 1582,
									"src": "945:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "1127:176:11",
										"statements": [
											{
												"assignments": [
													1547
												],
												"declarations": [
													{
														"constant": false,
														"id": 1547,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "1137:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"initialValue": {
													"expression": {
														"id": 1548,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1543,
														"src": "1153:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1513,
													"src": "1153:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1547,
																"src": "1185:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:11"
											},
											{
												"id": 1566,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:11",
												"statements": [
													{
														"expression": {
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1558,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1543,
																	"src": "1260:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1513,
																"src": "1260:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1561,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "1277:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1565,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:11"
													}
												]
											}
										]
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1093:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1541,
														"name": "Counter",
														"nameLocations": [
															"1093:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1514,
														"src": "1093:7:11"
													},
													"referencedDeclaration": 1514,
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:11"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:11"
									},
									"scope": 1582,
									"src": "1074:229:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "1358:35:11",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1574,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "1368:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:11",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1513,
														"src": "1368:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:11"
											}
										]
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "1324:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1569,
														"name": "Counter",
														"nameLocations": [
															"1324:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1514,
														"src": "1324:7:11"
													},
													"referencedDeclaration": 1514,
													"src": "1324:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:11"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:11"
									},
									"scope": 1582,
									"src": "1309:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1583,
							"src": "424:971:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2927
						],
						"SignedMath": [
							3032
						],
						"Strings": [
							1837
						]
					},
					"id": 1838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1584,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1838,
							"sourceUnit": 2928,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1585,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2927,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1838,
							"sourceUnit": 3033,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1587,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3032,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1589,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1837,
							"linearizedBaseContracts": [
								1837
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1592,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1837,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1590,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1591,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1595,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1837,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1593,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1594,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1602,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1648,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1611
														],
														"declarations": [
															{
																"constant": false,
																"id": 1611,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1648,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1618,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1614,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1612,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2927_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2747,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1620
														],
														"declarations": [
															{
																"constant": false,
																"id": 1620,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1648,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1619,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1625,
														"initialValue": {
															"arguments": [
																{
																	"id": 1623,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1621,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1627
														],
														"declarations": [
															{
																"constant": false,
																"id": 1627,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1648,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1626,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1628,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1620,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1627,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1629,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1644,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1631,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1633,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1592,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1627,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1605,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1634,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1605,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1638,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1605,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1643,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1642,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1645,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1646,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1609,
														"id": 1647,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1837,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1670,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1668,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3032,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3032_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3031,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1667,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1650,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1658,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1674,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1655,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1837,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1694,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1685,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1688,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1679,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1686,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2927,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2927_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2869,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1684,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1696,
																	1779,
																	1799
																],
																"referencedDeclaration": 1779,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1683,
														"id": 1693,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1837,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1707
												],
												"declarations": [
													{
														"constant": false,
														"id": 1707,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1706,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"id": 1708,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1699,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1711
												],
												"declarations": [
													{
														"constant": false,
														"id": 1711,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1710,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1720,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1715,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1712,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1721,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1723,
														"indexExpression": {
															"hexValue": "30",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1727,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1729,
														"indexExpression": {
															"hexValue": "31",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1761,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1747,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1749,
																	"indexExpression": {
																		"id": 1748,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1750,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1754,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1751,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1757,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1760,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1762,
												"initializationExpression": {
													"assignments": [
														1734
													],
													"declarations": [
														{
															"constant": false,
															"id": 1734,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1762,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1733,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1740,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1736,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"loopExpression": {
													"expression": {
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1744,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1746,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1772,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1771,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1767,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1699,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1768,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1766,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1770,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1775,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1773,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1777,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1837,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1792,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1790,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1788,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1795,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1787,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1696,
															1779,
															1799
														],
														"referencedDeclaration": 1779,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1786,
												"id": 1797,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1837,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1811,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1809,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1816,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1804,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1814,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1823,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1821,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1820,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1829,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1804,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1827,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1826,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1834,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1803,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1837,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1838,
							"src": "251:2847:12",
							"usedErrors": [
								1602
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1861
						],
						"IERC165": [
							1873
						]
					},
					"id": 1862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1862,
							"sourceUnit": 1874,
							"src": "140:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1840,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1873,
										"src": "148:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1843,
										"name": "IERC165",
										"nameLocations": [
											"687:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "687:7:13"
									},
									"id": 1844,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1842,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1861,
							"linearizedBaseContracts": [
								1861,
								1873
							],
							"name": "ERC165",
							"nameLocation": "677:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1872
									],
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "844:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1852,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "861:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1873_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1873_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1853,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1873",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1858,
												"nodeType": "Return",
												"src": "854:47:13"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "789:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:13"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "838:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:13"
									},
									"scope": 1861,
									"src": "762:146:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1862,
							"src": "659:251:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1873
						]
					},
					"id": 1874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1864,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:14",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1873,
							"linearizedBaseContracts": [
								1873
							],
							"name": "IERC165",
							"nameLocation": "431:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "817:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:14"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "860:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:14"
									},
									"scope": 1873,
									"src": "790:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1874,
							"src": "421:447:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2927
						]
					},
					"id": 2928,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1875,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1876,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2927,
							"linearizedBaseContracts": [
								2927
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1879,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1884,
									"members": [
										{
											"id": 1880,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 1881,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 1882,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 1883,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "661:140:15",
										"statements": [
											{
												"id": 1914,
												"nodeType": "UncheckedBlock",
												"src": "671:124:15",
												"statements": [
													{
														"assignments": [
															1897
														],
														"declarations": [
															{
																"constant": false,
																"id": 1897,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 1914,
																"src": "695:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1896,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1901,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1898,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1887,
																"src": "707:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1899,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "711:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "730:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1903,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1887,
																"src": "734:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1909,
														"nodeType": "IfStatement",
														"src": "726:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1895,
															"id": 1908,
															"nodeType": "Return",
															"src": "737:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1911,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "782:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1912,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1895,
														"id": 1913,
														"nodeType": "Return",
														"src": "768:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:15",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "612:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:15"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "646:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:15"
									},
									"scope": 2927,
									"src": "585:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "984:113:15",
										"statements": [
											{
												"id": 1942,
												"nodeType": "UncheckedBlock",
												"src": "994:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1928,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "1022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1929,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "1026:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1935,
														"nodeType": "IfStatement",
														"src": "1018:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1933,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1927,
															"id": 1934,
															"nodeType": "Return",
															"src": "1029:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1937,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "1074:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1938,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "1078:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1940,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1927,
														"id": 1941,
														"nodeType": "Return",
														"src": "1060:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:15"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "969:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "975:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:15"
									},
									"scope": 2927,
									"src": "908:189:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "1283:417:15",
										"statements": [
											{
												"id": 1984,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1956,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "1551:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1963,
														"nodeType": "IfStatement",
														"src": "1547:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1955,
															"id": 1962,
															"nodeType": "Return",
															"src": "1559:16:15"
														}
													},
													{
														"assignments": [
															1965
														],
														"declarations": [
															{
																"constant": false,
																"id": 1965,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 1984,
																"src": "1589:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1964,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1969,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1966,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "1601:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1967,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1605:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1970,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "1624:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1971,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "1628:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1973,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1633:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1979,
														"nodeType": "IfStatement",
														"src": "1620:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1977,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1955,
															"id": 1978,
															"nodeType": "Return",
															"src": "1636:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1981,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "1681:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1982,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1955,
														"id": 1983,
														"nodeType": "Return",
														"src": "1667:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1223:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1234:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:15"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1268:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:15"
									},
									"scope": 2927,
									"src": "1207:493:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "1887:114:15",
										"statements": [
											{
												"id": 2012,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1998,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "1925:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2005,
														"nodeType": "IfStatement",
														"src": "1921:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2003,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1997,
															"id": 2004,
															"nodeType": "Return",
															"src": "1933:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2007,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "1978:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2008,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1991,
																		"src": "1982:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2010,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1997,
														"id": 2011,
														"nodeType": "Return",
														"src": "1964:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1987,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:15",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1827:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:15"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1872:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "1878:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:15"
									},
									"scope": 2927,
									"src": "1811:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "2198:114:15",
										"statements": [
											{
												"id": 2040,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2026,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "2236:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2033,
														"nodeType": "IfStatement",
														"src": "2232:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2025,
															"id": 2032,
															"nodeType": "Return",
															"src": "2244:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2035,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "2289:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2036,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "2293:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2038,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2025,
														"id": 2039,
														"nodeType": "Return",
														"src": "2275:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2015,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2138:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2149:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:15"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2183:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2189:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:15"
									},
									"scope": 2927,
									"src": "2122:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "2449:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2052,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "2466:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2053,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "2470:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2056,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "2478:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:15",
													"trueExpression": {
														"id": 2055,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "2474:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2051,
												"id": 2058,
												"nodeType": "Return",
												"src": "2459:20:15"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2395:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2406:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:15"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2440:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:15"
									},
									"scope": 2927,
									"src": "2382:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2077,
										"nodeType": "Block",
										"src": "2624:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2070,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "2641:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2071,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "2645:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2074,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "2653:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:15",
													"trueExpression": {
														"id": 2073,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "2649:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2069,
												"id": 2076,
												"nodeType": "Return",
												"src": "2634:20:15"
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "2570:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "2581:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:15"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "2615:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:15"
									},
									"scope": 2927,
									"src": "2557:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "2845:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2088,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "2900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2089,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "2904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2091,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2092,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "2910:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2093,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "2914:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2095,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2087,
												"id": 2099,
												"nodeType": "Return",
												"src": "2892:28:15"
											}
										]
									},
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2791:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:15"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "2836:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:15"
									},
									"scope": 2927,
									"src": "2774:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2134,
										"nodeType": "Block",
										"src": "3219:260:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2111,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "3233:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2119,
												"nodeType": "IfStatement",
												"src": "3229:127:15",
												"trueBody": {
													"id": 2118,
													"nodeType": "Block",
													"src": "3241:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2114,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2104,
																	"src": "3340:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2115,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "3344:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2110,
															"id": 2117,
															"nodeType": "Return",
															"src": "3333:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2120,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3444:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2124,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "3458:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2127,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2128,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "3467:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:15",
													"trueExpression": {
														"hexValue": "30",
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2110,
												"id": 2133,
												"nodeType": "Return",
												"src": "3437:35:15"
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "3165:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "3176:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:15"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "3210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:15"
									},
									"scope": 2927,
									"src": "3148:331:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "3901:4018:15",
										"statements": [
											{
												"id": 2259,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:15",
												"statements": [
													{
														"assignments": [
															2148
														],
														"declarations": [
															{
																"constant": false,
																"id": 2148,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2259,
																"src": "4232:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2147,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2152,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2149,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2138,
																"src": "4248:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2150,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4252:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:15"
													},
													{
														"assignments": [
															2154
														],
														"declarations": [
															{
																"constant": false,
																"id": 2154,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2259,
																"src": "4312:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2153,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2155,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:15",
															"nodeType": "YulBlock",
															"src": "4392:122:15",
															"statements": [
																{
																	"nativeSrc": "4410:30:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:15"
																				},
																				"nativeSrc": "4433:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:15"
																		},
																		"nativeSrc": "4420:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:15",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:15",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:15"
																				},
																				"nativeSrc": "4470:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:15"
																				},
																				"nativeSrc": "4486:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:15"
																		},
																		"nativeSrc": "4466:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2154,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2138,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:15",
																"valueSize": 1
															}
														],
														"id": 2156,
														"nodeType": "InlineAssembly",
														"src": "4383:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2157,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "4595:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2165,
														"nodeType": "IfStatement",
														"src": "4591:368:15",
														"trueBody": {
															"id": 2164,
															"nodeType": "Block",
															"src": "4607:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2160,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2148,
																			"src": "4925:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2161,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "4933:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2146,
																	"id": 2163,
																	"nodeType": "Return",
																	"src": "4918:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2166,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "5065:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2167,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "5080:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2173,
														"nodeType": "IfStatement",
														"src": "5061:88:15",
														"trueBody": {
															"id": 2172,
															"nodeType": "Block",
															"src": "5087:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2169,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "5112:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2171,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2175
														],
														"declarations": [
															{
																"constant": false,
																"id": 2175,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2259,
																"src": "5404:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2174,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2176,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:15"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:15",
															"nodeType": "YulBlock",
															"src": "5444:291:15",
															"statements": [
																{
																	"nativeSrc": "5513:38:15",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:15"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:15"
																		},
																		"nativeSrc": "5526:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:15",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:15",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:15"
																				},
																				"nativeSrc": "5653:20:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:15"
																		},
																		"nativeSrc": "5642:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:15",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:15"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:15"
																		},
																		"nativeSrc": "5700:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2154,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2154,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2175,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2175,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2175,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2138,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:15",
																"valueSize": 1
															}
														],
														"id": 2177,
														"nodeType": "InlineAssembly",
														"src": "5435:300:15"
													},
													{
														"assignments": [
															2179
														],
														"declarations": [
															{
																"constant": false,
																"id": 2179,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2259,
																"src": "5939:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2178,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2186,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "5954:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2182,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "5973:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2184,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:15"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:15",
															"nodeType": "YulBlock",
															"src": "6008:362:15",
															"statements": [
																{
																	"nativeSrc": "6073:37:15",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:15"
																		},
																		"nativeSrc": "6088:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:15",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:15"
																		},
																		"nativeSrc": "6186:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:15",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:15"
																						},
																						"nativeSrc": "6333:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:15"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:15"
																				},
																				"nativeSrc": "6329:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:15"
																		},
																		"nativeSrc": "6325:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2179,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2179,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2179,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2179,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2179,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:15",
																"valueSize": 1
															}
														],
														"id": 2187,
														"nodeType": "InlineAssembly",
														"src": "5999:371:15"
													},
													{
														"expression": {
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2188,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "6436:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2189,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "6445:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2190,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "6453:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2193,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:15"
													},
													{
														"assignments": [
															2195
														],
														"declarations": [
															{
																"constant": false,
																"id": 2195,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2259,
																"src": "6775:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2194,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2202,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2197,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "6798:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:15"
													},
													{
														"expression": {
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2203,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "7031:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2205,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "7046:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2206,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "7060:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2210,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:15"
													},
													{
														"expression": {
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2211,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "7100:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2213,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "7115:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2214,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "7129:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2218,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:15"
													},
													{
														"expression": {
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2219,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "7170:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2221,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "7185:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2222,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "7199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2226,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:15"
													},
													{
														"expression": {
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2227,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "7240:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2229,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "7255:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2230,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "7269:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2234,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:15"
													},
													{
														"expression": {
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2235,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "7310:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2237,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "7325:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2238,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "7339:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2242,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:15"
													},
													{
														"expression": {
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2243,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "7381:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2245,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "7396:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2246,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "7410:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2250,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:15"
													},
													{
														"expression": {
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2251,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7851:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2252,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "7860:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2253,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "7868:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2256,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:15"
													},
													{
														"expression": {
															"id": 2257,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "7896:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2146,
														"id": 2258,
														"nodeType": "Return",
														"src": "7889:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "3819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "3830:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "3841:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:15"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "3885:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:15"
									},
									"scope": 2927,
									"src": "3803:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "8161:192:15",
										"statements": [
											{
												"assignments": [
													2277
												],
												"declarations": [
													{
														"constant": false,
														"id": 2277,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2303,
														"src": "8171:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2283,
												"initialValue": {
													"arguments": [
														{
															"id": 2279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "8195:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2280,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "8198:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2281,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "8201:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2278,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2261,
															2304
														],
														"referencedDeclaration": 2261,
														"src": "8188:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2285,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2271,
																"src": "8244:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1884",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1884",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2284,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2926,
															"src": "8227:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1884_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2288,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "8264:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2289,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8267:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2290,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "8270:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2287,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2300,
												"nodeType": "IfStatement",
												"src": "8223:101:15",
												"trueBody": {
													"id": 2299,
													"nodeType": "Block",
													"src": "8288:36:15",
													"statements": [
														{
															"expression": {
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2295,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "8302:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2298,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2301,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2277,
													"src": "8340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2275,
												"id": 2302,
												"nodeType": "Return",
												"src": "8333:13:15"
											}
										]
									},
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8067:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8078:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8089:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8110:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1884",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2269,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1884,
														"src": "8110:8:15"
													},
													"referencedDeclaration": 1884,
													"src": "8110:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1884",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:15"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "8152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:15"
									},
									"scope": 2927,
									"src": "8051:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2415,
										"nodeType": "Block",
										"src": "8644:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "8658:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2318,
												"nodeType": "IfStatement",
												"src": "8654:45:15",
												"trueBody": {
													"id": 2317,
													"nodeType": "Block",
													"src": "8666:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2311,
															"id": 2316,
															"nodeType": "Return",
															"src": "8680:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2320
												],
												"declarations": [
													{
														"constant": false,
														"id": 2320,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2415,
														"src": "9378:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2329,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2323,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2307,
																			"src": "9406:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2322,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2583,
																			2618
																		],
																		"referencedDeclaration": 2583,
																		"src": "9401:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2327,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:15"
											},
											{
												"id": 2414,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:15",
												"statements": [
													{
														"expression": {
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2330,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "9839:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2331,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2320,
																				"src": "9849:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2332,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "9858:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2333,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "9862:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2336,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2340,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:15"
													},
													{
														"expression": {
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2341,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "9888:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2342,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2320,
																				"src": "9898:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2343,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "9907:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2344,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "9911:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2347,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2351,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:15"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2352,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "9937:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2353,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2320,
																				"src": "9947:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2354,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "9956:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2355,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "9960:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:15"
													},
													{
														"expression": {
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "9986:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2364,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2320,
																				"src": "9996:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2365,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "10005:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2366,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10009:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2369,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2373,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:15"
													},
													{
														"expression": {
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2374,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "10035:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2375,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2320,
																				"src": "10045:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2376,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "10054:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2377,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10058:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2380,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2384,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:15"
													},
													{
														"expression": {
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2385,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "10084:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2386,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2320,
																				"src": "10094:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2387,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "10103:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2388,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10107:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2391,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2395,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:15"
													},
													{
														"expression": {
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2396,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "10133:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2397,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2320,
																				"src": "10143:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2398,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "10152:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2399,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2320,
																					"src": "10156:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2402,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2406,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2408,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "10193:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2409,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2307,
																		"src": "10201:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2410,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "10205:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2407,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "10189:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2311,
														"id": 2413,
														"nodeType": "Return",
														"src": "10182:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "8601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:15"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "8635:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:15"
									},
									"scope": 2927,
									"src": "8587:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "10405:164:15",
										"statements": [
											{
												"id": 2449,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:15",
												"statements": [
													{
														"assignments": [
															2428
														],
														"declarations": [
															{
																"constant": false,
																"id": 2428,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2449,
																"src": "10439:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2427,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2432,
														"initialValue": {
															"arguments": [
																{
																	"id": 2430,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2419,
																	"src": "10461:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2429,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2416,
																	2451
																],
																"referencedDeclaration": 2416,
																"src": "10456:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2433,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "10484:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2435,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2422,
																						"src": "10511:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2434,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2926,
																					"src": "10494:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1884_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2437,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2428,
																						"src": "10524:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2438,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2428,
																						"src": "10533:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2440,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2419,
																					"src": "10542:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2446,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2426,
														"id": 2448,
														"nodeType": "Return",
														"src": "10477:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2417,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "10343:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "10354:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1884",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2420,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1884,
														"src": "10354:8:15"
													},
													"referencedDeclaration": 1884,
													"src": "10354:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1884",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:15"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "10396:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:15"
									},
									"scope": 2927,
									"src": "10329:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "10760:922:15",
										"statements": [
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "10770:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2462,
												"initialValue": {
													"hexValue": "30",
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:15"
											},
											{
												"id": 2579,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2463,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "10826:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2477,
														"nodeType": "IfStatement",
														"src": "10822:99:15",
														"trueBody": {
															"id": 2476,
															"nodeType": "Block",
															"src": "10844:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10862:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2471,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:15"
																},
																{
																	"expression": {
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2472,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "10893:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2475,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2478,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "10938:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2492,
														"nodeType": "IfStatement",
														"src": "10934:96:15",
														"trueBody": {
															"id": 2491,
															"nodeType": "Block",
															"src": "10955:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2486,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:15"
																},
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11003:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2493,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11047:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2507,
														"nodeType": "IfStatement",
														"src": "11043:96:15",
														"trueBody": {
															"id": 2506,
															"nodeType": "Block",
															"src": "11064:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2498,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11082:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:15"
																},
																{
																	"expression": {
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2502,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2505,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11156:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2522,
														"nodeType": "IfStatement",
														"src": "11152:96:15",
														"trueBody": {
															"id": 2521,
															"nodeType": "Block",
															"src": "11173:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2513,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2516,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:15"
																},
																{
																	"expression": {
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2517,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11221:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2520,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2523,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2537,
														"nodeType": "IfStatement",
														"src": "11261:93:15",
														"trueBody": {
															"id": 2536,
															"nodeType": "Block",
															"src": "11281:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2528,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11299:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2531,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:15"
																},
																{
																	"expression": {
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2532,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11328:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2535,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11371:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2552,
														"nodeType": "IfStatement",
														"src": "11367:93:15",
														"trueBody": {
															"id": 2551,
															"nodeType": "Block",
															"src": "11387:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11405:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2546,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:15"
																},
																{
																	"expression": {
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2547,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11434:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2550,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11477:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2567,
														"nodeType": "IfStatement",
														"src": "11473:93:15",
														"trueBody": {
															"id": 2566,
															"nodeType": "Block",
															"src": "11493:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2558,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "11511:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:15"
																},
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2562,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11540:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2568,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "11583:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2578,
														"nodeType": "IfStatement",
														"src": "11579:64:15",
														"trueBody": {
															"id": 2577,
															"nodeType": "Block",
															"src": "11599:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "11617:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2576,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2580,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2460,
													"src": "11669:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2458,
												"id": 2581,
												"nodeType": "Return",
												"src": "11662:13:15"
											}
										]
									},
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "10713:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:15"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "10751:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:15"
									},
									"scope": 2927,
									"src": "10699:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2617,
										"nodeType": "Block",
										"src": "11915:168:15",
										"statements": [
											{
												"id": 2616,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:15",
												"statements": [
													{
														"assignments": [
															2595
														],
														"declarations": [
															{
																"constant": false,
																"id": 2595,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2616,
																"src": "11949:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2599,
														"initialValue": {
															"arguments": [
																{
																	"id": 2597,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "11971:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2596,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2583,
																	2618
																],
																"referencedDeclaration": 2583,
																"src": "11966:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2595,
																"src": "11998:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2602,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2589,
																						"src": "12025:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2601,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2926,
																					"src": "12008:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1884_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2604,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2605,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2595,
																						"src": "12043:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2607,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2586,
																					"src": "12052:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2613,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2593,
														"id": 2615,
														"nodeType": "Return",
														"src": "11991:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "11849:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "11864:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1884",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2587,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1884,
														"src": "11864:8:15"
													},
													"referencedDeclaration": 1884,
													"src": "11864:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1884",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:15"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "11906:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:15"
									},
									"scope": 2927,
									"src": "11835:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2746,
										"nodeType": "Block",
										"src": "12276:854:15",
										"statements": [
											{
												"assignments": [
													2627
												],
												"declarations": [
													{
														"constant": false,
														"id": 2627,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2746,
														"src": "12286:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2629,
												"initialValue": {
													"hexValue": "30",
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:15"
											},
											{
												"id": 2743,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2630,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "12342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2646,
														"nodeType": "IfStatement",
														"src": "12338:103:15",
														"trueBody": {
															"id": 2645,
															"nodeType": "Block",
															"src": "12361:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12379:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2640,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:15"
																},
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "12414:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2647,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "12458:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2663,
														"nodeType": "IfStatement",
														"src": "12454:103:15",
														"trueBody": {
															"id": 2662,
															"nodeType": "Block",
															"src": "12477:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2652,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12495:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2657,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:15"
																},
																{
																	"expression": {
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2658,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "12530:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2661,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2664,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "12574:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2680,
														"nodeType": "IfStatement",
														"src": "12570:103:15",
														"trueBody": {
															"id": 2679,
															"nodeType": "Block",
															"src": "12593:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12611:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2674,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:15"
																},
																{
																	"expression": {
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "12646:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2678,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2681,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "12690:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2697,
														"nodeType": "IfStatement",
														"src": "12686:100:15",
														"trueBody": {
															"id": 2696,
															"nodeType": "Block",
															"src": "12708:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12726:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2691,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:15"
																},
																{
																	"expression": {
																		"id": 2694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2692,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "12760:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2695,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2698,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "12803:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2714,
														"nodeType": "IfStatement",
														"src": "12799:100:15",
														"trueBody": {
															"id": 2713,
															"nodeType": "Block",
															"src": "12821:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12839:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2705,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2708,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:15"
																},
																{
																	"expression": {
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "12873:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2712,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2715,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "12916:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2731,
														"nodeType": "IfStatement",
														"src": "12912:100:15",
														"trueBody": {
															"id": 2730,
															"nodeType": "Block",
															"src": "12934:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2720,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "12952:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:15"
																},
																{
																	"expression": {
																		"id": 2728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2726,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "12986:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2729,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2732,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "13029:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "13025:66:15",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "13047:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "13065:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2744,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2627,
													"src": "13117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2625,
												"id": 2745,
												"nodeType": "Return",
												"src": "13110:13:15"
											}
										]
									},
									"documentation": {
										"id": 2619,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "12229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:15"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "12267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:15"
									},
									"scope": 2927,
									"src": "12214:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "13365:170:15",
										"statements": [
											{
												"id": 2780,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:15",
												"statements": [
													{
														"assignments": [
															2759
														],
														"declarations": [
															{
																"constant": false,
																"id": 2759,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2780,
																"src": "13399:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2758,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2763,
														"initialValue": {
															"arguments": [
																{
																	"id": 2761,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2750,
																	"src": "13422:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2760,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2747,
																	2782
																],
																"referencedDeclaration": 2747,
																"src": "13416:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2764,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2759,
																"src": "13449:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2766,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2753,
																						"src": "13476:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2765,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2926,
																					"src": "13459:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1884_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2767,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2770,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2768,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2769,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2759,
																						"src": "13495:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2771,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2750,
																					"src": "13504:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2777,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2757,
														"id": 2779,
														"nodeType": "Return",
														"src": "13442:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2748,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "13299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "13314:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1884",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2751,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1884,
														"src": "13314:8:15"
													},
													"referencedDeclaration": 1884,
													"src": "13314:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1884",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:15"
									},
									"returnParameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "13356:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:15"
									},
									"scope": 2927,
									"src": "13284:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2868,
										"nodeType": "Block",
										"src": "13855:600:15",
										"statements": [
											{
												"assignments": [
													2791
												],
												"declarations": [
													{
														"constant": false,
														"id": 2791,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2868,
														"src": "13865:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2793,
												"initialValue": {
													"hexValue": "30",
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:15"
											},
											{
												"id": 2865,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2794,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2785,
																	"src": "13921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2808,
														"nodeType": "IfStatement",
														"src": "13917:98:15",
														"trueBody": {
															"id": 2807,
															"nodeType": "Block",
															"src": "13939:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2799,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "13957:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2802,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:15"
																},
																{
																	"expression": {
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2791,
																			"src": "13988:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2806,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2809,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2785,
																	"src": "14032:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2823,
														"nodeType": "IfStatement",
														"src": "14028:95:15",
														"trueBody": {
															"id": 2822,
															"nodeType": "Block",
															"src": "14049:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2814,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "14067:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2817,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:15"
																},
																{
																	"expression": {
																		"id": 2820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2818,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2791,
																			"src": "14097:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2821,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2824,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2785,
																	"src": "14140:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2838,
														"nodeType": "IfStatement",
														"src": "14136:95:15",
														"trueBody": {
															"id": 2837,
															"nodeType": "Block",
															"src": "14157:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2829,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "14175:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2832,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:15"
																},
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2833,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2791,
																			"src": "14205:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2785,
																	"src": "14248:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2853,
														"nodeType": "IfStatement",
														"src": "14244:95:15",
														"trueBody": {
															"id": 2852,
															"nodeType": "Block",
															"src": "14265:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2844,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2785,
																			"src": "14283:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2847,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:15"
																},
																{
																	"expression": {
																		"id": 2850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2848,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2791,
																			"src": "14313:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2851,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2854,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2785,
																	"src": "14356:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2864,
														"nodeType": "IfStatement",
														"src": "14352:64:15",
														"trueBody": {
															"id": 2863,
															"nodeType": "Block",
															"src": "14372:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2859,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2791,
																			"src": "14390:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2862,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2866,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2791,
													"src": "14442:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2789,
												"id": 2867,
												"nodeType": "Return",
												"src": "14435:13:15"
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "13808:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:15"
									},
									"returnParameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "13846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:15"
									},
									"scope": 2927,
									"src": "13792:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2906,
										"nodeType": "Block",
										"src": "14692:177:15",
										"statements": [
											{
												"id": 2905,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:15",
												"statements": [
													{
														"assignments": [
															2881
														],
														"declarations": [
															{
																"constant": false,
																"id": 2881,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2905,
																"src": "14726:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2880,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2885,
														"initialValue": {
															"arguments": [
																{
																	"id": 2883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2872,
																	"src": "14750:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2882,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2869,
																	2907
																],
																"referencedDeclaration": 2869,
																"src": "14743:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2886,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2881,
																"src": "14777:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2888,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2875,
																						"src": "14804:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1884",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2887,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2926,
																					"src": "14787:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1884_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2890,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2893,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2891,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2881,
																									"src": "14823:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2892,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2894,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2896,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2872,
																					"src": "14838:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2879,
														"id": 2904,
														"nodeType": "Return",
														"src": "14770:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2870,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "14626:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "14641:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1884",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2873,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1884,
														"src": "14641:8:15"
													},
													"referencedDeclaration": 1884,
													"src": "14641:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1884",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:15"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "14683:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:15"
									},
									"scope": 2927,
									"src": "14610:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2925,
										"nodeType": "Block",
										"src": "15067:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2918,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2911,
																	"src": "15090:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1884",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1884",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2916,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2915,
												"id": 2924,
												"nodeType": "Return",
												"src": "15077:31:15"
											}
										]
									},
									"documentation": {
										"id": 2908,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "15019:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1884",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2909,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1884,
														"src": "15019:8:15"
													},
													"referencedDeclaration": 1884,
													"src": "15019:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1884",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:15"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "15061:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:15"
									},
									"scope": 2927,
									"src": "14993:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2928,
							"src": "203:14914:15",
							"usedErrors": [
								1879
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3032
						]
					},
					"id": 3033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2929,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2930,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3032,
							"linearizedBaseContracts": [
								3032
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2947,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2940,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2941,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2935,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2944,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 2943,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2933,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2939,
												"id": 2946,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 2931,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2932,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2934,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2948,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2937,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3032,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2958,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2951,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2959,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2962,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2953,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 2961,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2951,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2957,
												"id": 2964,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 2949,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2950,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2952,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2955,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3032,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													2977
												],
												"declarations": [
													{
														"constant": false,
														"id": 2977,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3009,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2976,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2990,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2978,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2969,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2979,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2971,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2981,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2982,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2969,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2983,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2971,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2985,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2988,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2991,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2977,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2996,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2977,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2994,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2992,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3001,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2969,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3002,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2971,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3004,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3006,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2975,
												"id": 3008,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 2967,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2968,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2970,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2973,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3032,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3029,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3020,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3013,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3024,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3013,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3023,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3013,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3017,
														"id": 3028,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3012,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3032,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3033,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"nftmarket.sol": {
				"ast": {
					"absolutePath": "nftmarket.sol",
					"exportedSymbols": {
						"Context": [
							1508
						],
						"Counters": [
							1582
						],
						"ERC165": [
							1861
						],
						"ERC721": [
							1197
						],
						"ERC721URIStorage": [
							1458
						],
						"IERC165": [
							1873
						],
						"IERC2981": [
							23
						],
						"IERC4906": [
							47
						],
						"IERC721": [
							1314
						],
						"IERC721Errors": [
							141
						],
						"IERC721Metadata": [
							1486
						],
						"IERC721Receiver": [
							1332
						],
						"NFTMarketplace": [
							3364
						],
						"Strings": [
							1837
						]
					},
					"id": 3365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3034,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3365,
							"sourceUnit": 1198,
							"src": "58:57:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3036,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3365,
							"sourceUnit": 1459,
							"src": "120:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"id": 3037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3365,
							"sourceUnit": 24,
							"src": "203:57:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3365,
							"sourceUnit": 1583,
							"src": "262:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3039,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"463:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "463:16:17"
									},
									"id": 3040,
									"nodeType": "InheritanceSpecifier",
									"src": "463:16:17"
								},
								{
									"baseName": {
										"id": 3041,
										"name": "IERC2981",
										"nameLocations": [
											"483:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 23,
										"src": "483:8:17"
									},
									"id": 3042,
									"nodeType": "InheritanceSpecifier",
									"src": "483:8:17"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3364,
							"linearizedBaseContracts": [
								3364,
								23,
								1458,
								1197,
								141,
								1486,
								47,
								1314,
								1861,
								1873,
								1508
							],
							"name": "NFTMarketplace",
							"nameLocation": "444:14:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3046,
									"libraryName": {
										"id": 3043,
										"name": "Counters",
										"nameLocations": [
											"505:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1582,
										"src": "505:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "499:36:17",
									"typeName": {
										"id": 3045,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3044,
											"name": "Counters.Counter",
											"nameLocations": [
												"518:8:17",
												"527:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1514,
											"src": "518:16:17"
										},
										"referencedDeclaration": 1514,
										"src": "518:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3049,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "566:15:17",
									"nodeType": "VariableDeclaration",
									"scope": 3364,
									"src": "541:40:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1514_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3048,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3047,
											"name": "Counters.Counter",
											"nameLocations": [
												"541:8:17",
												"550:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1514,
											"src": "541:16:17"
										},
										"referencedDeclaration": 1514,
										"src": "541:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1514_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d547cfb7",
									"id": 3051,
									"mutability": "mutable",
									"name": "baseTokenURI",
									"nameLocation": "604:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3364,
									"src": "590:26:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3050,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "590:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a71bb2d",
									"id": 3054,
									"mutability": "mutable",
									"name": "royaltyPercentage",
									"nameLocation": "638:17:17",
									"nodeType": "VariableDeclaration",
									"scope": 3364,
									"src": "623:37:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3052,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "623:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 3053,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "658:2:17",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3056,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "717:13:17",
									"nodeType": "VariableDeclaration",
									"scope": 3364,
									"src": "709:21:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3055,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "709:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "NFTMarketplace.NFT",
									"id": 3061,
									"members": [
										{
											"constant": false,
											"id": 3058,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "767:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3061,
											"src": "759:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3057,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "759:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3060,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "793:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 3061,
											"src": "785:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3059,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "785:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "744:3:17",
									"nodeType": "StructDefinition",
									"scope": 3364,
									"src": "737:69:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3067,
									"mutability": "mutable",
									"name": "isSell",
									"nameLocation": "858:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 3364,
									"src": "814:50:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 3066,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3062,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "823:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "814:43:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3065,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3063,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "843:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "834:22:17",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3064,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "851:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3073,
									"mutability": "mutable",
									"name": "isSold",
									"nameLocation": "915:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 3364,
									"src": "871:50:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 3072,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3068,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "880:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "871:43:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3071,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3069,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "900:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "891:22:17",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3070,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "908:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "265aa621",
									"id": 3078,
									"mutability": "mutable",
									"name": "nfts",
									"nameLocation": "959:4:17",
									"nodeType": "VariableDeclaration",
									"scope": 3364,
									"src": "928:35:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3061_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.NFT)"
									},
									"typeName": {
										"id": 3077,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3074,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "936:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "928:23:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3061_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.NFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3076,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3075,
												"name": "NFT",
												"nameLocations": [
													"947:3:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3061,
												"src": "947:3:17"
											},
											"referencedDeclaration": 3061,
											"src": "947:3:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFT_$3061_storage_ptr",
												"typeString": "struct NFTMarketplace.NFT"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3090,
										"nodeType": "Block",
										"src": "1019:43:17",
										"statements": [
											{
												"expression": {
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3085,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "1029:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3086,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1044:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1048:6:17",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1044:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1029:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3089,
												"nodeType": "ExpressionStatement",
												"src": "1029:25:17"
											}
										]
									},
									"id": 3091,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79204e6674",
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "994:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_27a8e25fff6ecb31d12b1e3b3dc4dfc39c3251aabb27a066876477b26913ddd9",
														"typeString": "literal_string \"My Nft\""
													},
													"value": "My Nft"
												},
												{
													"hexValue": "4d4e4654",
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1004:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
														"typeString": "literal_string \"MNFT\""
													},
													"value": "MNFT"
												}
											],
											"id": 3083,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3080,
												"name": "ERC721",
												"nameLocations": [
													"987:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1197,
												"src": "987:6:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "987:24:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:3:17"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1019:0:17"
									},
									"scope": 3364,
									"src": "972:90:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3100,
										"nodeType": "Block",
										"src": "1132:49:17",
										"statements": [
											{
												"expression": {
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3096,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3051,
														"src": "1143:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3097,
														"name": "newBaseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3093,
														"src": "1158:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1143:30:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3099,
												"nodeType": "ExpressionStatement",
												"src": "1143:30:17"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 3101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBaseURI",
									"nameLocation": "1081:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "newBaseTokenURI",
												"nameLocation": "1106:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "1092:29:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3092,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1092:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:31:17"
									},
									"returnParameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:0:17"
									},
									"scope": 3364,
									"src": "1072:109:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3149,
										"nodeType": "Block",
										"src": "1249:278:17",
										"statements": [
											{
												"assignments": [
													3109
												],
												"declarations": [
													{
														"constant": false,
														"id": 3109,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1268:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3149,
														"src": "1260:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1260:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3110,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "1278:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1514_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1294:7:17",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1526,
														"src": "1278:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1514_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1514_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1278:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1260:43:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1324:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1328:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1324:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3117,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "1336:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3114,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															819,
															845
														],
														"referencedDeclaration": 819,
														"src": "1314:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3119,
												"nodeType": "ExpressionStatement",
												"src": "1314:30:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3121,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "1368:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3122,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "1377:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3120,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "1355:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3124,
												"nodeType": "ExpressionStatement",
												"src": "1355:31:17"
											},
											{
												"expression": {
													"id": 3133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3125,
															"name": "nfts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3078,
															"src": "1398:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3061_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)"
															}
														},
														"id": 3127,
														"indexExpression": {
															"id": 3126,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "1403:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1398:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3061_storage",
															"typeString": "struct NFTMarketplace.NFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3129,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1417:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1421:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1417:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3131,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3105,
																"src": "1429:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3128,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3061,
															"src": "1413:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFT_$3061_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.NFT storage pointer)"
															}
														},
														"id": 3132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1413:22:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3061_memory_ptr",
															"typeString": "struct NFTMarketplace.NFT memory"
														}
													},
													"src": "1398:37:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$3061_storage",
														"typeString": "struct NFTMarketplace.NFT storage ref"
													}
												},
												"id": 3134,
												"nodeType": "ExpressionStatement",
												"src": "1398:37:17"
											},
											{
												"expression": {
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3135,
																"name": "isSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3073,
																"src": "1446:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 3139,
															"indexExpression": {
																"expression": {
																	"id": 3136,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1454:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1458:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1454:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1446:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3140,
														"indexExpression": {
															"id": 3138,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "1466:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1446:28:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1475:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1446:34:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3143,
												"nodeType": "ExpressionStatement",
												"src": "1446:34:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3144,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "1490:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1514_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1506:9:17",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1540,
														"src": "1490:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1514_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1514_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:27:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3148,
												"nodeType": "ExpressionStatement",
												"src": "1490:27:17"
											}
										]
									},
									"functionSelector": "5afa3a72",
									"id": 3150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "1198:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "1220:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "1206:22:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1206:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1235:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "1230:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1230:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:36:17"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:0:17"
									},
									"scope": 3364,
									"src": "1189:338:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3174,
										"nodeType": "Block",
										"src": "1574:131:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3156,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1593:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1597:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1593:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3159,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3152,
																		"src": "1615:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3158,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "1607:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1607:16:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1593:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75722061726520417574686f72697a6520746f2073656c6c",
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1625:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
																"typeString": "literal_string \"Your are Authorize to sell\""
															},
															"value": "Your are Authorize to sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b59961ec18ee66a6d7f38abdb19df61f657e924801248711e05a9583bf6f5b5",
																"typeString": "literal_string \"Your are Authorize to sell\""
															}
														],
														"id": 3155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1585:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1585:69:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3164,
												"nodeType": "ExpressionStatement",
												"src": "1585:69:17"
											},
											{
												"expression": {
													"id": 3172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3165,
																"name": "isSell",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3067,
																"src": "1665:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 3169,
															"indexExpression": {
																"expression": {
																	"id": 3166,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1672:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1676:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1672:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1665:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 3170,
														"indexExpression": {
															"id": 3168,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "1684:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1665:27:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1693:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1665:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3173,
												"nodeType": "ExpressionStatement",
												"src": "1665:32:17"
											}
										]
									},
									"functionSelector": "a90d14e2",
									"id": 3175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SellNft",
									"nameLocation": "1544:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1557:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3175,
												"src": "1552:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1552:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:14:17"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1574:0:17"
									},
									"scope": 3364,
									"src": "1535:170:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3194,
										"nodeType": "Block",
										"src": "1773:88:17",
										"statements": [
											{
												"assignments": [
													3183
												],
												"declarations": [
													{
														"constant": false,
														"id": 3183,
														"mutability": "mutable",
														"name": "ads",
														"nameLocation": "1792:3:17",
														"nodeType": "VariableDeclaration",
														"scope": 3194,
														"src": "1784:11:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3182,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1784:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3187,
												"initialValue": {
													"arguments": [
														{
															"id": 3185,
															"name": "tokenids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "1805:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3184,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "1797:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1784:30:17"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3188,
															"name": "isSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "1832:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 3190,
														"indexExpression": {
															"id": 3189,
															"name": "ads",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3183,
															"src": "1839:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1832:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 3192,
													"indexExpression": {
														"id": 3191,
														"name": "tokenids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "1844:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1832:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3181,
												"id": 3193,
												"nodeType": "Return",
												"src": "1825:28:17"
											}
										]
									},
									"functionSelector": "7d7f1f3e",
									"id": 3195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SoldNft",
									"nameLocation": "1722:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "tokenids",
												"nameLocation": "1736:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "1731:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:15:17"
									},
									"returnParameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "1767:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1767:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:6:17"
									},
									"scope": 3364,
									"src": "1713:148:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3214,
										"nodeType": "Block",
										"src": "1930:85:17",
										"statements": [
											{
												"assignments": [
													3203
												],
												"declarations": [
													{
														"constant": false,
														"id": 3203,
														"mutability": "mutable",
														"name": "ad",
														"nameLocation": "1949:2:17",
														"nodeType": "VariableDeclaration",
														"scope": 3214,
														"src": "1941:10:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3202,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1941:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3207,
												"initialValue": {
													"arguments": [
														{
															"id": 3205,
															"name": "tokenid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3197,
															"src": "1962:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3204,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "1954:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:16:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1941:29:17"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3208,
															"name": "isSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "1988:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 3210,
														"indexExpression": {
															"id": 3209,
															"name": "ad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3203,
															"src": "1995:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1988:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 3212,
													"indexExpression": {
														"id": 3211,
														"name": "tokenid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3197,
														"src": "1999:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1988:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3201,
												"id": 3213,
												"nodeType": "Return",
												"src": "1981:26:17"
											}
										]
									},
									"functionSelector": "f2a413b5",
									"id": 3215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSellNft",
									"nameLocation": "1878:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3197,
												"mutability": "mutable",
												"name": "tokenid",
												"nameLocation": "1894:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3215,
												"src": "1889:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1889:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:14:17"
									},
									"returnParameters": {
										"id": 3201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3215,
												"src": "1924:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:6:17"
									},
									"scope": 3364,
									"src": "1869:146:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3232,
										"nodeType": "Block",
										"src": "2085:83:17",
										"statements": [
											{
												"assignments": [
													3224
												],
												"declarations": [
													{
														"constant": false,
														"id": 3224,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "2109:4:17",
														"nodeType": "VariableDeclaration",
														"scope": 3232,
														"src": "2098:15:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3061_memory_ptr",
															"typeString": "struct NFTMarketplace.NFT"
														},
														"typeName": {
															"id": 3223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3222,
																"name": "NFT",
																"nameLocations": [
																	"2098:3:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3061,
																"src": "2098:3:17"
															},
															"referencedDeclaration": 3061,
															"src": "2098:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$3061_storage_ptr",
																"typeString": "struct NFTMarketplace.NFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3228,
												"initialValue": {
													"baseExpression": {
														"id": 3225,
														"name": "nfts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "2116:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3061_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)"
														}
													},
													"id": 3227,
													"indexExpression": {
														"id": 3226,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3217,
														"src": "2121:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2116:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$3061_storage",
														"typeString": "struct NFTMarketplace.NFT storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2098:32:17"
											},
											{
												"expression": {
													"expression": {
														"id": 3229,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "2148:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3061_memory_ptr",
															"typeString": "struct NFTMarketplace.NFT memory"
														}
													},
													"id": 3230,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2153:5:17",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3060,
													"src": "2148:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3221,
												"id": 3231,
												"nodeType": "Return",
												"src": "2141:17:17"
											}
										]
									},
									"functionSelector": "5a51a885",
									"id": 3233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "KnowPrice",
									"nameLocation": "2032:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "2048:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3233,
												"src": "2043:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3216,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2043:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:16:17"
									},
									"returnParameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3233,
												"src": "2079:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:6:17"
									},
									"scope": 3364,
									"src": "2023:145:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3243,
										"nodeType": "Block",
										"src": "2239:45:17",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3240,
														"name": "ads",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3235,
														"src": "2265:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2269:7:17",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2265:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3239,
												"id": 3242,
												"nodeType": "Return",
												"src": "2258:18:17"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 3244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "2185:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3235,
												"mutability": "mutable",
												"name": "ads",
												"nameLocation": "2204:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "2196:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:13:17"
									},
									"returnParameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3244,
												"src": "2230:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:9:17"
									},
									"scope": 3364,
									"src": "2176:108:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3253,
										"nodeType": "Block",
										"src": "2342:51:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3249,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "2360:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1514_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2376:7:17",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1526,
														"src": "2360:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1514_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1514_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3248,
												"id": 3252,
												"nodeType": "Return",
												"src": "2353:32:17"
											}
										]
									},
									"functionSelector": "3d0673d4",
									"id": 3254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalToken",
									"nameLocation": "2301:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2314:2:17"
									},
									"returnParameters": {
										"id": 3248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3254,
												"src": "2337:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3246,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2337:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:6:17"
									},
									"scope": 3364,
									"src": "2292:101:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3336,
										"nodeType": "Block",
										"src": "2450:784:17",
										"statements": [
											{
												"assignments": [
													3260
												],
												"declarations": [
													{
														"constant": false,
														"id": 3260,
														"mutability": "mutable",
														"name": "tokenOwner",
														"nameLocation": "2479:10:17",
														"nodeType": "VariableDeclaration",
														"scope": 3336,
														"src": "2471:18:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3259,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2471:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3264,
												"initialValue": {
													"arguments": [
														{
															"id": 3262,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3256,
															"src": "2500:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3261,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2492:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:16:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2471:37:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3266,
																		"name": "isSell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3067,
																		"src": "2527:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(uint256 => bool))"
																		}
																	},
																	"id": 3268,
																	"indexExpression": {
																		"id": 3267,
																		"name": "tokenOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3260,
																		"src": "2534:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2527:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 3270,
																"indexExpression": {
																	"id": 3269,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3256,
																	"src": "2546:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2527:27:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2557:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2527:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206973206e6f742061742073616c65",
															"id": 3273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2563:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
																"typeString": "literal_string \"Token is not at sale\""
															},
															"value": "Token is not at sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72d6e82fcf04437fc42fbd533288e2fb988da0a57abc85411fd32c0177abfbb8",
																"typeString": "literal_string \"Token is not at sale\""
															}
														],
														"id": 3265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2519:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:67:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3275,
												"nodeType": "ExpressionStatement",
												"src": "2519:67:17"
											},
											{
												"assignments": [
													3277
												],
												"declarations": [
													{
														"constant": false,
														"id": 3277,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "2607:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 3336,
														"src": "2599:13:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3276,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2599:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3280,
												"initialValue": {
													"expression": {
														"id": 3278,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2615:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2619:6:17",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2615:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2599:26:17"
											},
											{
												"assignments": [
													3282
												],
												"declarations": [
													{
														"constant": false,
														"id": 3282,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2644:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 3336,
														"src": "2636:13:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2636:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3287,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3283,
															"name": "nfts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3078,
															"src": "2652:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$3061_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NFT storage ref)"
															}
														},
														"id": 3285,
														"indexExpression": {
															"id": 3284,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3256,
															"src": "2657:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2652:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$3061_storage",
															"typeString": "struct NFTMarketplace.NFT storage ref"
														}
													},
													"id": 3286,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2666:5:17",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3060,
													"src": "2652:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2636:35:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3289,
																"name": "tokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3260,
																"src": "2690:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3290,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3277,
																"src": "2704:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2690:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742062757920796f7572206f776e204e4654",
															"id": 3292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2711:25:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
																"typeString": "literal_string \"Cannot buy your own NFT\""
															},
															"value": "Cannot buy your own NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac3e45816bda8dc820919e382b7d1b646106c7d91795ad0d20f7673c058e493f",
																"typeString": "literal_string \"Cannot buy your own NFT\""
															}
														],
														"id": 3288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2682:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3294,
												"nodeType": "ExpressionStatement",
												"src": "2682:55:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3296,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2756:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2760:5:17",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2756:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3298,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3282,
																"src": "2769:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2756:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537570706c792045786163742066756e64",
															"id": 3300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2776:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
																"typeString": "literal_string \"Supply Exact fund\""
															},
															"value": "Supply Exact fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb5b811a1ec9c8a49b76fc615b474f6a9204638c1af2704e36dde1607520af4e",
																"typeString": "literal_string \"Supply Exact fund\""
															}
														],
														"id": 3295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2748:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2748:48:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3302,
												"nodeType": "ExpressionStatement",
												"src": "2748:48:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3304,
															"name": "tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3260,
															"src": "2861:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3305,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "2873:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3256,
															"src": "2880:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "2851:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3308,
												"nodeType": "ExpressionStatement",
												"src": "2851:37:17"
											},
											{
												"assignments": [
													3310
												],
												"declarations": [
													{
														"constant": false,
														"id": 3310,
														"mutability": "mutable",
														"name": "royalties",
														"nameLocation": "2959:9:17",
														"nodeType": "VariableDeclaration",
														"scope": 3336,
														"src": "2951:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2951:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3317,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3311,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3282,
																	"src": "2972:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3312,
																	"name": "royaltyPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3054,
																	"src": "2980:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2972:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3314,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2971:27:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3001:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2971:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2951:53:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3323,
															"name": "royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "3070:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3320,
																	"name": "contractOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3056,
																	"src": "3046:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3038:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3318,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3038:8:17",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3038:22:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3061:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3038:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3038:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3325,
												"nodeType": "ExpressionStatement",
												"src": "3038:42:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3331,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3282,
																"src": "3206:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3332,
																"name": "royalties",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3310,
																"src": "3214:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3206:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3328,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3260,
																	"src": "3185:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3177:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3326,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3177:8:17",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3177:19:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3197:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3177:28:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3177:47:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3335,
												"nodeType": "ExpressionStatement",
												"src": "3177:47:17"
											}
										]
									},
									"functionSelector": "a37365e0",
									"id": 3337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BuyNFT",
									"nameLocation": "2410:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2425:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3337,
												"src": "2417:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:17:17"
									},
									"returnParameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:0:17"
									},
									"scope": 3364,
									"src": "2401:833:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										22
									],
									"body": {
										"id": 3362,
										"nodeType": "Block",
										"src": "3368:156:17",
										"statements": [
											{
												"assignments": [
													3350
												],
												"declarations": [
													{
														"constant": false,
														"id": 3350,
														"mutability": "mutable",
														"name": "royalties",
														"nameLocation": "3387:9:17",
														"nodeType": "VariableDeclaration",
														"scope": 3362,
														"src": "3379:17:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3379:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3357,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3341,
																	"src": "3400:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3352,
																	"name": "royaltyPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3054,
																	"src": "3408:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3400:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3354,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3399:27:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3429:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3399:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3379:53:17"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3358,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3056,
															"src": "3451:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3359,
															"name": "royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3350,
															"src": "3466:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3360,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3450:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 3348,
												"id": 3361,
												"nodeType": "Return",
												"src": "3443:33:17"
											}
										]
									},
									"functionSelector": "2a55205a",
									"id": 3363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "3251:11:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3309:8:17"
									},
									"parameters": {
										"id": 3342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3339,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3271:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "3263:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3288:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "3280:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:32:17"
									},
									"returnParameters": {
										"id": 3348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3345,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3335:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "3327:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3327:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "3353:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "3345:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3326:41:17"
									},
									"scope": 3364,
									"src": "3242:282:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3365,
							"src": "435:3092:17",
							"usedErrors": [
								99,
								104,
								113,
								118,
								123,
								130,
								135,
								140
							],
							"usedEvents": [
								39,
								46,
								1213,
								1222,
								1231
							]
						}
					],
					"src": "33:3496:17"
				},
				"id": 17
			}
		}
	}
}